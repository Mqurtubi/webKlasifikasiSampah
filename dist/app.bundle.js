/*! For license information please see app.bundle.js.LICENSE.txt */
(()=>{var e={936:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var r=n(354),s=n.n(r),a=n(314),i=n.n(a)()(s());i.push([e.id,"@media screen and (max-width: 1400px) {\n\n  #navbar {\n    padding: 0 10px;\n  }\n\n  #main {\n    padding-block: 0 10px;\n  }\n\n  #deskripsi h2 {\n    font-size: 30px;\n  }\n\n  #container {\n    margin-block: 0;\n  }\n\n  #file {\n    width: 400px;\n    height: 300px;\n  }\n\n  #file #labelFile {\n    top: -50px;\n    left: 0;\n    font-size: 24px;\n  }\n\n  #file #logoFile {\n    top: 50px;\n  }\n\n  #containerFile {\n    margin-bottom: 35px;\n  }\n\n  #main #containerHome {\n    margin-bottom: 46px;\n  }\n\n  #main #containerHome .intro {\n    width: 400px;\n    margin-right: 100px;\n  }\n\n  #main #containerHome #kuning {\n    top: -30px;\n  }\n\n  #main #containerHome #biru {\n    top: 5px;\n  }\n\n  #main #containerHome .intro h1 {\n    top: 80px;\n  }\n\n  #main #containerHome .bckGroundHome img {\n    width: 725px;\n  }\n\n  #main #containerHome .intro p {\n    font-size: 18px;\n  }\n\n  #buttonKlasifikasi {\n    width: 400px;\n  }\n\n  #file #logoFile img {\n    width: 200px;\n  }\n\n  footer {\n    padding: 25px 0;\n    margin-top: 0;\n  }\n}\n\n@media only screen and (max-width: 600px) {\n\n  body,\n  html {\n    height: 0;\n    overflow: visible;\n  }\n\n  body {\n    background-color: blue;\n  }\n\n  #navbar #logo {\n    margin-left: 10px;\n  }\n\n  #navbar #logo h1 {\n    font-size: 18px;\n  }\n\n  #navbar #link {\n    display: none;\n  }\n\n  #navbar #logo img {\n    width: 35px;\n  }\n\n  #hamburgerMenu {\n    display: inline-block;\n  }\n\n  #deskripsi h2 {\n    font-size: 25px;\n    margin-top: 30px;\n  }\n\n  #main {\n    margin-top: 10px;\n  }\n\n  #main #containerHome {\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n  }\n\n  #main #containerHome .intro {\n    width: 300px;\n    text-align: left;\n    margin-right: 0;\n    margin-left: 30px;\n  }\n\n  #main #containerHome .intro p {\n    font-size: 16px;\n    padding-top: 120px;\n  }\n\n  #main #containerHome .bckGroundHome img {\n    width: 100%;\n  }\n\n  #main #containerHome .intro h1 {\n    font-size: 30px;\n  }\n\n  #main #containerHome #kuning {\n    top: 30px;\n    left: 90px;\n  }\n\n  #main #containerHome #biru {\n    top: 55px;\n    left: 140px;\n  }\n\n  #file {\n    width: 300px;\n    height: 250px;\n    margin: auto;\n  }\n\n  #file #labelFile {\n    width: 160px;\n    font-size: 15px;\n    top: -20px;\n    left: 70px;\n  }\n\n  #file #logoFile {\n    top: 25px;\n  }\n\n  #file #logoFile img {\n    width: 150px;\n  }\n\n  #container {\n    flex-direction: column;\n    margin-block: 40px;\n  }\n\n  #containerFile {\n    margin: 0px auto;\n  }\n\n  #buttonKlasifikasi {\n    width: 300px;\n  }\n\n  #containerHasil {\n    margin-top: 30px;\n  }\n\n  #hasil {\n    width: 350px;\n  }\n\n  #hasil p {\n    padding: 24px;\n  }\n\n  .progressbar-text {\n    left: 7px;\n  }\n\n  #headHasil #hasilKlasifikasi,\n  #headHasil #penagulangan {\n    font-size: 16px;\n  }\n\n  #hasil table tr th {\n    font-size: 14px;\n    padding: 10px;\n  }\n\n  #hasil h2 {\n    padding: 20px;\n    font-size: 18px;\n  }\n\n  footer {\n    padding: 15px 0;\n    margin-top: 4px;\n  }\n\n  footer p {\n    font-size: 14px;\n  }\n}","",{version:3,sources:["webpack://./src/styles/responsive.css"],names:[],mappings:"AAAA;;EAEE;IACE,eAAe;EACjB;;EAEA;IACE,qBAAqB;EACvB;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,YAAY;IACZ,aAAa;EACf;;EAEA;IACE,UAAU;IACV,OAAO;IACP,eAAe;EACjB;;EAEA;IACE,SAAS;EACX;;EAEA;IACE,mBAAmB;EACrB;;EAEA;IACE,mBAAmB;EACrB;;EAEA;IACE,YAAY;IACZ,mBAAmB;EACrB;;EAEA;IACE,UAAU;EACZ;;EAEA;IACE,QAAQ;EACV;;EAEA;IACE,SAAS;EACX;;EAEA;IACE,YAAY;EACd;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,YAAY;EACd;;EAEA;IACE,YAAY;EACd;;EAEA;IACE,eAAe;IACf,aAAa;EACf;AACF;;AAEA;;EAEE;;IAEE,SAAS;IACT,iBAAiB;EACnB;;EAEA;IACE,sBAAsB;EACxB;;EAEA;IACE,iBAAiB;EACnB;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,aAAa;EACf;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,qBAAqB;EACvB;;EAEA;IACE,eAAe;IACf,gBAAgB;EAClB;;EAEA;IACE,gBAAgB;EAClB;;EAEA;IACE,sBAAsB;IACtB,uBAAuB;IACvB,uBAAuB;EACzB;;EAEA;IACE,YAAY;IACZ,gBAAgB;IAChB,eAAe;IACf,iBAAiB;EACnB;;EAEA;IACE,eAAe;IACf,kBAAkB;EACpB;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,SAAS;IACT,UAAU;EACZ;;EAEA;IACE,SAAS;IACT,WAAW;EACb;;EAEA;IACE,YAAY;IACZ,aAAa;IACb,YAAY;EACd;;EAEA;IACE,YAAY;IACZ,eAAe;IACf,UAAU;IACV,UAAU;EACZ;;EAEA;IACE,SAAS;EACX;;EAEA;IACE,YAAY;EACd;;EAEA;IACE,sBAAsB;IACtB,kBAAkB;EACpB;;EAEA;IACE,gBAAgB;EAClB;;EAEA;IACE,YAAY;EACd;;EAEA;IACE,gBAAgB;EAClB;;EAEA;IACE,YAAY;EACd;;EAEA;IACE,aAAa;EACf;;EAEA;IACE,SAAS;EACX;;EAEA;;IAEE,eAAe;EACjB;;EAEA;IACE,eAAe;IACf,aAAa;EACf;;EAEA;IACE,aAAa;IACb,eAAe;EACjB;;EAEA;IACE,eAAe;IACf,eAAe;EACjB;;EAEA;IACE,eAAe;EACjB;AACF",sourcesContent:["@media screen and (max-width: 1400px) {\r\n\r\n  #navbar {\r\n    padding: 0 10px;\r\n  }\r\n\r\n  #main {\r\n    padding-block: 0 10px;\r\n  }\r\n\r\n  #deskripsi h2 {\r\n    font-size: 30px;\r\n  }\r\n\r\n  #container {\r\n    margin-block: 0;\r\n  }\r\n\r\n  #file {\r\n    width: 400px;\r\n    height: 300px;\r\n  }\r\n\r\n  #file #labelFile {\r\n    top: -50px;\r\n    left: 0;\r\n    font-size: 24px;\r\n  }\r\n\r\n  #file #logoFile {\r\n    top: 50px;\r\n  }\r\n\r\n  #containerFile {\r\n    margin-bottom: 35px;\r\n  }\r\n\r\n  #main #containerHome {\r\n    margin-bottom: 46px;\r\n  }\r\n\r\n  #main #containerHome .intro {\r\n    width: 400px;\r\n    margin-right: 100px;\r\n  }\r\n\r\n  #main #containerHome #kuning {\r\n    top: -30px;\r\n  }\r\n\r\n  #main #containerHome #biru {\r\n    top: 5px;\r\n  }\r\n\r\n  #main #containerHome .intro h1 {\r\n    top: 80px;\r\n  }\r\n\r\n  #main #containerHome .bckGroundHome img {\r\n    width: 725px;\r\n  }\r\n\r\n  #main #containerHome .intro p {\r\n    font-size: 18px;\r\n  }\r\n\r\n  #buttonKlasifikasi {\r\n    width: 400px;\r\n  }\r\n\r\n  #file #logoFile img {\r\n    width: 200px;\r\n  }\r\n\r\n  footer {\r\n    padding: 25px 0;\r\n    margin-top: 0;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 600px) {\r\n\r\n  body,\r\n  html {\r\n    height: 0;\r\n    overflow: visible;\r\n  }\r\n\r\n  body {\r\n    background-color: blue;\r\n  }\r\n\r\n  #navbar #logo {\r\n    margin-left: 10px;\r\n  }\r\n\r\n  #navbar #logo h1 {\r\n    font-size: 18px;\r\n  }\r\n\r\n  #navbar #link {\r\n    display: none;\r\n  }\r\n\r\n  #navbar #logo img {\r\n    width: 35px;\r\n  }\r\n\r\n  #hamburgerMenu {\r\n    display: inline-block;\r\n  }\r\n\r\n  #deskripsi h2 {\r\n    font-size: 25px;\r\n    margin-top: 30px;\r\n  }\r\n\r\n  #main {\r\n    margin-top: 10px;\r\n  }\r\n\r\n  #main #containerHome {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n  }\r\n\r\n  #main #containerHome .intro {\r\n    width: 300px;\r\n    text-align: left;\r\n    margin-right: 0;\r\n    margin-left: 30px;\r\n  }\r\n\r\n  #main #containerHome .intro p {\r\n    font-size: 16px;\r\n    padding-top: 120px;\r\n  }\r\n\r\n  #main #containerHome .bckGroundHome img {\r\n    width: 100%;\r\n  }\r\n\r\n  #main #containerHome .intro h1 {\r\n    font-size: 30px;\r\n  }\r\n\r\n  #main #containerHome #kuning {\r\n    top: 30px;\r\n    left: 90px;\r\n  }\r\n\r\n  #main #containerHome #biru {\r\n    top: 55px;\r\n    left: 140px;\r\n  }\r\n\r\n  #file {\r\n    width: 300px;\r\n    height: 250px;\r\n    margin: auto;\r\n  }\r\n\r\n  #file #labelFile {\r\n    width: 160px;\r\n    font-size: 15px;\r\n    top: -20px;\r\n    left: 70px;\r\n  }\r\n\r\n  #file #logoFile {\r\n    top: 25px;\r\n  }\r\n\r\n  #file #logoFile img {\r\n    width: 150px;\r\n  }\r\n\r\n  #container {\r\n    flex-direction: column;\r\n    margin-block: 40px;\r\n  }\r\n\r\n  #containerFile {\r\n    margin: 0px auto;\r\n  }\r\n\r\n  #buttonKlasifikasi {\r\n    width: 300px;\r\n  }\r\n\r\n  #containerHasil {\r\n    margin-top: 30px;\r\n  }\r\n\r\n  #hasil {\r\n    width: 350px;\r\n  }\r\n\r\n  #hasil p {\r\n    padding: 24px;\r\n  }\r\n\r\n  .progressbar-text {\r\n    left: 7px;\r\n  }\r\n\r\n  #headHasil #hasilKlasifikasi,\r\n  #headHasil #penagulangan {\r\n    font-size: 16px;\r\n  }\r\n\r\n  #hasil table tr th {\r\n    font-size: 14px;\r\n    padding: 10px;\r\n  }\r\n\r\n  #hasil h2 {\r\n    padding: 20px;\r\n    font-size: 18px;\r\n  }\r\n\r\n  footer {\r\n    padding: 15px 0;\r\n    margin-top: 4px;\r\n  }\r\n\r\n  footer p {\r\n    font-size: 14px;\r\n  }\r\n}"],sourceRoot:""}]);const o=i},919:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var r=n(354),s=n.n(r),a=n(314),i=n.n(a)()(s());i.push([e.id,'* {\n  padding: 0;\n  margin: 0;\n  font-family: "Archivo", sans-serif;\n  font-optical-sizing: auto;\n  font-style: normal;\n  font-variation-settings: "wdth" 100;\n  background-color: #1e1e1e;\n  color: white;\n}\nbody,\nhtml {\n  height: 100%;\n}\n\n#navbar {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n}\n\n#navbar #logo {\n  margin-left: 30px;\n}\n#navbar #link {\n  margin-right: 50px;\n}\n#navbar #link a {\n  text-decoration: none;\n  padding: 10px 20px;\n  font-family: "Archivo Black", sans-serif;\n  font-weight: 400;\n  font-style: normal;\n}\n\n#navbar #logo img {\n  width: 75px;\n}\n#navbar #logo {\n  display: flex;\n  align-items: center;\n}\n#navbar #logo a {\n  text-decoration: none;\n}\n#navbar {\n  letter-spacing: 3px;\n  font-family: "Archivo Black", sans-serif;\n  font-weight: 400;\n  font-style: normal;\n}\n#hamburgerMenu {\n  position: absolute;\n  right: 10px;\n  top: 15px;\n  display: none;\n  z-index: 99;\n}\n#btnHamburger {\n  border: none;\n  margin-left: 150px;\n  outline: none;\n  box-shadow: none;\n}\n#btnHamburger i {\n  font-size: 25px;\n  padding: 5px;\n  color: white;\n}\n#link2 {\n  border-radius: 5px;\n  border: 1px solid white;\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 10px;\n  z-index: 99;\n}\n#link2 ul {\n  list-style: none;\n}\n#link2 a {\n  display: block;\n  padding: 10px 0;\n  margin: 20px;\n}\n\n#main {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  padding-block: 0 30px;\n  line-height: 25px;\n  margin-block: 25px 20px;\n}\n#main #containerHome {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  position: relative;\n}\n#main #containerHome #kuning {\n  position: absolute;\n  top: 20px;\n  left: 130px;\n  background-color: transparent;\n}\n#main #containerHome #biru {\n  position: absolute;\n  top: 60px;\n  left: 255px;\n  background-color: transparent;\n}\n#main #containerHome .intro h1 {\n  position: absolute;\n  background-color: transparent;\n  top: 135px;\n  font-size: 40px;\n}\n#main #containerHome .intro {\n  text-align: justify;\n  width: 500px;\n  margin-right: 120px;\n  padding-top: 70px;\n  line-height: 30px;\n}\n#main #containerHome #btnMulai a {\n  padding: 15px 40px;\n  background-color: #ffc107;\n  text-decoration: none;\n  font-family: "Archivo Black", sans-serif;\n  font-weight: 1000;\n  font-style: normal;\n  font-size: 25px;\n  color: #000;\n}\n#main #containerHome #btnMulai {\n  padding: 15px 25px;\n  border-radius: 17px;\n  outline: none;\n  box-shadow: none;\n  border: none;\n  background-color: #ffc107;\n}\n#main #containerHome .intro p {\n  padding-block: 35px 25px;\n  font-size: 22px;\n}\n#main #containerHome .bckGroundHome img {\n  width: 895px;\n}\n#deskripsi h2 {\n  padding: 10px;\n  font-size: 50px;\n  font-family: "Archivo Black", sans-serif;\n  font-weight: 400;\n  font-style: normal;\n  letter-spacing: 3px;\n}\n\n#file {\n  display: flex;\n  flex-direction: column;\n  border: 1px #ffc849 dashed;\n  margin: 0 auto 30px auto;\n  border-radius: 25px;\n  width: 500px;\n  height: 400px;\n  position: relative;\n}\n#file input {\n  opacity: 0;\n}\n#file #labelFile {\n  position: relative;\n  top: -80px;\n  width: 400px;\n  left: 46px;\n  font-size: 30px;\n}\n#file #logoFile {\n  position: relative;\n  top: 80px;\n}\n#containerFile {\n  align-self: center;\n  margin-top: 50px;\n  margin-right: 50px;\n}\n\n#imagePreview {\n  position: relative;\n}\n\n#buttonKlasifikasi {\n  background-color: #ad9866;\n  color: black;\n  padding: 15px;\n  width: 500px;\n  border-radius: 15px;\n  font-size: 20px;\n  margin-top: 10px;\n}\n\n#buttonExit {\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 10px;\n  color: red;\n  background: none;\n  font-size: 30px;\n  border: none;\n  outline: none;\n  box-shadow: none;\n}\n\n#imageUpload {\n  margin: auto;\n  width: 50%;\n}\n\n#containerHasil {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n#containerHasil button {\n  margin-right: 0;\n  padding: 10px 30px 20px 30px;\n  border-bottom: none;\n}\n\n#container {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n}\n\n#hasil {\n  border: 6px solid #ffc849;\n  border-radius: 0 10px 10px 10px;\n  width: 600px;\n}\n\n#hasil hr {\n  border: 2px solid #ffc849;\n}\n\n#hasil table tr th {\n  font-size: 20px;\n  border-radius: 1px solid white;\n  text-align: justify;\n  padding: 15px 20px;\n}\n\n#hasil p {\n  padding: 31.5px;\n  text-align: justify;\n}\n#hasil ul {\n  padding-inline: 35px;\n}\n#hasil ul li {\n  text-align: justify;\n  padding-bottom: 20px;\n}\n#hasil h2 {\n  padding: 30px;\n}\n\n#hasil span {\n  padding-left: 30px;\n}\n\n#headHasil {\n  align-self: start;\n  display: flex;\n  flex-direction: row;\n}\n\n#headHasil #hasilKlasifikasi,\n#headHasil #penagulangan {\n  font-size: 20px;\n  margin-right: 2px;\n  color: black;\n  font-weight: bolder;\n  background-color: #ffc849;\n  border: 6px solid #ffc849;\n  border-radius: 33px 33px 0 0;\n}\n\n#progresBar {\n  position: relative;\n}\n#progresBar2 {\n  position: relative;\n}\n.fa-xmark {\n  background-color: transparent;\n  width: 50px;\n  color: black;\n}\nfooter {\n  background-color: #ffc107;\n  text-align: center;\n  border-radius: 20px;\n  padding: 25px 0;\n  width: 100%;\n  flex-shrink: 0;\n  margin-top: 90px;\n}\n\nfooter p {\n  background-color: #ffc107;\n  color: #000;\n  font-size: 20px;\n}\nfooter a {\n  color: #000;\n  font-weight: 700px;\n  text-decoration: none;\n  background-color: #ffc107;\n}\n\nfooter a:hover {\n  color: #000;\n}\n.button-loading {\n  position: relative;\n}\n\n.button-loading::after {\n  content: "";\n  position: absolute;\n  top: 46%;\n  left: 30%;\n  width: 20px;\n  height: 20px;\n  margin-top: -10px;\n  margin-left: -10px;\n  border: 2px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 2px solid black;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n',"",{version:3,sources:["webpack://./src/styles/style.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,SAAS;EACT,kCAAkC;EAClC,yBAAyB;EACzB,kBAAkB;EAClB,mCAAmC;EACnC,yBAAyB;EACzB,YAAY;AACd;AACA;;EAEE,YAAY;AACd;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,mBAAmB;EACnB,8BAA8B;EAC9B,aAAa;AACf;;AAEA;EACE,iBAAiB;AACnB;AACA;EACE,kBAAkB;AACpB;AACA;EACE,qBAAqB;EACrB,kBAAkB;EAClB,wCAAwC;EACxC,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,WAAW;AACb;AACA;EACE,aAAa;EACb,mBAAmB;AACrB;AACA;EACE,qBAAqB;AACvB;AACA;EACE,mBAAmB;EACnB,wCAAwC;EACxC,gBAAgB;EAChB,kBAAkB;AACpB;AACA;EACE,kBAAkB;EAClB,WAAW;EACX,SAAS;EACT,aAAa;EACb,WAAW;AACb;AACA;EACE,YAAY;EACZ,kBAAkB;EAClB,aAAa;EACb,gBAAgB;AAClB;AACA;EACE,eAAe;EACf,YAAY;EACZ,YAAY;AACd;AACA;EACE,kBAAkB;EAClB,uBAAuB;EACvB,aAAa;EACb,kBAAkB;EAClB,SAAS;EACT,WAAW;EACX,WAAW;AACb;AACA;EACE,gBAAgB;AAClB;AACA;EACE,cAAc;EACd,eAAe;EACf,YAAY;AACd;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,kBAAkB;EAClB,qBAAqB;EACrB,iBAAiB;EACjB,uBAAuB;AACzB;AACA;EACE,aAAa;EACb,mBAAmB;EACnB,mBAAmB;EACnB,kBAAkB;AACpB;AACA;EACE,kBAAkB;EAClB,SAAS;EACT,WAAW;EACX,6BAA6B;AAC/B;AACA;EACE,kBAAkB;EAClB,SAAS;EACT,WAAW;EACX,6BAA6B;AAC/B;AACA;EACE,kBAAkB;EAClB,6BAA6B;EAC7B,UAAU;EACV,eAAe;AACjB;AACA;EACE,mBAAmB;EACnB,YAAY;EACZ,mBAAmB;EACnB,iBAAiB;EACjB,iBAAiB;AACnB;AACA;EACE,kBAAkB;EAClB,yBAAyB;EACzB,qBAAqB;EACrB,wCAAwC;EACxC,iBAAiB;EACjB,kBAAkB;EAClB,eAAe;EACf,WAAW;AACb;AACA;EACE,kBAAkB;EAClB,mBAAmB;EACnB,aAAa;EACb,gBAAgB;EAChB,YAAY;EACZ,yBAAyB;AAC3B;AACA;EACE,wBAAwB;EACxB,eAAe;AACjB;AACA;EACE,YAAY;AACd;AACA;EACE,aAAa;EACb,eAAe;EACf,wCAAwC;EACxC,gBAAgB;EAChB,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,0BAA0B;EAC1B,wBAAwB;EACxB,mBAAmB;EACnB,YAAY;EACZ,aAAa;EACb,kBAAkB;AACpB;AACA;EACE,UAAU;AACZ;AACA;EACE,kBAAkB;EAClB,UAAU;EACV,YAAY;EACZ,UAAU;EACV,eAAe;AACjB;AACA;EACE,kBAAkB;EAClB,SAAS;AACX;AACA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,yBAAyB;EACzB,YAAY;EACZ,aAAa;EACb,YAAY;EACZ,mBAAmB;EACnB,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,MAAM;EACN,QAAQ;EACR,aAAa;EACb,UAAU;EACV,gBAAgB;EAChB,eAAe;EACf,YAAY;EACZ,aAAa;EACb,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,eAAe;EACf,4BAA4B;EAC5B,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,mBAAmB;EACnB,8BAA8B;EAC9B,kBAAkB;AACpB;;AAEA;EACE,yBAAyB;EACzB,+BAA+B;EAC/B,YAAY;AACd;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,eAAe;EACf,8BAA8B;EAC9B,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,eAAe;EACf,mBAAmB;AACrB;AACA;EACE,oBAAoB;AACtB;AACA;EACE,mBAAmB;EACnB,oBAAoB;AACtB;AACA;EACE,aAAa;AACf;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,iBAAiB;EACjB,aAAa;EACb,mBAAmB;AACrB;;AAEA;;EAEE,eAAe;EACf,iBAAiB;EACjB,YAAY;EACZ,mBAAmB;EACnB,yBAAyB;EACzB,yBAAyB;EACzB,4BAA4B;AAC9B;;AAEA;EACE,kBAAkB;AACpB;AACA;EACE,kBAAkB;AACpB;AACA;EACE,6BAA6B;EAC7B,WAAW;EACX,YAAY;AACd;AACA;EACE,yBAAyB;EACzB,kBAAkB;EAClB,mBAAmB;EACnB,eAAe;EACf,WAAW;EACX,cAAc;EACd,gBAAgB;AAClB;;AAEA;EACE,yBAAyB;EACzB,WAAW;EACX,eAAe;AACjB;AACA;EACE,WAAW;EACX,kBAAkB;EAClB,qBAAqB;EACrB,yBAAyB;AAC3B;;AAEA;EACE,WAAW;AACb;AACA;EACE,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;EAClB,yBAAyB;EACzB,kBAAkB;EAClB,2BAA2B;EAC3B,kCAAkC;AACpC;;AAEA;EACE;IACE,uBAAuB;EACzB;EACA;IACE,yBAAyB;EAC3B;AACF",sourcesContent:['* {\r\n  padding: 0;\r\n  margin: 0;\r\n  font-family: "Archivo", sans-serif;\r\n  font-optical-sizing: auto;\r\n  font-style: normal;\r\n  font-variation-settings: "wdth" 100;\r\n  background-color: #1e1e1e;\r\n  color: white;\r\n}\r\nbody,\r\nhtml {\r\n  height: 100%;\r\n}\r\n\r\n#navbar {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n}\r\n\r\n#navbar #logo {\r\n  margin-left: 30px;\r\n}\r\n#navbar #link {\r\n  margin-right: 50px;\r\n}\r\n#navbar #link a {\r\n  text-decoration: none;\r\n  padding: 10px 20px;\r\n  font-family: "Archivo Black", sans-serif;\r\n  font-weight: 400;\r\n  font-style: normal;\r\n}\r\n\r\n#navbar #logo img {\r\n  width: 75px;\r\n}\r\n#navbar #logo {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n#navbar #logo a {\r\n  text-decoration: none;\r\n}\r\n#navbar {\r\n  letter-spacing: 3px;\r\n  font-family: "Archivo Black", sans-serif;\r\n  font-weight: 400;\r\n  font-style: normal;\r\n}\r\n#hamburgerMenu {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 15px;\r\n  display: none;\r\n  z-index: 99;\r\n}\r\n#btnHamburger {\r\n  border: none;\r\n  margin-left: 150px;\r\n  outline: none;\r\n  box-shadow: none;\r\n}\r\n#btnHamburger i {\r\n  font-size: 25px;\r\n  padding: 5px;\r\n  color: white;\r\n}\r\n#link2 {\r\n  border-radius: 5px;\r\n  border: 1px solid white;\r\n  display: none;\r\n  position: absolute;\r\n  top: 60px;\r\n  right: 10px;\r\n  z-index: 99;\r\n}\r\n#link2 ul {\r\n  list-style: none;\r\n}\r\n#link2 a {\r\n  display: block;\r\n  padding: 10px 0;\r\n  margin: 20px;\r\n}\r\n\r\n#main {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  padding-block: 0 30px;\r\n  line-height: 25px;\r\n  margin-block: 25px 20px;\r\n}\r\n#main #containerHome {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  position: relative;\r\n}\r\n#main #containerHome #kuning {\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 130px;\r\n  background-color: transparent;\r\n}\r\n#main #containerHome #biru {\r\n  position: absolute;\r\n  top: 60px;\r\n  left: 255px;\r\n  background-color: transparent;\r\n}\r\n#main #containerHome .intro h1 {\r\n  position: absolute;\r\n  background-color: transparent;\r\n  top: 135px;\r\n  font-size: 40px;\r\n}\r\n#main #containerHome .intro {\r\n  text-align: justify;\r\n  width: 500px;\r\n  margin-right: 120px;\r\n  padding-top: 70px;\r\n  line-height: 30px;\r\n}\r\n#main #containerHome #btnMulai a {\r\n  padding: 15px 40px;\r\n  background-color: #ffc107;\r\n  text-decoration: none;\r\n  font-family: "Archivo Black", sans-serif;\r\n  font-weight: 1000;\r\n  font-style: normal;\r\n  font-size: 25px;\r\n  color: #000;\r\n}\r\n#main #containerHome #btnMulai {\r\n  padding: 15px 25px;\r\n  border-radius: 17px;\r\n  outline: none;\r\n  box-shadow: none;\r\n  border: none;\r\n  background-color: #ffc107;\r\n}\r\n#main #containerHome .intro p {\r\n  padding-block: 35px 25px;\r\n  font-size: 22px;\r\n}\r\n#main #containerHome .bckGroundHome img {\r\n  width: 895px;\r\n}\r\n#deskripsi h2 {\r\n  padding: 10px;\r\n  font-size: 50px;\r\n  font-family: "Archivo Black", sans-serif;\r\n  font-weight: 400;\r\n  font-style: normal;\r\n  letter-spacing: 3px;\r\n}\r\n\r\n#file {\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px #ffc849 dashed;\r\n  margin: 0 auto 30px auto;\r\n  border-radius: 25px;\r\n  width: 500px;\r\n  height: 400px;\r\n  position: relative;\r\n}\r\n#file input {\r\n  opacity: 0;\r\n}\r\n#file #labelFile {\r\n  position: relative;\r\n  top: -80px;\r\n  width: 400px;\r\n  left: 46px;\r\n  font-size: 30px;\r\n}\r\n#file #logoFile {\r\n  position: relative;\r\n  top: 80px;\r\n}\r\n#containerFile {\r\n  align-self: center;\r\n  margin-top: 50px;\r\n  margin-right: 50px;\r\n}\r\n\r\n#imagePreview {\r\n  position: relative;\r\n}\r\n\r\n#buttonKlasifikasi {\r\n  background-color: #ad9866;\r\n  color: black;\r\n  padding: 15px;\r\n  width: 500px;\r\n  border-radius: 15px;\r\n  font-size: 20px;\r\n  margin-top: 10px;\r\n}\r\n\r\n#buttonExit {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  padding: 10px;\r\n  color: red;\r\n  background: none;\r\n  font-size: 30px;\r\n  border: none;\r\n  outline: none;\r\n  box-shadow: none;\r\n}\r\n\r\n#imageUpload {\r\n  margin: auto;\r\n  width: 50%;\r\n}\r\n\r\n#containerHasil {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n#containerHasil button {\r\n  margin-right: 0;\r\n  padding: 10px 30px 20px 30px;\r\n  border-bottom: none;\r\n}\r\n\r\n#container {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  position: relative;\r\n}\r\n\r\n#hasil {\r\n  border: 6px solid #ffc849;\r\n  border-radius: 0 10px 10px 10px;\r\n  width: 600px;\r\n}\r\n\r\n#hasil hr {\r\n  border: 2px solid #ffc849;\r\n}\r\n\r\n#hasil table tr th {\r\n  font-size: 20px;\r\n  border-radius: 1px solid white;\r\n  text-align: justify;\r\n  padding: 15px 20px;\r\n}\r\n\r\n#hasil p {\r\n  padding: 31.5px;\r\n  text-align: justify;\r\n}\r\n#hasil ul {\r\n  padding-inline: 35px;\r\n}\r\n#hasil ul li {\r\n  text-align: justify;\r\n  padding-bottom: 20px;\r\n}\r\n#hasil h2 {\r\n  padding: 30px;\r\n}\r\n\r\n#hasil span {\r\n  padding-left: 30px;\r\n}\r\n\r\n#headHasil {\r\n  align-self: start;\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n#headHasil #hasilKlasifikasi,\r\n#headHasil #penagulangan {\r\n  font-size: 20px;\r\n  margin-right: 2px;\r\n  color: black;\r\n  font-weight: bolder;\r\n  background-color: #ffc849;\r\n  border: 6px solid #ffc849;\r\n  border-radius: 33px 33px 0 0;\r\n}\r\n\r\n#progresBar {\r\n  position: relative;\r\n}\r\n#progresBar2 {\r\n  position: relative;\r\n}\r\n.fa-xmark {\r\n  background-color: transparent;\r\n  width: 50px;\r\n  color: black;\r\n}\r\nfooter {\r\n  background-color: #ffc107;\r\n  text-align: center;\r\n  border-radius: 20px;\r\n  padding: 25px 0;\r\n  width: 100%;\r\n  flex-shrink: 0;\r\n  margin-top: 90px;\r\n}\r\n\r\nfooter p {\r\n  background-color: #ffc107;\r\n  color: #000;\r\n  font-size: 20px;\r\n}\r\nfooter a {\r\n  color: #000;\r\n  font-weight: 700px;\r\n  text-decoration: none;\r\n  background-color: #ffc107;\r\n}\r\n\r\nfooter a:hover {\r\n  color: #000;\r\n}\r\n.button-loading {\r\n  position: relative;\r\n}\r\n\r\n.button-loading::after {\r\n  content: "";\r\n  position: absolute;\r\n  top: 46%;\r\n  left: 30%;\r\n  width: 20px;\r\n  height: 20px;\r\n  margin-top: -10px;\r\n  margin-left: -10px;\r\n  border: 2px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 2px solid black;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n'],sourceRoot:""}]);const o=i},314:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,s,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var o=0;o<this.length;o++){var l=this[o][0];null!=l&&(i[l]=!0)}for(var u=0;u<e.length;u++){var c=[].concat(e[u]);r&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),s&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=s):c[4]="".concat(s)),t.push(c))}},t}},354:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(s," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},570:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},a={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=a[e])?r:(n=l(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=l(e,e<0?-1:0,!1),i&&(s[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=d)return k}else{if(e<=-f)return I;if(e+1>=f)return v}return e<0?o(-e,t).neg():l(e%p|0,e/p|0,t)}function l(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=o(u(n,8)),a=g,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+l),n);if(l<8){var p=o(u(n,l));a=a.mul(p).add(o(h))}else a=(a=a.mul(s)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var p=4294967296,d=p*p,f=d/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var w=i(-1);n.NEG_ONE=w;var v=l(-1,2147483647,!1);n.MAX_VALUE=v;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=l(0,-2147483648,!1);n.MIN_VALUE=I;var N=n.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=o(u(e,6),this.unsigned),a=this,i="";;){var l=a.div(s),c=(a.sub(l.mul(s)).toInt()>>>0).toString(e);if((a=l).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return!(1&~this.low)},N.isEven=function(){return!(1&this.low)},N.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return this.comp(e)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return this.comp(e)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},N.neg=N.negate,N.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,p=0,d=0,f=0;return d+=(f+=a+(65535&e.low))>>>16,p+=(d+=s+u)>>>16,c+=(p+=n+o)>>>16,c+=t+i,l((d&=65535)<<16|(f&=65535),(c&=65535)<<16|(p&=65535),this.unsigned)},N.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,i=65535&this.low,u=e.high>>>16,c=65535&e.high,p=e.low>>>16,d=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*d)>>>16,y+=(b+=a*d)>>>16,b&=65535,y+=(b+=i*p)>>>16,f+=(y+=s*d)>>>16,y&=65535,f+=(y+=a*p)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*d+s*p+a*c+i*u,l((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,s,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;a=y}else{if(this.eq(I))return e.eq(b)||e.eq(w)?I:e.eq(I)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:w:(s=this.sub(e.mul(n)),a=n.add(s.div(e)));if(e.eq(I))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:u(2,i-48),p=o(n),d=p.mul(e);d.isNegative()||d.gt(s);)d=(p=o(n-=c,this.unsigned)).mul(e);p.isZero()&&(p=b),a=a.add(p),s=s.sub(d)}return a},N.div=N.divide,N.modulo=function(e){return r(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return l(~this.low,~this.high,this.unsigned)},N.and=function(e){return r(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return r(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return r(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},941:(e,t,n)=>{e.exports=function e(t,n,r){function s(i,o){if(!n[i]){if(!t[i]){if(a)return a(i,!0);var l=new Error("Cannot find module '"+i+"'");throw l.code="MODULE_NOT_FOUND",l}var u=n[i]={exports:{}};t[i][0].call(u.exports,(function(e){return s(t[i][1][e]||e)}),u,u.exports,e,t,n,r)}return n[i].exports}for(var a=void 0,i=0;i<r.length;i++)s(r[i]);return s}({1:[function(e,t,r){(function(e){(function(){var n="__lodash_hash_undefined__",s=9007199254740991,a="[object Arguments]",i="[object AsyncFunction]",o="[object Function]",l="[object GeneratorFunction]",u="[object Null]",c="[object Object]",h="[object Proxy]",p="[object Undefined]",d=/^\[object .+?Constructor\]$/,f=/^(?:0|[1-9]\d*)$/,m={};m["[object Float32Array]"]=m["[object Float64Array]"]=m["[object Int8Array]"]=m["[object Int16Array]"]=m["[object Int32Array]"]=m["[object Uint8Array]"]=m["[object Uint8ClampedArray]"]=m["[object Uint16Array]"]=m["[object Uint32Array]"]=!0,m[a]=m["[object Array]"]=m["[object ArrayBuffer]"]=m["[object Boolean]"]=m["[object DataView]"]=m["[object Date]"]=m["[object Error]"]=m[o]=m["[object Map]"]=m["[object Number]"]=m[c]=m["[object RegExp]"]=m["[object Set]"]=m["[object String]"]=m["[object WeakMap]"]=!1;var g="object"==typeof e&&e&&e.Object===Object&&e,y="object"==typeof self&&self&&self.Object===Object&&self,b=g||y||Function("return this")(),x="object"==typeof r&&r&&!r.nodeType&&r,w=x&&"object"==typeof t&&t&&!t.nodeType&&t,v=w&&w.exports===x,k=v&&g.process,I=function(){try{return w&&w.require&&w.require("util").types||k&&k.binding&&k.binding("util")}catch(e){}}(),N=I&&I.isTypedArray;var A,S,C,E=Array.prototype,T=Function.prototype,$=Object.prototype,_=b["__core-js_shared__"],R=T.toString,O=$.hasOwnProperty,F=(A=/[^.]+$/.exec(_&&_.keys&&_.keys.IE_PROTO||""))?"Symbol(src)_1."+A:"",D=$.toString,M=R.call(Object),L=RegExp("^"+R.call(O).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),B=v?b.Buffer:void 0,z=b.Symbol,P=b.Uint8Array,W=B?B.allocUnsafe:void 0,V=(S=Object.getPrototypeOf,C=Object,function(e){return S(C(e))}),U=Object.create,G=$.propertyIsEnumerable,j=E.splice,H=z?z.toStringTag:void 0,q=function(){try{var e=be(Object,"defineProperty");return e({},"",{}),e}catch(e){}}(),K=B?B.isBuffer:void 0,X=Math.max,Y=Date.now,Z=be(b,"Map"),J=be(Object,"create"),Q=function(){function e(){}return function(t){if(!$e(t))return{};if(U)return U(t);e.prototype=t;var n=new e;return e.prototype=void 0,n}}();function ee(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function te(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function ne(e){var t=-1,n=null==e?0:e.length;for(this.clear();++t<n;){var r=e[t];this.set(r[0],r[1])}}function re(e){var t=this.__data__=new te(e);this.size=t.size}function se(e,t){var n=Ae(e),r=!n&&Ne(e),s=!n&&!r&&Ce(e),a=!n&&!r&&!s&&Re(e),i=n||r||s||a,o=i?function(e,t){for(var n=-1,r=Array(e);++n<e;)r[n]=t(n);return r}(e.length,String):[],l=o.length;for(var u in e)!t&&!O.call(e,u)||i&&("length"==u||s&&("offset"==u||"parent"==u)||a&&("buffer"==u||"byteLength"==u||"byteOffset"==u)||xe(u,l))||o.push(u);return o}function ae(e,t,n){(void 0!==n&&!Ie(e[t],n)||void 0===n&&!(t in e))&&le(e,t,n)}function ie(e,t,n){var r=e[t];O.call(e,t)&&Ie(r,n)&&(void 0!==n||t in e)||le(e,t,n)}function oe(e,t){for(var n=e.length;n--;)if(Ie(e[n][0],t))return n;return-1}function le(e,t,n){"__proto__"==t&&q?q(e,t,{configurable:!0,enumerable:!0,value:n,writable:!0}):e[t]=n}ee.prototype.clear=function(){this.__data__=J?J(null):{},this.size=0},ee.prototype.delete=function(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t},ee.prototype.get=function(e){var t=this.__data__;if(J){var r=t[e];return r===n?void 0:r}return O.call(t,e)?t[e]:void 0},ee.prototype.has=function(e){var t=this.__data__;return J?void 0!==t[e]:O.call(t,e)},ee.prototype.set=function(e,t){var r=this.__data__;return this.size+=this.has(e)?0:1,r[e]=J&&void 0===t?n:t,this},te.prototype.clear=function(){this.__data__=[],this.size=0},te.prototype.delete=function(e){var t=this.__data__,n=oe(t,e);return!(n<0||(n==t.length-1?t.pop():j.call(t,n,1),--this.size,0))},te.prototype.get=function(e){var t=this.__data__,n=oe(t,e);return n<0?void 0:t[n][1]},te.prototype.has=function(e){return oe(this.__data__,e)>-1},te.prototype.set=function(e,t){var n=this.__data__,r=oe(n,e);return r<0?(++this.size,n.push([e,t])):n[r][1]=t,this},ne.prototype.clear=function(){this.size=0,this.__data__={hash:new ee,map:new(Z||te),string:new ee}},ne.prototype.delete=function(e){var t=ye(this,e).delete(e);return this.size-=t?1:0,t},ne.prototype.get=function(e){return ye(this,e).get(e)},ne.prototype.has=function(e){return ye(this,e).has(e)},ne.prototype.set=function(e,t){var n=ye(this,e),r=n.size;return n.set(e,t),this.size+=n.size==r?0:1,this},re.prototype.clear=function(){this.__data__=new te,this.size=0},re.prototype.delete=function(e){var t=this.__data__,n=t.delete(e);return this.size=t.size,n},re.prototype.get=function(e){return this.__data__.get(e)},re.prototype.has=function(e){return this.__data__.has(e)},re.prototype.set=function(e,t){var n=this.__data__;if(n instanceof te){var r=n.__data__;if(!Z||r.length<199)return r.push([e,t]),this.size=++n.size,this;n=this.__data__=new ne(r)}return n.set(e,t),this.size=n.size,this};var ue,ce=function(e,t,n){for(var r=-1,s=Object(e),a=n(e),i=a.length;i--;){var o=a[ue?i:++r];if(!1===t(s[o],o,s))break}return e};function he(e){return null==e?void 0===e?p:u:H&&H in Object(e)?function(e){var t=O.call(e,H),n=e[H];try{e[H]=void 0;var r=!0}catch(e){}var s=D.call(e);return r&&(t?e[H]=n:delete e[H]),s}(e):function(e){return D.call(e)}(e)}function pe(e){return _e(e)&&he(e)==a}function de(e){return!(!$e(e)||function(e){return!!F&&F in e}(e))&&(Ee(e)?L:d).test(function(e){if(null!=e){try{return R.call(e)}catch(e){}try{return e+""}catch(e){}}return""}(e))}function fe(e){if(!$e(e))return function(e){var t=[];if(null!=e)for(var n in Object(e))t.push(n);return t}(e);var t=we(e),n=[];for(var r in e)("constructor"!=r||!t&&O.call(e,r))&&n.push(r);return n}function me(e,t,n,r,s){e!==t&&ce(t,(function(a,i){if(s||(s=new re),$e(a))!function(e,t,n,r,s,a,i){var o=ve(e,n),l=ve(t,n),u=i.get(l);if(u)ae(e,n,u);else{var h=a?a(o,l,n+"",e,t,i):void 0,p=void 0===h;if(p){var d=Ae(l),f=!d&&Ce(l),m=!d&&!f&&Re(l);h=l,d||f||m?Ae(o)?h=o:_e(w=o)&&Se(w)?h=function(e,t){var n=-1,r=e.length;for(t||(t=Array(r));++n<r;)t[n]=e[n];return t}(o):f?(p=!1,h=function(e,t){if(t)return e.slice();var n=e.length,r=W?W(n):new e.constructor(n);return e.copy(r),r}(l,!0)):m?(p=!1,g=l,y=!0?(b=g.buffer,x=new b.constructor(b.byteLength),new P(x).set(new P(b)),x):g.buffer,h=new g.constructor(y,g.byteOffset,g.length)):h=[]:function(e){if(!_e(e)||he(e)!=c)return!1;var t=V(e);if(null===t)return!0;var n=O.call(t,"constructor")&&t.constructor;return"function"==typeof n&&n instanceof n&&R.call(n)==M}(l)||Ne(l)?(h=o,Ne(o)?h=function(e){return function(e,t,n,r){var s=!n;n||(n={});for(var a=-1,i=t.length;++a<i;){var o=t[a],l=r?r(n[o],e[o],o,n,e):void 0;void 0===l&&(l=e[o]),s?le(n,o,l):ie(n,o,l)}return n}(e,Oe(e))}(o):$e(o)&&!Ee(o)||(h=function(e){return"function"!=typeof e.constructor||we(e)?{}:Q(V(e))}(l))):p=!1}p&&(i.set(l,h),s(h,l,r,a,i),i.delete(l)),ae(e,n,h)}var g,y,b,x;var w}(e,t,i,n,me,r,s);else{var o=r?r(ve(e,i),a,i+"",e,t,s):void 0;void 0===o&&(o=a),ae(e,i,o)}}),Oe)}function ge(e,t){return ke(function(e,t,n){return t=X(void 0===t?e.length-1:t,0),function(){for(var r=arguments,s=-1,a=X(r.length-t,0),i=Array(a);++s<a;)i[s]=r[t+s];s=-1;for(var o=Array(t+1);++s<t;)o[s]=r[s];return o[t]=n(i),function(e,t,n){switch(n.length){case 0:return e.call(t);case 1:return e.call(t,n[0]);case 2:return e.call(t,n[0],n[1]);case 3:return e.call(t,n[0],n[1],n[2])}return e.apply(t,n)}(e,this,o)}}(e,t,Me),e+"")}function ye(e,t){var n,r,s=e.__data__;return("string"==(r=typeof(n=t))||"number"==r||"symbol"==r||"boolean"==r?"__proto__"!==n:null===n)?s["string"==typeof t?"string":"hash"]:s.map}function be(e,t){var n=function(e,t){return null==e?void 0:e[t]}(e,t);return de(n)?n:void 0}function xe(e,t){var n=typeof e;return!!(t=null==t?s:t)&&("number"==n||"symbol"!=n&&f.test(e))&&e>-1&&e%1==0&&e<t}function we(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||$)}function ve(e,t){if(("constructor"!==t||"function"!=typeof e[t])&&"__proto__"!=t)return e[t]}var ke=function(e){var t=0,n=0;return function(){var r=Y(),s=16-(r-n);if(n=r,s>0){if(++t>=800)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}(q?function(e,t){return q(e,"toString",{configurable:!0,enumerable:!1,value:(n=t,function(){return n}),writable:!0});var n}:Me);function Ie(e,t){return e===t||e!=e&&t!=t}var Ne=pe(function(){return arguments}())?pe:function(e){return _e(e)&&O.call(e,"callee")&&!G.call(e,"callee")},Ae=Array.isArray;function Se(e){return null!=e&&Te(e.length)&&!Ee(e)}var Ce=K||function(){return!1};function Ee(e){if(!$e(e))return!1;var t=he(e);return t==o||t==l||t==i||t==h}function Te(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=s}function $e(e){var t=typeof e;return null!=e&&("object"==t||"function"==t)}function _e(e){return null!=e&&"object"==typeof e}var Re=N?function(e){return function(t){return e(t)}}(N):function(e){return _e(e)&&Te(e.length)&&!!m[he(e)]};function Oe(e){return Se(e)?se(e,!0):fe(e)}var Fe,De=(Fe=function(e,t,n){me(e,t,n)},ge((function(e,t){var n=-1,r=t.length,s=r>1?t[r-1]:void 0,a=r>2?t[2]:void 0;for(s=Fe.length>3&&"function"==typeof s?(r--,s):void 0,a&&function(e,t,n){if(!$e(n))return!1;var r=typeof t;return!!("number"==r?Se(n)&&xe(t,n.length):"string"==r&&t in n)&&Ie(n[t],e)}(t[0],t[1],a)&&(s=r<3?void 0:s,r=1),e=Object(e);++n<r;){var i=t[n];i&&Fe(e,i,n,s)}return e})));function Me(e){return e}t.exports=De}).call(this)}).call(this,void 0!==n.g?n.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],2:[function(e,t,n){var r,s;r=self,s=function(){return function(){"use strict";var e={720:function(e,t,n){n.r(t),n.d(t,{Scene:function(){return Ze},Tweenable:function(){return be},interpolate:function(){return qe},processTweens:function(){return ce},setBezierFunction:function(){return V},shouldScheduleUpdate:function(){return de},tween:function(){return xe},unsetBezierFunction:function(){return U}});var r={};n.r(r),n.d(r,{bounce:function(){return D},bouncePast:function(){return M},easeFrom:function(){return B},easeFromTo:function(){return L},easeInBack:function(){return E},easeInCirc:function(){return N},easeInCubic:function(){return u},easeInExpo:function(){return v},easeInOutBack:function(){return $},easeInOutCirc:function(){return S},easeInOutCubic:function(){return h},easeInOutExpo:function(){return I},easeInOutQuad:function(){return l},easeInOutQuart:function(){return f},easeInOutQuint:function(){return y},easeInOutSine:function(){return w},easeInQuad:function(){return i},easeInQuart:function(){return p},easeInQuint:function(){return m},easeInSine:function(){return b},easeOutBack:function(){return T},easeOutBounce:function(){return C},easeOutCirc:function(){return A},easeOutCubic:function(){return c},easeOutExpo:function(){return k},easeOutQuad:function(){return o},easeOutQuart:function(){return d},easeOutQuint:function(){return g},easeOutSine:function(){return x},easeTo:function(){return z},elastic:function(){return _},linear:function(){return a},swingFrom:function(){return O},swingFromTo:function(){return R},swingTo:function(){return F}});var s={};n.r(s),n.d(s,{afterTween:function(){return Ve},beforeTween:function(){return We},doesApply:function(){return ze},tweenCreated:function(){return Pe}});var a=function(e){return e},i=function(e){return Math.pow(e,2)},o=function(e){return-(Math.pow(e-1,2)-1)},l=function(e){return(e/=.5)<1?.5*Math.pow(e,2):-.5*((e-=2)*e-2)},u=function(e){return Math.pow(e,3)},c=function(e){return Math.pow(e-1,3)+1},h=function(e){return(e/=.5)<1?.5*Math.pow(e,3):.5*(Math.pow(e-2,3)+2)},p=function(e){return Math.pow(e,4)},d=function(e){return-(Math.pow(e-1,4)-1)},f=function(e){return(e/=.5)<1?.5*Math.pow(e,4):-.5*((e-=2)*Math.pow(e,3)-2)},m=function(e){return Math.pow(e,5)},g=function(e){return Math.pow(e-1,5)+1},y=function(e){return(e/=.5)<1?.5*Math.pow(e,5):.5*(Math.pow(e-2,5)+2)},b=function(e){return 1-Math.cos(e*(Math.PI/2))},x=function(e){return Math.sin(e*(Math.PI/2))},w=function(e){return-.5*(Math.cos(Math.PI*e)-1)},v=function(e){return 0===e?0:Math.pow(2,10*(e-1))},k=function(e){return 1===e?1:1-Math.pow(2,-10*e)},I=function(e){return 0===e?0:1===e?1:(e/=.5)<1?.5*Math.pow(2,10*(e-1)):.5*(2-Math.pow(2,-10*--e))},N=function(e){return-(Math.sqrt(1-e*e)-1)},A=function(e){return Math.sqrt(1-Math.pow(e-1,2))},S=function(e){return(e/=.5)<1?-.5*(Math.sqrt(1-e*e)-1):.5*(Math.sqrt(1-(e-=2)*e)+1)},C=function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},E=function(e){var t=1.70158;return e*e*((t+1)*e-t)},T=function(e){var t=1.70158;return(e-=1)*e*((t+1)*e+t)+1},$=function(e){var t=1.70158;return(e/=.5)<1?e*e*((1+(t*=1.525))*e-t)*.5:.5*((e-=2)*e*((1+(t*=1.525))*e+t)+2)},_=function(e){return-1*Math.pow(4,-8*e)*Math.sin((6*e-1)*(2*Math.PI)/2)+1},R=function(e){var t=1.70158;return(e/=.5)<1?e*e*((1+(t*=1.525))*e-t)*.5:.5*((e-=2)*e*((1+(t*=1.525))*e+t)+2)},O=function(e){var t=1.70158;return e*e*((t+1)*e-t)},F=function(e){var t=1.70158;return(e-=1)*e*((t+1)*e+t)+1},D=function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?7.5625*(e-=1.5/2.75)*e+.75:e<2.5/2.75?7.5625*(e-=2.25/2.75)*e+.9375:7.5625*(e-=2.625/2.75)*e+.984375},M=function(e){return e<1/2.75?7.5625*e*e:e<2/2.75?2-(7.5625*(e-=1.5/2.75)*e+.75):e<2.5/2.75?2-(7.5625*(e-=2.25/2.75)*e+.9375):2-(7.5625*(e-=2.625/2.75)*e+.984375)},L=function(e){return(e/=.5)<1?.5*Math.pow(e,4):-.5*((e-=2)*Math.pow(e,3)-2)},B=function(e){return Math.pow(e,4)},z=function(e){return Math.pow(e,.25)};var P,W=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:.25,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.25,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.75,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.75;return function(s){return function(e,t,n,r,s,a){var i,o,l,u,c,h=0,p=0,d=0,f=function(e){return((h*e+p)*e+d)*e},m=function(e){return(3*h*e+2*p)*e+d},g=function(e){return e>=0?e:0-e};return h=1-(d=3*t)-(p=3*(r-t)-d),l=1-(c=3*n)-(u=3*(s-n)-c),i=e,o=function(e){return 1/(200*e)}(a),function(e){return((l*e+u)*e+c)*e}(function(e,t){var n,r,s,a,i,o;for(s=e,o=0;o<8;o++){if(a=f(s)-e,g(a)<t)return s;if(i=m(s),g(i)<1e-6)break;s-=a/i}if((s=e)<(n=0))return n;if(s>(r=1))return r;for(;n<r;){if(a=f(s),g(a-e)<t)return s;e>a?n=s:r=s,s=.5*(r-n)+n}return s}(i,o))}(s,e,t,n,r,1)}},V=function(e,t,n,r,s){var a=W(t,n,r,s);return a.displayName=e,a.x1=t,a.y1=n,a.x2=r,a.y2=s,be.formulas[e]=a},U=function(e){return delete be.formulas[e]};function G(e){return G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},G(e)}function j(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function H(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function q(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?H(Object(n),!0).forEach((function(t){K(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):H(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function K(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var X,Y,Z,J="linear",Q="undefined"!=typeof window?window:n.g,ee="afterTween",te="beforeTween",ne="string",re=Q.requestAnimationFrame||Q.webkitRequestAnimationFrame||Q.oRequestAnimationFrame||Q.msRequestAnimationFrame||Q.mozCancelRequestAnimationFrame&&Q.mozRequestAnimationFrame||setTimeout,se=function(){},ae=null,ie=null,oe=q({},r),le=function(e,t,n,r,s,a,i){var o,l,u,c=e<a?0:(e-a)/s,h=!1;for(var p in i&&i.call&&(h=!0,o=i(c)),t)h||(o=((l=i[p]).call?l:oe[l])(c)),u=n[p],t[p]=u+(r[p]-u)*o;return t},ue=function(e,t){var n=e._timestamp,r=e._currentState,s=e._delay;if(!(t<n+s)){var a=e._duration,i=e._targetState,o=n+s+a,l=t>o?o:t;e._hasEnded=l>=o;var u=a-(o-l),c=e._filters.length>0;if(e._hasEnded)return e._render(i,e._data,u),e.stop(!0);c&&e._applyFilter(te),l<n+s?n=a=l=1:n+=s,le(l,r,e._originalState,i,a,n,e._easing),c&&e._applyFilter(ee),e._render(r,e._data,u)}},ce=function(){for(var e,t=be.now(),n=ae;n;)e=n._next,ue(n,t),n=e},he=Date.now||function(){return+new Date},pe=!1,de=function(e){e&&pe||(pe=e,e&&fe())},fe=function e(){X=he(),pe&&re.call(Q,e,16.666666666666668),ce()},me=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:J,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(Array.isArray(t))return W.apply(void 0,function(e){return function(e){if(Array.isArray(e))return j(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return j(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?j(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(t));var r=G(t);if(oe[t])return oe[t];if(r===ne||"function"===r)for(var s in e)n[s]=t;else for(var a in e)n[a]=t[a]||J;return n},ge=function(e){e===ae?(ae=e._next)?ae._previous=null:ie=null:e===ie?(ie=e._previous)?ie._next=null:ae=null:(Y=e._previous,Z=e._next,Y._next=Z,Z._previous=Y),e._previous=e._next=null},ye="function"==typeof Promise?Promise:null;P=Symbol.toStringTag;var be=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0;(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,e),K(this,P,"Promise"),this._config={},this._data={},this._delay=0,this._filters=[],this._next=null,this._previous=null,this._timestamp=null,this._hasEnded=!1,this._resolve=null,this._reject=null,this._currentState=t||{},this._originalState={},this._targetState={},this._start=se,this._render=se,this._promiseCtor=ye,n&&this.setConfig(n)}var t;return t=[{key:"_applyFilter",value:function(e){for(var t=this._filters.length;t>0;t--){var n=this._filters[t-t][e];n&&n(this)}}},{key:"tween",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;return this._isPlaying&&this.stop(),!t&&this._config||this.setConfig(t),this._pausedAtTime=null,this._timestamp=e.now(),this._start(this.get(),this._data),this._delay&&this._render(this._currentState,this._data,0),this._resume(this._timestamp)}},{key:"setConfig",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=this._config;for(var r in t)n[r]=t[r];var s=n.promise,a=void 0===s?this._promiseCtor:s,i=n.start,o=void 0===i?se:i,l=n.finish,u=n.render,c=void 0===u?this._config.step||se:u,h=n.step,p=void 0===h?se:h;this._data=n.data||n.attachment||this._data,this._isPlaying=!1,this._pausedAtTime=null,this._scheduleId=null,this._delay=t.delay||0,this._start=o,this._render=c||p,this._duration=n.duration||500,this._promiseCtor=a,l&&(this._resolve=l);var d=t.from,f=t.to,m=void 0===f?{}:f,g=this._currentState,y=this._originalState,b=this._targetState;for(var x in d)g[x]=d[x];var w=!1;for(var v in g){var k=g[v];w||G(k)!==ne||(w=!0),y[v]=k,b[v]=m.hasOwnProperty(v)?m[v]:k}if(this._easing=me(this._currentState,n.easing,this._easing),this._filters.length=0,w){for(var I in e.filters)e.filters[I].doesApply(this)&&this._filters.push(e.filters[I]);this._applyFilter("tweenCreated")}return this}},{key:"then",value:function(e,t){var n=this;return this._promise=new this._promiseCtor((function(e,t){n._resolve=e,n._reject=t})),this._promise.then(e,t)}},{key:"catch",value:function(e){return this.then().catch(e)}},{key:"finally",value:function(e){return this.then().finally(e)}},{key:"get",value:function(){return q({},this._currentState)}},{key:"set",value:function(e){this._currentState=e}},{key:"pause",value:function(){if(this._isPlaying)return this._pausedAtTime=e.now(),this._isPlaying=!1,ge(this),this}},{key:"resume",value:function(){return this._resume()}},{key:"_resume",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e.now();return null===this._timestamp?this.tween():this._isPlaying?this._promise:(this._pausedAtTime&&(this._timestamp+=t-this._pausedAtTime,this._pausedAtTime=null),this._isPlaying=!0,null===ae?(ae=this,ie=this):(this._previous=ie,ie._next=this,ie=this),this)}},{key:"seek",value:function(t){t=Math.max(t,0);var n=e.now();return this._timestamp+t===0||(this._timestamp=n-t,ue(this,n)),this}},{key:"stop",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this._isPlaying)return this;this._isPlaying=!1,ge(this);var t=this._filters.length>0;return e&&(t&&this._applyFilter(te),le(1,this._currentState,this._originalState,this._targetState,1,0,this._easing),t&&(this._applyFilter(ee),this._applyFilter("afterTweenEnd"))),this._resolve&&this._resolve({data:this._data,state:this._currentState,tweenable:this}),this._resolve=null,this._reject=null,this}},{key:"cancel",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=this._currentState,n=this._data;return this._isPlaying?(this._reject&&this._reject({data:n,state:t,tweenable:this}),this._resolve=null,this._reject=null,this.stop(e)):this}},{key:"isPlaying",value:function(){return this._isPlaying}},{key:"hasEnded",value:function(){return this._hasEnded}},{key:"setScheduleFunction",value:function(t){e.setScheduleFunction(t)}},{key:"data",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;return e&&(this._data=q({},e)),this._data}},{key:"dispose",value:function(){for(var e in this)delete this[e]}}],t&&function(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}(e.prototype,t),e}();function xe(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=new be;return t.tween(e),t.tweenable=t,t}K(be,"now",(function(){return X})),K(be,"setScheduleFunction",(function(e){return re=e})),K(be,"filters",{}),K(be,"formulas",oe),de(!0);var we,ve,ke=/(\d|-|\.)/,Ie=/([^\-0-9.]+)/g,Ne=/[0-9.-]+/g,Ae=(we=Ne.source,ve=/,\s*/.source,new RegExp("rgba?\\(".concat(we).concat(ve).concat(we).concat(ve).concat(we,"(").concat(ve).concat(we,")?\\)"),"g")),Se=/^.*\(/,Ce=/#([0-9]|[a-f]){3,6}/gi,Ee="VAL",Te=function(e,t){return e.map((function(e,n){return"_".concat(t,"_").concat(n)}))};function $e(e){return parseInt(e,16)}var _e=function(e){return"rgb(".concat((t=e,3===(t=t.replace(/#/,"")).length&&(t=(t=t.split(""))[0]+t[0]+t[1]+t[1]+t[2]+t[2]),[$e(t.substr(0,2)),$e(t.substr(2,2)),$e(t.substr(4,2))]).join(","),")");var t},Re=function(e,t,n){var r=t.match(e),s=t.replace(e,Ee);return r&&r.forEach((function(e){return s=s.replace(Ee,n(e))})),s},Oe=function(e){for(var t in e){var n=e[t];"string"==typeof n&&n.match(Ce)&&(e[t]=Re(Ce,n,_e))}},Fe=function(e){var t=e.match(Ne),n=t.slice(0,3).map(Math.floor),r=e.match(Se)[0];if(3===t.length)return"".concat(r).concat(n.join(","),")");if(4===t.length)return"".concat(r).concat(n.join(","),",").concat(t[3],")");throw new Error("Invalid rgbChunk: ".concat(e))},De=function(e){return e.match(Ne)},Me=function(e,t){var n={};return t.forEach((function(t){n[t]=e[t],delete e[t]})),n},Le=function(e,t){return t.map((function(t){return e[t]}))},Be=function(e,t){return t.forEach((function(t){return e=e.replace(Ee,+t.toFixed(4))})),e},ze=function(e){for(var t in e._currentState)if("string"==typeof e._currentState[t])return!0;return!1};function Pe(e){var t=e._currentState;[t,e._originalState,e._targetState].forEach(Oe),e._tokenData=function(e){var t,n,r={};for(var s in e){var a=e[s];"string"==typeof a&&(r[s]={formatString:(t=a,n=void 0,n=t.match(Ie),n?(1===n.length||t.charAt(0).match(ke))&&n.unshift(""):n=["",""],n.join(Ee)),chunkNames:Te(De(a),s)})}return r}(t)}function We(e){var t=e._currentState,n=e._originalState,r=e._targetState,s=e._easing,a=e._tokenData;!function(e,t){var n=function(n){var r=t[n].chunkNames,s=e[n];if("string"==typeof s){var a=s.split(" "),i=a[a.length-1];r.forEach((function(t,n){return e[t]=a[n]||i}))}else r.forEach((function(t){return e[t]=s}));delete e[n]};for(var r in t)n(r)}(s,a),[t,n,r].forEach((function(e){return function(e,t){var n=function(n){De(e[n]).forEach((function(r,s){return e[t[n].chunkNames[s]]=+r})),delete e[n]};for(var r in t)n(r)}(e,a)}))}function Ve(e){var t=e._currentState,n=e._originalState,r=e._targetState,s=e._easing,a=e._tokenData;[t,n,r].forEach((function(e){return function(e,t){for(var n in t){var r=t[n],s=r.chunkNames,a=r.formatString,i=Be(a,Le(Me(e,s),s));e[n]=Re(Ae,i,Fe)}}(e,a)})),function(e,t){for(var n in t){var r=t[n].chunkNames,s=e[r[0]];e[n]="string"==typeof s?r.map((function(t){var n=e[t];return delete e[t],n})).join(" "):s}}(s,a)}function Ue(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Ge(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var je=new be,He=be.filters,qe=function(e,t,n,r){var s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,a=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Ue(Object(n),!0).forEach((function(t){Ge(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Ue(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},e),i=me(e,r);for(var o in je._filters.length=0,je.set({}),je._currentState=a,je._originalState=e,je._targetState=t,je._easing=i,He)He[o].doesApply(je)&&je._filters.push(He[o]);je._applyFilter("tweenCreated"),je._applyFilter("beforeTween");var l=le(n,a,e,t,1,s,i);return je._applyFilter("afterTween"),l};function Ke(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function Xe(e,t){var n=t.get(e);if(!n)throw new TypeError("attempted to get private field on non-instance");return n.get?n.get.call(e):n.value}var Ye=new WeakMap,Ze=function(){function e(){(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")})(this,e),Ye.set(this,{writable:!0,value:[]});for(var t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];n.forEach(this.add.bind(this))}var t;return(t=[{key:"add",value:function(e){return Xe(this,Ye).push(e),e}},{key:"remove",value:function(e){var t=Xe(this,Ye).indexOf(e);return~t&&Xe(this,Ye).splice(t,1),e}},{key:"empty",value:function(){return this.tweenables.map(this.remove.bind(this))}},{key:"isPlaying",value:function(){return Xe(this,Ye).some((function(e){return e.isPlaying()}))}},{key:"play",value:function(){return Xe(this,Ye).forEach((function(e){return e.tween()})),this}},{key:"pause",value:function(){return Xe(this,Ye).forEach((function(e){return e.pause()})),this}},{key:"resume",value:function(){return this.playingTweenables.forEach((function(e){return e.resume()})),this}},{key:"stop",value:function(e){return Xe(this,Ye).forEach((function(t){return t.stop(e)})),this}},{key:"tweenables",get:function(){return function(e){if(Array.isArray(e))return Ke(e)}(e=Xe(this,Ye))||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return Ke(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Ke(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}();var e}},{key:"playingTweenables",get:function(){return Xe(this,Ye).filter((function(e){return!e.hasEnded()}))}},{key:"promises",get:function(){return Xe(this,Ye).map((function(e){return e.then()}))}}])&&function(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}(e.prototype,t),e}();be.filters.token=s}},t={};function n(r){if(t[r])return t[r].exports;var s=t[r]={exports:{}};return e[r](s,s.exports,n),s.exports}return n.d=function(e,t){for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n(720)}()},"object"==typeof n&&"object"==typeof t?t.exports=s():"object"==typeof n?n.shifty=s():r.shifty=s()},{}],3:[function(e,t,n){var r=e("./shape"),s=e("./utils"),a=function(e,t){this._pathTemplate="M 50,50 m 0,-{radius} a {radius},{radius} 0 1 1 0,{2radius} a {radius},{radius} 0 1 1 0,-{2radius}",this.containerAspectRatio=1,r.apply(this,arguments)};(a.prototype=new r).constructor=a,a.prototype._pathString=function(e){var t=e.strokeWidth;e.trailWidth&&e.trailWidth>e.strokeWidth&&(t=e.trailWidth);var n=50-t/2;return s.render(this._pathTemplate,{radius:n,"2radius":2*n})},a.prototype._trailString=function(e){return this._pathString(e)},t.exports=a},{"./shape":8,"./utils":10}],4:[function(e,t,n){var r=e("./shape"),s=e("./utils"),a=function(e,t){this._pathTemplate=t.vertical?"M {center},100 L {center},0":"M 0,{center} L 100,{center}",r.apply(this,arguments)};(a.prototype=new r).constructor=a,a.prototype._initializeSvg=function(e,t){var n=t.vertical?"0 0 "+t.strokeWidth+" 100":"0 0 100 "+t.strokeWidth;e.setAttribute("viewBox",n),e.setAttribute("preserveAspectRatio","none")},a.prototype._pathString=function(e){return s.render(this._pathTemplate,{center:e.strokeWidth/2})},a.prototype._trailString=function(e){return this._pathString(e)},t.exports=a},{"./shape":8,"./utils":10}],5:[function(e,t,n){t.exports={Line:e("./line"),Circle:e("./circle"),SemiCircle:e("./semicircle"),Square:e("./square"),Path:e("./path"),Shape:e("./shape"),utils:e("./utils")}},{"./circle":3,"./line":4,"./path":6,"./semicircle":7,"./shape":8,"./square":9,"./utils":10}],6:[function(e,t,n){var r=e("shifty"),s=e("./utils"),a=r.Tweenable,i={easeIn:"easeInCubic",easeOut:"easeOutCubic",easeInOut:"easeInOutCubic"},o=function e(t,n){if(!(this instanceof e))throw new Error("Constructor was called without new keyword");var r;n=s.extend({delay:0,duration:800,easing:"linear",from:{},to:{},step:function(){}},n),r=s.isString(t)?document.querySelector(t):t,this.path=r,this._opts=n,this._tweenable=null;var a=this.path.getTotalLength();this.path.style.strokeDasharray=a+" "+a,this.set(0)};o.prototype.value=function(){var e=this._getComputedDashOffset(),t=this.path.getTotalLength();return parseFloat((1-e/t).toFixed(6),10)},o.prototype.set=function(e){this.stop(),this.path.style.strokeDashoffset=this._progressToOffset(e);var t=this._opts.step;if(s.isFunction(t)){var n=this._easing(this._opts.easing);t(this._calculateTo(e,n),this._opts.shape||this,this._opts.attachment)}},o.prototype.stop=function(){this._stopTween(),this.path.style.strokeDashoffset=this._getComputedDashOffset()},o.prototype.animate=function(e,t,n){t=t||{},s.isFunction(t)&&(n=t,t={});var r=s.extend({},t),i=s.extend({},this._opts);t=s.extend(i,t);var o=this._easing(t.easing),l=this._resolveFromAndTo(e,o,r);this.stop(),this.path.getBoundingClientRect();var u=this._getComputedDashOffset(),c=this._progressToOffset(e),h=this;this._tweenable=new a,this._tweenable.tween({from:s.extend({offset:u},l.from),to:s.extend({offset:c},l.to),duration:t.duration,delay:t.delay,easing:o,step:function(e){h.path.style.strokeDashoffset=e.offset;var n=t.shape||h;t.step(e,n,t.attachment)}}).then((function(e){s.isFunction(n)&&n()})).catch((function(e){throw console.error("Error in tweening:",e),e}))},o.prototype._getComputedDashOffset=function(){var e=window.getComputedStyle(this.path,null);return parseFloat(e.getPropertyValue("stroke-dashoffset"),10)},o.prototype._progressToOffset=function(e){var t=this.path.getTotalLength();return t-e*t},o.prototype._resolveFromAndTo=function(e,t,n){return n.from&&n.to?{from:n.from,to:n.to}:{from:this._calculateFrom(t),to:this._calculateTo(e,t)}},o.prototype._calculateFrom=function(e){return r.interpolate(this._opts.from,this._opts.to,this.value(),e)},o.prototype._calculateTo=function(e,t){return r.interpolate(this._opts.from,this._opts.to,e,t)},o.prototype._stopTween=function(){null!==this._tweenable&&(this._tweenable.stop(!0),this._tweenable=null)},o.prototype._easing=function(e){return i.hasOwnProperty(e)?i[e]:e},t.exports=o},{"./utils":10,shifty:2}],7:[function(e,t,n){var r=e("./shape"),s=e("./circle"),a=e("./utils"),i=function(e,t){this._pathTemplate="M 50,50 m -{radius},0 a {radius},{radius} 0 1 1 {2radius},0",this.containerAspectRatio=2,r.apply(this,arguments)};(i.prototype=new r).constructor=i,i.prototype._initializeSvg=function(e,t){e.setAttribute("viewBox","0 0 100 50")},i.prototype._initializeTextContainer=function(e,t,n){e.text.style&&(n.style.top="auto",n.style.bottom="0",e.text.alignToBottom?a.setStyle(n,"transform","translate(-50%, 0)"):a.setStyle(n,"transform","translate(-50%, 50%)"))},i.prototype._pathString=s.prototype._pathString,i.prototype._trailString=s.prototype._trailString,t.exports=i},{"./circle":3,"./shape":8,"./utils":10}],8:[function(e,t,n){var r=e("./path"),s=e("./utils"),a="Object is destroyed",i=function e(t,n){if(!(this instanceof e))throw new Error("Constructor was called without new keyword");if(0!==arguments.length){this._opts=s.extend({color:"#555",strokeWidth:1,trailColor:null,trailWidth:null,fill:null,text:{style:{color:null,position:"absolute",left:"50%",top:"50%",padding:0,margin:0,transform:{prefix:!0,value:"translate(-50%, -50%)"}},autoStyleContainer:!0,alignToBottom:!0,value:null,className:"progressbar-text"},svgStyle:{display:"block",width:"100%"},warnings:!1},n,!0),s.isObject(n)&&void 0!==n.svgStyle&&(this._opts.svgStyle=n.svgStyle),s.isObject(n)&&s.isObject(n.text)&&void 0!==n.text.style&&(this._opts.text.style=n.text.style);var a,i=this._createSvgView(this._opts);if(!(a=s.isString(t)?document.querySelector(t):t))throw new Error("Container does not exist: "+t);this._container=a,this._container.appendChild(i.svg),this._opts.warnings&&this._warnContainerAspectRatio(this._container),this._opts.svgStyle&&s.setStyles(i.svg,this._opts.svgStyle),this.svg=i.svg,this.path=i.path,this.trail=i.trail,this.text=null;var o=s.extend({attachment:void 0,shape:this},this._opts);this._progressPath=new r(i.path,o),s.isObject(this._opts.text)&&null!==this._opts.text.value&&this.setText(this._opts.text.value)}};i.prototype.animate=function(e,t,n){if(null===this._progressPath)throw new Error(a);this._progressPath.animate(e,t,n)},i.prototype.stop=function(){if(null===this._progressPath)throw new Error(a);void 0!==this._progressPath&&this._progressPath.stop()},i.prototype.pause=function(){if(null===this._progressPath)throw new Error(a);void 0!==this._progressPath&&this._progressPath._tweenable&&this._progressPath._tweenable.pause()},i.prototype.resume=function(){if(null===this._progressPath)throw new Error(a);void 0!==this._progressPath&&this._progressPath._tweenable&&this._progressPath._tweenable.resume()},i.prototype.destroy=function(){if(null===this._progressPath)throw new Error(a);this.stop(),this.svg.parentNode.removeChild(this.svg),this.svg=null,this.path=null,this.trail=null,this._progressPath=null,null!==this.text&&(this.text.parentNode.removeChild(this.text),this.text=null)},i.prototype.set=function(e){if(null===this._progressPath)throw new Error(a);this._progressPath.set(e)},i.prototype.value=function(){if(null===this._progressPath)throw new Error(a);return void 0===this._progressPath?0:this._progressPath.value()},i.prototype.setText=function(e){if(null===this._progressPath)throw new Error(a);null===this.text&&(this.text=this._createTextContainer(this._opts,this._container),this._container.appendChild(this.text)),s.isObject(e)?(s.removeChildren(this.text),this.text.appendChild(e)):this.text.innerHTML=e},i.prototype._createSvgView=function(e){var t=document.createElementNS("http://www.w3.org/2000/svg","svg");this._initializeSvg(t,e);var n=null;(e.trailColor||e.trailWidth)&&(n=this._createTrail(e),t.appendChild(n));var r=this._createPath(e);return t.appendChild(r),{svg:t,path:r,trail:n}},i.prototype._initializeSvg=function(e,t){e.setAttribute("viewBox","0 0 100 100")},i.prototype._createPath=function(e){var t=this._pathString(e);return this._createPathElement(t,e)},i.prototype._createTrail=function(e){var t=this._trailString(e),n=s.extend({},e);return n.trailColor||(n.trailColor="#eee"),n.trailWidth||(n.trailWidth=n.strokeWidth),n.color=n.trailColor,n.strokeWidth=n.trailWidth,n.fill=null,this._createPathElement(t,n)},i.prototype._createPathElement=function(e,t){var n=document.createElementNS("http://www.w3.org/2000/svg","path");return n.setAttribute("d",e),n.setAttribute("stroke",t.color),n.setAttribute("stroke-width",t.strokeWidth),t.fill?n.setAttribute("fill",t.fill):n.setAttribute("fill-opacity","0"),n},i.prototype._createTextContainer=function(e,t){var n=document.createElement("div");n.className=e.text.className;var r=e.text.style;return r&&(e.text.autoStyleContainer&&(t.style.position="relative"),s.setStyles(n,r),r.color||(n.style.color=e.color)),this._initializeTextContainer(e,t,n),n},i.prototype._initializeTextContainer=function(e,t,n){},i.prototype._pathString=function(e){throw new Error("Override this function for each progress bar")},i.prototype._trailString=function(e){throw new Error("Override this function for each progress bar")},i.prototype._warnContainerAspectRatio=function(e){if(this.containerAspectRatio){var t=window.getComputedStyle(e,null),n=parseFloat(t.getPropertyValue("width"),10),r=parseFloat(t.getPropertyValue("height"),10);s.floatEquals(this.containerAspectRatio,n/r)||(console.warn("Incorrect aspect ratio of container","#"+e.id,"detected:",t.getPropertyValue("width")+"(width)","/",t.getPropertyValue("height")+"(height)","=",n/r),console.warn("Aspect ratio of should be",this.containerAspectRatio))}},t.exports=i},{"./path":6,"./utils":10}],9:[function(e,t,n){var r=e("./shape"),s=e("./utils"),a=function(e,t){this._pathTemplate="M 0,{halfOfStrokeWidth} L {width},{halfOfStrokeWidth} L {width},{width} L {halfOfStrokeWidth},{width} L {halfOfStrokeWidth},{strokeWidth}",this._trailTemplate="M {startMargin},{halfOfStrokeWidth} L {width},{halfOfStrokeWidth} L {width},{width} L {halfOfStrokeWidth},{width} L {halfOfStrokeWidth},{halfOfStrokeWidth}",r.apply(this,arguments)};(a.prototype=new r).constructor=a,a.prototype._pathString=function(e){var t=100-e.strokeWidth/2;return s.render(this._pathTemplate,{width:t,strokeWidth:e.strokeWidth,halfOfStrokeWidth:e.strokeWidth/2})},a.prototype._trailString=function(e){var t=100-e.strokeWidth/2;return s.render(this._trailTemplate,{width:t,strokeWidth:e.strokeWidth,halfOfStrokeWidth:e.strokeWidth/2,startMargin:e.strokeWidth/2-e.trailWidth/2})},t.exports=a},{"./shape":8,"./utils":10}],10:[function(e,t,n){var r=e("lodash.merge"),s="Webkit Moz O ms".split(" ");function a(e,t,n){for(var r=e.style,a=0;a<s.length;++a)r[s[a]+i(t)]=n;r[t]=n}function i(e){return e.charAt(0).toUpperCase()+e.slice(1)}function o(e){return!function(e){return"[object Array]"===Object.prototype.toString.call(e)}(e)&&"object"==typeof e&&!!e}function l(e,t){for(var n in e)e.hasOwnProperty(n)&&t(e[n],n)}t.exports={extend:r,render:function(e,t){var n=e;for(var r in t)if(t.hasOwnProperty(r)){var s=t[r],a=new RegExp("\\{"+r+"\\}","g");n=n.replace(a,s)}return n},setStyle:a,setStyles:function(e,t){l(t,(function(t,n){null!=t&&(o(t)&&!0===t.prefix?a(e,n,t.value):e.style[n]=t)}))},capitalize:i,isString:function(e){return"string"==typeof e||e instanceof String},isFunction:function(e){return"function"==typeof e},isObject:o,forEachObject:l,floatEquals:function(e,t){return Math.abs(e-t)<.001},removeChildren:function(e){for(;e.firstChild;)e.removeChild(e.firstChild)}}},{"lodash.merge":1}]},{},[5])(5)},452:e=>{var t=function(e){"use strict";var t,n=Object.prototype,r=n.hasOwnProperty,s=Object.defineProperty||function(e,t,n){e[t]=n.value},a="function"==typeof Symbol?Symbol:{},i=a.iterator||"@@iterator",o=a.asyncIterator||"@@asyncIterator",l=a.toStringTag||"@@toStringTag";function u(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,n){return e[t]=n}}function c(e,t,n,r){var a=t&&t.prototype instanceof y?t:y,i=Object.create(a.prototype),o=new $(r||[]);return s(i,"_invoke",{value:S(e,n,o)}),i}function h(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=c;var p="suspendedStart",d="suspendedYield",f="executing",m="completed",g={};function y(){}function b(){}function x(){}var w={};u(w,i,(function(){return this}));var v=Object.getPrototypeOf,k=v&&v(v(_([])));k&&k!==n&&r.call(k,i)&&(w=k);var I=x.prototype=y.prototype=Object.create(w);function N(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function A(e,t){function n(s,a,i,o){var l=h(e[s],e,a);if("throw"!==l.type){var u=l.arg,c=u.value;return c&&"object"==typeof c&&r.call(c,"__await")?t.resolve(c.__await).then((function(e){n("next",e,i,o)}),(function(e){n("throw",e,i,o)})):t.resolve(c).then((function(e){u.value=e,i(u)}),(function(e){return n("throw",e,i,o)}))}o(l.arg)}var a;s(this,"_invoke",{value:function(e,r){function s(){return new t((function(t,s){n(e,r,t,s)}))}return a=a?a.then(s,s):s()}})}function S(e,n,r){var s=p;return function(a,i){if(s===f)throw new Error("Generator is already running");if(s===m){if("throw"===a)throw i;return{value:t,done:!0}}for(r.method=a,r.arg=i;;){var o=r.delegate;if(o){var l=C(o,r);if(l){if(l===g)continue;return l}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(s===p)throw s=m,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);s=f;var u=h(e,n,r);if("normal"===u.type){if(s=r.done?m:d,u.arg===g)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(s=m,r.method="throw",r.arg=u.arg)}}}function C(e,n){var r=n.method,s=e.iterator[r];if(s===t)return n.delegate=null,"throw"===r&&e.iterator.return&&(n.method="return",n.arg=t,C(e,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),g;var a=h(s,e.iterator,n.arg);if("throw"===a.type)return n.method="throw",n.arg=a.arg,n.delegate=null,g;var i=a.arg;return i?i.done?(n[e.resultName]=i.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,g):i:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,g)}function E(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function T(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function $(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(E,this),this.reset(!0)}function _(e){if(null!=e){var n=e[i];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var s=-1,a=function n(){for(;++s<e.length;)if(r.call(e,s))return n.value=e[s],n.done=!1,n;return n.value=t,n.done=!0,n};return a.next=a}}throw new TypeError(typeof e+" is not iterable")}return b.prototype=x,s(I,"constructor",{value:x,configurable:!0}),s(x,"constructor",{value:b,configurable:!0}),b.displayName=u(x,l,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===b||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,x):(e.__proto__=x,u(e,l,"GeneratorFunction")),e.prototype=Object.create(I),e},e.awrap=function(e){return{__await:e}},N(A.prototype),u(A.prototype,o,(function(){return this})),e.AsyncIterator=A,e.async=function(t,n,r,s,a){void 0===a&&(a=Promise);var i=new A(c(t,n,r,s),a);return e.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},N(I),u(I,l,"Generator"),u(I,i,(function(){return this})),u(I,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=Object(e),n=[];for(var r in t)n.push(r);return n.reverse(),function e(){for(;n.length;){var r=n.pop();if(r in t)return e.value=r,e.done=!1,e}return e.done=!0,e}},e.values=_,$.prototype={constructor:$,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(T),!e)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function s(r,s){return o.type="throw",o.arg=e,n.next=r,s&&(n.method="next",n.arg=t),!!s}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],o=i.completion;if("root"===i.tryLoc)return s("end");if(i.tryLoc<=this.prev){var l=r.call(i,"catchLoc"),u=r.call(i,"finallyLoc");if(l&&u){if(this.prev<i.catchLoc)return s(i.catchLoc,!0);if(this.prev<i.finallyLoc)return s(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return s(i.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return s(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var s=this.tryEntries[n];if(s.tryLoc<=this.prev&&r.call(s,"finallyLoc")&&this.prev<s.finallyLoc){var a=s;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,g):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),T(n),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var s=r.arg;T(n)}return s}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,r){return this.delegate={iterator:_(e),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=t),g}},e}(e.exports);try{regeneratorRuntime=t}catch(e){"object"==typeof globalThis?globalThis.regeneratorRuntime=t:Function("r","regeneratorRuntime = r")(t)}},391:(e,t,n)=>{var r=n(180),s=n(181),a=n(31),i=n(67),o=n(833),l=n(717),u=n(801);u.alea=r,u.xor128=s,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},180:function(e,t,n){var r;!function(e,s,a){function i(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.alea=l}(0,e=n.nmd(e),n.amdD)},717:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.tychei=l}(0,e=n.nmd(e),n.amdD)},181:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor128=l}(0,e=n.nmd(e),n.amdD)},833:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,a=-32;a<l;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},67:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},31:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(s,a,i){var o,l=256,u=i.pow(l,6),c=i.pow(2,52),h=2*c,p=l-1;function d(e,t,n){var r=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(l):(e=new Uint8Array(l),(s.crypto||s.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,b(a)]}}():e,3),r),d=new f(r),x=function(){for(var e=d.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=d.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,d),e.state=function(){return m(d,{})}),n?(i.random=e,t):e})(x,p,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<l;)i[s]=s++;for(s=0;s<l;s++)i[s]=i[a=p&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=p&s+1],n=n*l+i[p&(i[s]=i[a=p&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[p&s]=p&(n^=19*t[p&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(i.random(),a),e.exports){e.exports=d;try{o=n(234)}catch(e){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}("undefined"!=typeof self?self:this,[],Math)},72:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},i=[],o=0;o<e.length;o++){var l=e[o],u=r.base?l[0]+r.base:l[0],c=a[u]||0,h="".concat(u," ").concat(c);a[u]=c+1;var p=n(h),d={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)t[p].references++,t[p].updater(d);else{var f=s(d,r);r.byIndex=o,t.splice(o,0,{identifier:h,updater:f,references:1})}i.push(h)}return i}function s(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,s){var a=r(e=e||[],s=s||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var o=n(a[i]);t[o].references--}for(var l=r(e,s),u=0;u<a.length;u++){var c=n(a[u]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}a=l}}},659:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},540:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var s=void 0!==n.layer;s&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,s&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},817:()=>{},590:()=>{},530:()=>{},108:()=>{},551:()=>{},234:()=>{}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var a=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.nc=void 0,(()=>{"use strict";var e={};n.r(e),n.d(e,{CompositeArrayBuffer:()=>ka,browserFiles:()=>mo,browserHTTPRequest:()=>No,concatenateArrayBuffers:()=>Wa,copyModel:()=>Si,decodeWeights:()=>Ra,decodeWeightsStream:()=>La,encodeWeights:()=>_a,fromMemory:()=>Eo,fromMemorySync:()=>To,getLoadHandlers:()=>Ja,getModelArtifactsForJSON:()=>ja,getModelArtifactsForJSONSync:()=>Ga,getModelArtifactsInfoForJSON:()=>Ha,getSaveHandlers:()=>Za,getWeightSpecs:()=>qa,http:()=>Io,isHTTPScheme:()=>vo,listModels:()=>Ni,loadWeights:()=>bo,moveModel:()=>Ci,registerLoadRouter:()=>Ya,registerSaveRouter:()=>Xa,removeModel:()=>Ai,weightsLoaderFactory:()=>xo,withSaveHandler:()=>$o,withSaveHandlerSync:()=>_o});var t={};n.r(t),n.d(t,{assertParamsValid:()=>Lo,computeFlatOffset:()=>Yo,computeOutShape:()=>zo,getNormalizedAxes:()=>Uo,isSliceContinous:()=>Xo,maskToAxes:()=>Bo,parseSliceParams:()=>Zo,sliceInfo:()=>Jo,startForAxis:()=>qo,startIndicesWithElidedDims:()=>Go,stopForAxis:()=>Ko,stopIndicesWithElidedDims:()=>jo,stridesForAxis:()=>Ho,stridesWithElidedDims:()=>Po});var r={};n.r(r),n.d(r,{conv2d:()=>hp,depthwiseConv2d:()=>fp,matMul:()=>mp});var s={};n.r(s),n.d(s,{collectGatherOpShapeInfo:()=>vf,computeOutShape:()=>wf,segOpComputeOptimalWindowSize:()=>xf});var a={};n.r(a),n.d(a,{ERF_A1:()=>Md,ERF_A2:()=>Ld,ERF_A3:()=>Bd,ERF_A4:()=>zd,ERF_A5:()=>Pd,ERF_P:()=>Dd,PARALLELIZE_THRESHOLD:()=>Nd,RowPartitionType:()=>xd,SELU_SCALE:()=>Fd,SELU_SCALEALPHA:()=>Od,applyActivation:()=>up,assertAndGetBroadcastShape:()=>so,assertAxesAreInnerMostDims:()=>Au,assertParamsConsistent:()=>yd,assignToTypedArray:()=>Hd,axesAreInnerMostDims:()=>vu,calculateShapes:()=>zh,checkEinsumDimSizes:()=>tf,checkPadOnDimRoundingMode:()=>Sl,combineLocations:()=>ku,combineRaggedTensorToTensorShapes:()=>wd,complexWithEvenIndex:()=>Ud,complexWithOddIndex:()=>Gd,computeConv2DInfo:()=>ml,computeConv3DInfo:()=>gl,computeDefaultPad:()=>yl,computeDilation2DInfo:()=>pl,computeOptimalWindowSize:()=>Ad,computeOutAndReduceShapes:()=>Iu,computeOutShape:()=>bd,computePool2DInfo:()=>dl,computePool3DInfo:()=>fl,convertConv2DDataFormat:()=>Al,decodeEinsumEquation:()=>Qd,eitherStridesOrDilationsAreOne:()=>Il,expandShapeToKeepDim:()=>Nu,exponent:()=>Kd,exponents:()=>qd,fromStringArrayToUint8:()=>If,fromUint8ToStringArray:()=>kf,getAxesPermutation:()=>Su,getBroadcastDims:()=>no,getComplexWithIndex:()=>jd,getEinsumComputePath:()=>nf,getEinsumPermutation:()=>ef,getFusedBiasGradient:()=>lp,getFusedDyActivation:()=>op,getImageCenter:()=>Sd,getInnerMostAxes:()=>Eu,getPermuted:()=>Ed,getRaggedRank:()=>kd,getReductionAxes:()=>ro,getReshaped:()=>Cd,getReshapedPermuted:()=>Td,getRowPartitionTypesHelper:()=>vd,getSliceBeginCoords:()=>$d,getSliceSize:()=>_d,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>of,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>lf,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>uf,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>pf,getSparseReshapeInputOutputMismatchErrorMessage:()=>ff,getSparseReshapeInputOutputMultipleErrorMessage:()=>df,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>cf,getSparseReshapeNegativeOutputDimErrorMessage:()=>hf,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>bf,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>mf,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>gf,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>yf,getUndoAxesPermutation:()=>Cu,isIdentityPermutation:()=>rf,log:()=>qr,mergeRealAndImagArrays:()=>Wd,prepareAndValidate:()=>Rd,prepareSplitSize:()=>af,segment_util:()=>s,shouldFuse:()=>cp,slice_util:()=>t,splitRealAndImagArrays:()=>Vd,stridesOrDilationsArePositive:()=>Nl,tupleValuesAreOne:()=>kl,upcastType:()=>Ks,validateDefaultValueShape:()=>Id,validateInput:()=>Bh,validateUpdateShape:()=>Lh,warn:()=>Hr});var i={};n.r(i),n.d(i,{json:()=>_v});var o={};n.r(o),n.d(o,{json:()=>Rv});var l={};n.r(l),n.d(l,{json:()=>Ov});var u={};n.r(u),n.d(u,{json:()=>Fv});var c={};n.r(c),n.d(c,{json:()=>Dv});var h={};n.r(h),n.d(h,{json:()=>Mv});var p={};n.r(p),n.d(p,{json:()=>Lv});var d={};n.r(d),n.d(d,{json:()=>Bv});var f={};n.r(f),n.d(f,{json:()=>zv});var m={};n.r(m),n.d(m,{json:()=>Pv});var g={};n.r(g),n.d(g,{json:()=>Wv});var y={};n.r(y),n.d(y,{json:()=>Vv});var b={};n.r(b),n.d(b,{json:()=>Uv});var x={};n.r(x),n.d(x,{json:()=>Gv});var w={};n.r(w),n.d(w,{json:()=>jv});var v={};n.r(v),n.d(v,{json:()=>Hv});var k={};n.r(k),n.d(k,{json:()=>qv});var I={};n.r(I),n.d(I,{json:()=>Kv});var N={};n.r(N),n.d(N,{json:()=>Xv});var A={};n.r(A),n.d(A,{OP_SCOPE_SUFFIX:()=>ga,abs:()=>to,acos:()=>el,acosh:()=>tl,add:()=>Fi,addN:()=>nl,all:()=>rl,any:()=>sl,argMax:()=>al,argMin:()=>il,asin:()=>ol,asinh:()=>ll,atan:()=>ul,atan2:()=>cl,atanh:()=>hl,avgPool:()=>El,avgPool3d:()=>Tl,basicLSTMCell:()=>Dl,batchNorm:()=>Ll,batchNorm2d:()=>Bl,batchNorm3d:()=>zl,batchNorm4d:()=>Pl,batchToSpaceND:()=>Ml,bincount:()=>Wl,bitwiseAnd:()=>Vl,booleanMaskAsync:()=>Yh,broadcastArgs:()=>Ul,broadcastTo:()=>Gl,buffer:()=>$i,cast:()=>_i,ceil:()=>jl,clipByValue:()=>Hl,clone:()=>Ri,complex:()=>ba,concat:()=>$l,concat1d:()=>ql,concat2d:()=>Kl,concat3d:()=>Xl,concat4d:()=>Yl,conv1d:()=>Jl,conv2d:()=>Zl,conv2dTranspose:()=>eu,conv3d:()=>tu,conv3dTranspose:()=>ru,cos:()=>su,cosh:()=>au,cosineWindow:()=>sp,cumprod:()=>iu,cumsum:()=>ou,denseBincount:()=>lu,depthToSpace:()=>uu,depthwiseConv2d:()=>cu,diag:()=>hu,dilation2d:()=>pu,div:()=>Mi,divNoNan:()=>mu,dot:()=>gu,dropout:()=>np,einsum:()=>yu,elu:()=>bu,enclosingPowerOfTwo:()=>rp,ensureShape:()=>xu,equal:()=>du,erf:()=>wu,euclideanNorm:()=>Fu,exp:()=>Du,expandDims:()=>Mu,expm1:()=>Lu,eye:()=>zu,fft:()=>vh,fill:()=>Yi,floor:()=>Pu,floorDiv:()=>Di,fused:()=>r,gather:()=>Wu,gatherND:()=>tp,greater:()=>Vu,greaterEqual:()=>Uu,ifft:()=>kh,imag:()=>Gu,image:()=>ud,inTopKAsync:()=>ap,irfft:()=>Ih,isFinite:()=>ju,isInf:()=>Hu,isNaN:()=>qu,leakyRelu:()=>Ku,less:()=>Xu,lessEqual:()=>Yu,linalg:()=>cd,linspace:()=>Zu,localResponseNormalization:()=>Ju,log:()=>Qu,log1p:()=>ec,logSigmoid:()=>rc,logSoftmax:()=>sc,logSumExp:()=>ac,logicalAnd:()=>ic,logicalNot:()=>oc,logicalOr:()=>lc,logicalXor:()=>uc,losses:()=>hd,lowerBound:()=>pc,matMul:()=>_l,max:()=>Tu,maxPool:()=>dc,maxPool3d:()=>fc,maxPoolWithArgmax:()=>mc,maximum:()=>ao,mean:()=>gc,meshgrid:()=>xc,min:()=>$u,minimum:()=>wc,mirrorPad:()=>vc,mod:()=>kc,moments:()=>Ic,movingAverage:()=>Jh,mul:()=>Li,multiRNNCell:()=>Nc,multinomial:()=>Ac,neg:()=>tc,norm:()=>Ou,notEqual:()=>Sc,oneHot:()=>Cc,ones:()=>bc,onesLike:()=>Ec,op:()=>ya,outerProduct:()=>Tc,pad:()=>$c,pad1d:()=>_c,pad2d:()=>Rc,pad3d:()=>Oc,pad4d:()=>Fc,pool:()=>Mc,pow:()=>Ji,prelu:()=>Lc,print:()=>Oi,prod:()=>Bc,raggedGather:()=>zc,raggedRange:()=>Pc,raggedTensorToTensor:()=>Wc,rand:()=>Vc,randomGamma:()=>qc,randomNormal:()=>Kc,randomStandardNormal:()=>Xc,randomUniform:()=>Yc,randomUniformInt:()=>Zc,range:()=>Jc,real:()=>Qc,reciprocal:()=>eh,relu:()=>th,relu6:()=>nh,reshape:()=>Cl,reverse:()=>rh,reverse1d:()=>sh,reverse2d:()=>ah,reverse3d:()=>ih,reverse4d:()=>oh,rfft:()=>Ah,round:()=>lh,rsqrt:()=>uh,scalar:()=>Vi,scatterND:()=>Qh,searchSorted:()=>hc,selu:()=>ch,separableConv2d:()=>hh,setdiff1dAsync:()=>ph,sigmoid:()=>Rl,sign:()=>dh,signal:()=>ld,sin:()=>fh,sinh:()=>mh,slice:()=>Ol,slice1d:()=>gh,slice2d:()=>yh,slice3d:()=>bh,slice4d:()=>xh,softmax:()=>wh,softplus:()=>nc,spaceToBatchND:()=>Dc,sparse:()=>pd,sparseToDense:()=>ep,spectral:()=>od,split:()=>Nh,sqrt:()=>Bi,square:()=>zi,squaredDifference:()=>Sh,squeeze:()=>Ch,stack:()=>Eh,step:()=>Th,stridedSlice:()=>$h,string:()=>dd,sub:()=>Qi,sum:()=>_u,tan:()=>_h,tanh:()=>Fl,tensor:()=>wa,tensor1d:()=>Rh,tensor2d:()=>Oh,tensor3d:()=>Ro,tensor4d:()=>Fh,tensor5d:()=>Dh,tensor6d:()=>Mh,tensorScatterUpdate:()=>Ph,tile:()=>Bu,topk:()=>Wh,transpose:()=>Zh,truncatedNormal:()=>Vh,unique:()=>Uh,unsortedSegmentSum:()=>Gh,unstack:()=>jh,upperBound:()=>Hh,variable:()=>qh,where:()=>fu,whereAsync:()=>Xh,zeros:()=>yc,zerosLike:()=>Pi});var S={};n.r(S),n.d(S,{addImpl:()=>jI,bincountImpl:()=>LN,bincountReduceImpl:()=>BN,bitwiseAndImpl:()=>PN,castImpl:()=>PI,ceilImpl:()=>GN,concatImpl:()=>YN,equalImpl:()=>FA,expImpl:()=>jA,expm1Impl:()=>YA,floorImpl:()=>dS,gatherNdImpl:()=>vS,gatherV2Impl:()=>IS,greaterEqualImpl:()=>ES,greaterImpl:()=>AS,lessEqualImpl:()=>WS,lessImpl:()=>BS,linSpaceImpl:()=>GS,logImpl:()=>HS,maxImpl:()=>oC,maximumImpl:()=>cC,minimumImpl:()=>wC,multiplyImpl:()=>SA,negImpl:()=>$C,notEqualImpl:()=>BC,prodImpl:()=>ZC,raggedGatherImpl:()=>eE,raggedRangeImpl:()=>rE,raggedTensorToTensorImpl:()=>uE,rangeImpl:()=>hE,rsqrtImpl:()=>IE,scatterImpl:()=>SE,sigmoidImpl:()=>_I,simpleAbsImpl:()=>eN,sliceImpl:()=>ON,sparseFillEmptyRowsImpl:()=>HE,sparseReshapeImpl:()=>KE,sparseSegmentReductionImpl:()=>YE,sqrtImpl:()=>tT,staticRegexReplaceImpl:()=>lT,stridedSliceImpl:()=>dT,stringNGramsImpl:()=>gT,stringSplitImpl:()=>xT,stringToHashBucketFastImpl:()=>vT,subImpl:()=>nS,tileImpl:()=>CT,topKImpl:()=>_T,transposeImpl:()=>oN,uniqueImpl:()=>BT}),n(452);var C=n(72),E=n.n(C),T=n(825),$=n.n(T),_=n(659),R=n.n(_),O=n(56),F=n.n(O),D=n(540),M=n.n(D),L=n(113),B=n.n(L),z=n(919),P={};P.styleTagTransform=B(),P.setAttributes=F(),P.insert=R().bind(null,"head"),P.domAPI=$(),P.insertStyleElement=M(),E()(z.A,P),z.A&&z.A.locals&&z.A.locals;var W=n(936),V={};V.styleTagTransform=B(),V.setAttributes=F(),V.insert=R().bind(null,"head"),V.domAPI=$(),V.insertStyleElement=M(),E()(W.A,V),W.A&&W.A.locals&&W.A.locals;class U{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class G{refCount(e){return j("refCount")}incRef(e){return j("incRef")}timerAvailable(){return!0}time(e){return j("time")}read(e){return j("read")}readSync(e){return j("readSync")}readToGPU(e,t){return j("readToGPU")}numDataIds(){return j("numDataIds")}disposeData(e,t){return j("disposeData")}write(e,t,n){return j("write")}move(e,t,n,r,s){return j("move")}createTensorFromGPUData(e,t,n){return j("createTensorFromGPUData")}memory(){return j("memory")}floatPrecision(){return j("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return j("dispose")}}function j(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function H(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,X(e,t,n)}function q(e,t,n){return Math.max(e,Math.min(t,n))}function K(e){return e%2==0?e:e+1}function X(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function Y(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function Z(e,t,n=""){Y(ee(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function J(e){Y(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function Q(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ee(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function te(e){return e%1==0}function ne(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function re(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function se(e,t=(e=>0),n,r){return new Promise(((s,a)=>{let i=0;const o=()=>{if(e())return void s();i++;const l=t(i);null!=n&&i>=n?a():null!=r?r(o,l):setTimeout(o,l)};o()}))}function ae(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function ie(e,t){const n=t.length;return Y((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),Y(e.every((e=>te(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function oe(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:ie(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function le(e,t){return ue(e,t)}function ue(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function ce(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function he(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function pe(e){return"string"==typeof e||e instanceof String}function de(e){return"number"==typeof e}function fe(e){return Array.isArray(e)?fe(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":de(e)?"float32":pe(e)?"string":"boolean"==typeof e?"bool":"float32"}function me(e){return!!(e&&e.constructor&&e.call&&e.apply)}function ge(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function ye(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function be(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=be(e+t*o,i,n,r)}return s}function xe(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return be(0,e,t,n)}function we(e,t){const n=ve(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function ve(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function ke(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return xe(e,new Float32Array(n));if("int32"===t)return xe(e,new Int32Array(n));if("bool"===t)return xe(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Ie(e){e.forEach((t=>{Y(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Ne(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Ae(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Se(e){return e&&e.then&&"function"==typeof e.then}const Ce="tfjsflags";class Ee{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Te,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&($e().getBool("IS_TEST")||$e().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];$e().getBool("IS_TEST")||$e().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Se(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);Ce in e&&e[Ce].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}function Te(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function $e(){return Re}let _e,Re=null;function Oe(){if(null==_e){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}_e=e}return _e}function Fe(e,t){const n=function(){const e=Oe();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const De="Abs",Me="Acos",Le="Acosh",Be="Add",ze="AddN",Pe="All",We="Any",Ve="ArgMax",Ue="ArgMin",Ge="Asin",je="Asinh",He="Atan",qe="Atanh",Ke="Atan2",Xe="AvgPool",Ye="AvgPoolGrad",Ze="AvgPool3D",Je="AvgPool3DGrad",Qe="BatchMatMul",et="BatchToSpaceND",tt="Bincount",nt="BitwiseAnd",rt="BroadcastArgs",st="Cast",at="Ceil",it="ClipByValue",ot="Complex",lt="ComplexAbs",ut="Concat",ct="Conv2D",ht="Conv2DBackpropFilter",pt="Conv2DBackpropInput",dt="Conv3D",ft="Conv3DBackpropFilterV2",mt="Conv3DBackpropInputV2",gt="Cos",yt="Cosh",bt="Cumprod",xt="Cumsum",wt="CropAndResize",vt="DenseBincount",kt="DepthToSpace",It="DepthwiseConv2dNative",Nt="DepthwiseConv2dNativeBackpropFilter",At="DepthwiseConv2dNativeBackpropInput",St="Diag",Ct="Dilation2D",Et="Dilation2DBackpropInput",Tt="Dilation2DBackpropFilter",$t="RealDiv",_t="Einsum",Rt="Elu",Ot="EluGrad",Ft="Erf",Dt="Equal",Mt="Exp",Lt="ExpandDims",Bt="Expm1",zt="FFT",Pt="Fill",Wt="FlipLeftRight",Vt="Floor",Ut="FloorDiv",Gt="FusedBatchNorm",jt="GatherV2",Ht="GatherNd",qt="Greater",Kt="GreaterEqual",Xt="Identity",Yt="IFFT",Zt="Imag",Jt="IsFinite",Qt="IsInf",en="IsNan",tn="LeakyRelu",nn="Less",rn="LessEqual",sn="LinSpace",an="Log",on="Log1p",ln="LogicalAnd",un="LogicalNot",cn="LogicalOr",hn="LRN",pn="LRNGrad",dn="Max",fn="Maximum",mn="MaxPool",gn="MaxPoolGrad",yn="MaxPool3D",bn="MaxPool3DGrad",xn="MaxPoolWithArgmax",wn="Mean",vn="Min",kn="Minimum",In="MirrorPad",Nn="Mod",An="Multinomial",Sn="Multiply",Cn="Neg",En="NotEqual",Tn="NonMaxSuppressionV3",$n="NonMaxSuppressionV4",_n="NonMaxSuppressionV5",Rn="OnesLike",On="OneHot",Fn="Pack",Dn="PadV2",Mn="Pow",Ln="Prelu",Bn="Prod",zn="RaggedGather",Pn="RaggedRange",Wn="RaggedTensorToTensor",Vn="Range",Un="Real",Gn="Reciprocal",jn="Relu",Hn="Reshape",qn="ResizeNearestNeighbor",Kn="ResizeNearestNeighborGrad",Xn="ResizeBilinear",Yn="ResizeBilinearGrad",Zn="Relu6",Jn="Reverse",Qn="Round",er="Rsqrt",tr="ScatterNd",nr="TensorScatterUpdate",rr="SearchSorted",sr="Select",ar="Selu",ir="Slice",or="Sin",lr="Sinh",ur="Sign",cr="Sigmoid",hr="Softplus",pr="Sqrt",dr="Sum",fr="SpaceToBatchND",mr="SplitV",gr="Softmax",yr="SparseFillEmptyRows",br="SparseReshape",xr="SparseSegmentMean",wr="SparseSegmentSum",vr="SparseToDense",kr="SquaredDifference",Ir="Square",Nr="StaticRegexReplace",Ar="StridedSlice",Sr="StringNGrams",Cr="StringSplit",Er="StringToHashBucketFast",Tr="Sub",$r="Tan",_r="Tanh",Rr="Tile",Or="TopK",Fr="Transform",Dr="Transpose",Mr="Unique",Lr="Unpack",Br="UnsortedSegmentSum",zr="ZerosLike",Pr="Step",Wr="FromPixels",Vr="RotateWithOffset",Ur="_FusedMatMul",Gr="FusedConv2D",jr="FusedDepthwiseConv2D";function Hr(...e){$e().getBool("IS_TEST")||$e().getBool("PROD")||console.warn(...e)}function qr(...e){$e().getBool("IS_TEST")||$e().getBool("PROD")||console.log(...e)}const Kr=Fe("kernelRegistry",(()=>new Map)),Xr=Fe("gradRegistry",(()=>new Map));function Yr(e,t){const n=ts(e,t);return Kr.get(n)}function Zr(e){return Xr.get(e)}function Jr(e){const t=Kr.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function Qr(e){const{kernelName:t,backendName:n}=e,r=ts(t,n);Kr.has(r)&&Hr(`The kernel '${t}' for backend '${n}' is already registered`),Kr.set(r,e)}function es(e){const{kernelName:t}=e;Xr.has(t)&&$e().getBool("DEBUG")&&Hr(`Overriding the gradient for '${t}'`),Xr.set(t,e)}function ts(e,t){return`${t}_${e}`}function ns(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var rs=n(570);const ss=n.n(rs)()||rs;function as(e){return ss.fromString(e,!0,16)}const is=as("c3a5c85c97cb3127"),os=as("b492b66fbe98f273"),ls=as("9ae16a3b2f90404f");function us(e){return e.xor(e.shru(47))}function cs(e,t,n){const r=e.slice(t,t+n);return ss.fromBytes(Array.from(r),!0,!0)}function hs(e,t){return cs(e,t,8)}function ps(e,t){return cs(e,t,4)}function ds(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function fs(e,t,n=as("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function ms(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=ds(a.add(s).add(r),21);const i=s;return s=(s=s.add(t)).add(n),a=a.add(ds(s,44)),[s.add(r),a.add(i)]}(hs(e,t),hs(e,t+8),hs(e,t+16),hs(e,t+24),n,r)}function gs(e,t=e.length){const n=ss.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=ls.add(2*t),r=hs(e,0).add(ls),s=hs(e,t-8);return fs(ds(s,37).mul(n).add(r),ds(r,25).add(s).mul(n),n)}if(t>=4){const n=ls.add(2*t);return fs(ps(e,0).shl(3).add(t),ps(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return us(ls.mul(n).xor(is.mul(r))).mul(ls)}return ls}(e,t):function(e,t=e.length){const n=ls.add(2*t),r=hs(e,0).mul(os),s=hs(e,8),a=hs(e,t-8).mul(n),i=hs(e,t-16).mul(ls);return fs(ds(r.add(s),43).add(ds(a,30)).add(i),r.add(ds(s.add(ls),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=ls.add(2*t),r=hs(e,0).mul(ls),s=hs(e,8),a=hs(e,t-8).mul(n),i=hs(e,t-16).mul(ls),o=ds(r.add(s),43).add(ds(a,30)).add(i),l=fs(o,r.add(ds(s.add(ls),18)).add(a),n),u=hs(e,16).mul(n),c=hs(e,24),h=o.add(hs(e,t-32)).mul(n),p=l.add(hs(e,t-24)).mul(n);return fs(ds(u.add(c),43).add(ds(h,30)).add(p),u.add(ds(c.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(os).add(113),a=us(s.mul(ls).add(113)).mul(ls),i=[ss.UZERO,ss.UZERO],o=[ss.UZERO,ss.UZERO];r=r.mul(ls).add(hs(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{r=ds(r.add(s).add(i[0]).add(hs(e,l+8)),37).mul(os),s=ds(s.add(i[1]).add(hs(e,l+48)),42).mul(os),r=r.xor(o[1]),s=s.add(i[0]).add(hs(e,l+40)),a=ds(a.add(o[0]),33).mul(os),i=ms(e,l,i[1].mul(os),r.add(o[0])),o=ms(e,l+32,a.add(o[1]),s.add(hs(e,l+16))),[a,r]=[r,a],l+=64}while(l!==u);const h=os.add(a.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=ds(r.add(s).add(i[0]).add(hs(e,l+8)),37).mul(h),s=ds(s.add(i[1]).add(hs(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),s=s.add(i[0].mul(9).add(hs(e,l+40))),a=ds(a.add(o[0]),33).mul(h),i=ms(e,l,i[1].mul(h),r.add(o[0])),o=ms(e,l+32,a.add(o[1]),s.add(hs(e,l+16))),[a,r]=[r,a],fs(fs(i[0],o[0],h).add(us(s).mul(is)).add(a),fs(i[1],o[1],h).add(r),h)}function ys(e,t){return"string"===t?ws(e):bs([e],t)}function bs(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Is(e)),$e().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function xs(){return $e().platform.now()}function ws(e,t="utf-8"){return t=t||"utf-8",$e().platform.encode(e,t)}function vs(e,t="utf-8"){return t=t||"utf-8",$e().platform.decode(e,t)}function ks(e){return null!=$e().platform.isTypedArray?$e().platform.isTypedArray(e):ns(e)}function Is(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||Se(e)||null==e||ks(e)&&n)t.push(e);else if(Array.isArray(e)||ks(e))for(let r=0;r<e.length;++r)Is(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let s=0;s<=r;s++)Is(e[s],t,n)}return t}class Ns{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Ss)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const i=xs();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:xs()-i})}if($e().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{As(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function As(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Ss{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?re(`${r}ms`,9):r.error,o=re(e,25),l=t.rank,u=t.size,c=re(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}const Cs=20,Es=3,Ts=7;function $s(e,t,n,r){const s=ye(t),a=function(e,t,n,r){const s=Q(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?Fs(e):e;if(o>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],_s(l[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,o=Os(e,t,n,s,a),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function _s(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(Ts))} + ${parseFloat(e[1].toFixed(Ts))}j`:pe(e)?`'${e}'`:"bool"===n?Rs(e):parseFloat(e.toFixed(Ts)).toString(),re(r,t)}function Rs(e){return 0===e?"false":"true"}function Os(e,t,n,r,s,a=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[_s(Fs(e)[0],0,n)]:"bool"===n?[Rs(e[0])]:[e[0].toString()];if(1===l){if(o>Cs){const t=Es*i;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-Es)*i,o*i));return"complex64"===n&&(r=Fs(r),a=Fs(a)),["["+r.map(((e,t)=>_s(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>_s(e,s[o-Es+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Fs(e):Array.from(e)).map(((e,t)=>_s(e,s[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*i,p=[];if(o>Cs){for(let t=0;t<Es;t++){const r=t*h,a=r+h;p.push(...Os(e.slice(r,a),u,n,c,s,!1))}p.push("...");for(let t=o-Es;t<o;t++){const r=t*h,a=r+h;p.push(...Os(e.slice(r,a),u,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,a=r+h;p.push(...Os(e.slice(r,a),u,n,c,s,t===o-1))}const d=2===l?",":"";p[0]="["+(o>0?p[0]+d:"");for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+d;let f=",\n";for(let e=2;e<l;e++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function Fs(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Ds{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Q(e),null!=n){const e=n.length;Y(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ue(t,this.size),this.strides=ye(e)}set(e,...t){0===t.length&&(t=[0]),Y(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ms().makeTensor(this.values,this.shape,this.dtype)}}let Ms=null,Ls=null,Bs=null;class zs{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Q(e),this.strides=ye(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Ls.buffer(this.shape,this.dtype,e)}bufferSync(){return Ls.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return xe(this.shape,e,"complex64"===this.dtype)}arraySync(){return xe(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Ms().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>vs(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Ms().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Ms().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>vs(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Ms().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Ms().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Ls.print(this,e)}clone(){return this.throwIfDisposed(),Ls.clone(this)}toString(e=!1){return $s(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Ls.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ms().makeVariable(this,e,t,n)}}function Ps(){return Fe("Tensor",(()=>zs))}Object.defineProperty(zs,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Ps();class Ws extends zs{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ee(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ms().disposeTensor(this),this.dataId=e.dataId,Ms().incRef(this,null)}dispose(){Ms().disposeVariable(this),this.isDisposedInternal=!0}}var Vs,Us,Gs,js,Hs;Object.defineProperty(Ws,Symbol.hasInstance,{value:e=>e instanceof zs&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Vs||(Vs={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Us||(Us={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Gs||(Gs={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(js||(js={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Hs||(Hs={}));const qs={float32:js,int32:Us,bool:Gs,complex64:Hs};function Ks(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return qs[e][t]}function Xs(e){return Ks(e,"int32")}function Ys(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function Zs(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function Js(e,t){if(e.dtype===t.dtype)return[e,t];const n=Ks(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Qs(e,t){return t.some((t=>t.id===e.id))}function ea(e){const t=[];return ta(e,t,new Set),t}function ta(e,t,n){if(null==e)return;if(e instanceof zs)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),ta(r,t,n))}}function na(e){return null!=e.kernelName}class ra{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class sa{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ra}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Hr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Ns(this.backendInstance),!0}setupRegisteredKernels(){Jr(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Jr(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof G||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,Hr(`Initialization of backend ${e} failed`),Hr(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return Hr(`Initialization of backend ${e} failed`),Hr(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return sa.nextTensorId++}nextVariableId(){return sa.nextVariableId++}clone(e){const t=ia.runKernel(Xt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return ia.runKernel(st,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==Yr(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=na(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(na(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const l=Yr(t,this.backendName);Y(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=na(e)?null:e.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=i()})),r&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=Zr(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(Y(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&pe(e[0])&&(s=e.map((e=>ws(e))));const a=r.write(s,t,n),i=new zs(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,a=new zs(r,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new Ws(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*he(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ws||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*he(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=Zr(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=ve(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=ea(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(Y(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));Y(s instanceof zs,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=we(Q(e),"float32");return ia.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!ee(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),oa);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return Y(me(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;Y(t.every((e=>e instanceof zs)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),Y(n.value instanceof zs,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),Y(me(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];Y(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),Y(a.every((e=>e instanceof zs)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=xs(),n=await this.backend.time(e);return n.wallMs=xs()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ra;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function aa(){const e=Oe();if(null==e._tfengine){const t=new Ee(e);e._tfengine=new sa(t)}var t;return t=e._tfengine.ENV,Re=t,Ms=()=>e._tfengine,e._tfengine}sa.nextTensorId=0,sa.nextVariableId=0;const ia=aa();function oa(e,t){const n={a:e,b:t};return ia.runKernel(Be,n)}function la(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function ua(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const ca=$e();function ha(e,t){let n=e;if(ks(e))return"string"===t?[]:[e.length];if(Ys(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(Zs(e))return[e.buffer.size/(null==t?4:he(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||ks(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&$e().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&pa(e,r,[]),r}function pa(e,t,n){if(n=n||[],!Array.isArray(e)&&!ks(e))return void Y(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Y(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Y(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)pa(e[t],r,n.concat(t))}function da(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function fa(e,t,n,r="numeric"){if(e instanceof Ps())return da(r,e.dtype,t,n),e;let s=fe(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),da(r,s,t,n),null==e||!ks(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=ha(e,s);ks(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?bs(e,s):Is(e,[],!0);return ia.makeTensor(i,a,s)}function ma(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>fa(e,`${t}[${s}]`,n,r)))}ca.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),ca.registerFlag("IS_BROWSER",(()=>ua())),ca.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),ca.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),ca.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),ca.registerFlag("PROD",(()=>!1)),ca.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>ca.getBool("DEBUG"))),ca.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),ca.registerFlag("IS_TEST",(()=>!1)),ca.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>ca.getBool("DEBUG"))),ca.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),ca.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),ca.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const ga="__op";function ya(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=ga;const s=(...e)=>{ia.startScope(n);try{const t=r(...e);return Se(t)&&console.error("Cannot return a Promise inside of tidy."),ia.endScope(t),t}catch(e){throw ia.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const ba=ya({complex_:function(e,t){const n=fa(e,"real","complex"),r=fa(t,"imag","complex");Z(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return ia.runKernel(ot,s)}});function xa(e,t,n,r){if(null==r)r=fe(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Zs(e)||Ys(e)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return ia.backend.createTensorFromGPUData(e,t||n,r)}if(!ks(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Ie(t);const e=Q(t),r=Q(n);Y(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==Q(t.slice(e));Y(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return ks(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?bs(e,r):Is(e,[],!0),ia.makeTensor(e,t,r)}function wa(e,t,n){return xa(e,t,ha(e,n),n)}const va={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class ka{static join(e){return new ka(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>ks(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=t+r.byteLength;this.shards.push({buffer:r,start:t,end:s}),t=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),s=new Uint8Array(r);let a=0;for(let r=n;r<this.shards.length;r++){const n=this.shards[r],i=e+a-n.start,o=a,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,i,l-i);if(s.set(u,o),a+=u.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const s=Math.floor((r-n)/2)+n,a=t(e[s]);if(0===a)return s;a<0?r=s:n=s+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function Ia(){return ia}function Na(){return ia.memory()}function Aa(e,t){return ia.tidy(e,t)}function Sa(e){ea(e).forEach((e=>e.dispose()))}function Ca(e){return ia.keep(e)}function Ea(e,t,n=1){return ia.registerBackend(e,t,n)}function Ta(){return ia.backend}Bs=function(e){$e().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const $a=4;async function _a(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+$a*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=$a,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Ba(await Promise.all(r)),specs:n}}function Ra(e,t){const n=new ka(e),r={};let s=0;for(const e of t){const t=Oa(e,((e,t)=>n.slice(s+e,s+t)));r[e.name]=Da(e,n.slice(s,s+t)),s+=t}return r}function Oa(e,t){const n=Q(e.shape);let r;if("quantization"in e){const t=e.quantization;r=va[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=$a+new Uint32Array(t(e,e+$a))[0];return e}r=va[e.dtype]}return n*r}async function Fa(e,t){const n=Q(e.shape);let r;if("quantization"in e){const t=e.quantization;r=va[t.dtype]}else{if("string"===e.dtype){let e=0;for(let r=0;r<n;r++)e+=$a+new Uint32Array(await t(e,e+$a))[0];return e}r=va[e.dtype]}return n*r}function Da(e,t){const n=e.name,r=e.dtype,s=e.shape,a=Q(s);let i,o=0;if("quantization"in e){const s=e.quantization;if("uint8"===s.dtype||"uint16"===s.dtype){if(!("min"in s)||!("scale"in s))throw new Error(`Weight ${e.name} with quantization ${s.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==s.dtype)throw new Error(`Weight ${e.name} has unknown quantization dtype ${s.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==r)throw new Error(`Weight ${e.name} is quantized with ${s.dtype} which only supports weights of type float32 not ${r}.`)}const l=va[s.dtype],u="uint8"===s.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===r)if("uint8"===s.dtype||"uint16"===s.dtype){i=new Float32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];i[e]=t*s.scale+s.min}}else{if("float16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type float32.`);{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const i=r[s],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[s]=o}return new Float32Array(s)}}();i=e(u)}}else{if("int32"!==r)throw new Error(`Unsupported dtype in weight '${n}': ${r}`);if("uint8"!==s.dtype&&"uint16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type int32.`);i=new Int32Array(u.length);for(let e=0;e<u.length;e++){const t=u[e];i[e]=Math.round(t*s.scale+s.min)}}o+=a*l}else if("string"===r){const n=Q(e.shape);i=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(o,o+$a))[0];o+=$a;const n=new Uint8Array(t.slice(o,o+e));i.push(n),o+=e}}else{const e=va[r];if("float32"===r)i=new Float32Array(t);else if("int32"===r)i=new Int32Array(t);else{if("bool"!==r){if("complex64"===r){i=new Float32Array(t);const e=new Float32Array(i.length/2),n=new Float32Array(i.length/2);for(let t=0;t<e.length;t++)e[t]=i[2*t],n[t]=i[2*t+1];const r=wa(e,s,"float32"),a=wa(n,s,"float32"),o=ba(r,a);return r.dispose(),a.dispose(),o}throw new Error(`Unsupported dtype in weight '${n}': ${r}`)}i=new Uint8Array(t)}o+=a*e}return wa(i,s,r)}async function Ma(e,t,n){let r=new Uint8Array(t);for(;r.byteLength<n;){const{done:t,value:s}=await e.read();if(t&&null==s){const e=n-r.byteLength;throw new Error(`Reader is done but ${e} bytes are still expected`)}const a=new Uint8Array(r.length+s.byteLength);a.set(r,0),a.set(new Uint8Array(s),r.length),r=a}return r.buffer}async function La(e,t){const n={},r=e.getReader();let s=new ArrayBuffer(0);for(const e of t){const t=await Fa(e,(async(e,t)=>(s=await Ma(r,s,t),s.slice(e,t))));s=await Ma(r,s,t);const a=s.slice(0,t);s=s.slice(t);const i=Da(e,a);if(n[e.name]=i,"webgpu"===ia.backendName){const e=Ta();"uploadToGPU"in e&&Q(i.shape)>=$e().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}function Ba(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const za="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Pa(e){return za?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function Wa(e){return ka.join(e)}function Va(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Ua(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Ga(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function ja(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),Ga(e,n,r)}function Ha(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Pa(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Pa(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new ka(e.weightData).byteLength}}function qa(e){const t=[];for(const n of e)t.push(...n.weights);return t}class Ka{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ka.instance&&(Ka.instance=new Ka),Ka.instance}static registerSaveRouter(e){Ka.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ka.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ka.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ka.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Ka.getInstance().loadRouters:Ka.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const Xa=e=>Ka.registerSaveRouter(e),Ya=e=>Ka.registerLoadRouter(e),Za=e=>Ka.getSaveHandlers(e),Ja=(e,t)=>Ka.getLoadHandlers(e,t),Qa="tensorflowjs",ei="models_store",ti="model_info_store";function ni(){if(!$e().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ri(e){const t=e.result;t.createObjectStore(ei,{keyPath:"modelPath"}),t.createObjectStore(ti,{keyPath:"modelPath"})}class si{constructor(e){if(this.indexedDB=ni(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Qa,1);r.onupgradeneeded=()=>ri(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(ei,"readonly"),r=t.objectStore(ei).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{t.weightData=ka.join(t.weightData);const r=Ha(t),a=s.transaction(ti,"readwrite");let i,o,l=a.objectStore(ti);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(e){return n(e)}i.onsuccess=()=>{o=s.transaction(ei,"readwrite");const i=o.objectStore(ei);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(e){return n(e)}u.onsuccess=()=>e({modelArtifactsInfo:r}),u.onerror=e=>{l=a.objectStore(ti);const t=l.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(u.error)),t.onerror=e=>(s.close(),n(u.error))}},i.onerror=e=>(s.close(),n(i.error)),a.oncomplete=()=>{null==o?s.close():o.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}si.URL_SCHEME="indexeddb://";const ai=e=>{return $e().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(si.URL_SCHEME)?(t=e.slice(si.URL_SCHEME.length),new si(t)):null;var t};Ka.registerSaveRouter(ai),Ka.registerLoadRouter(ai);class ii{constructor(){this.indexedDB=ni()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Qa,1);n.onupgradeneeded=()=>ri(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(ti,"readonly"),a=s.objectStore(ti).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(si.URL_SCHEME)?t.slice(si.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Qa,1);r.onupgradeneeded=()=>ri(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(ti,"readwrite"),i=a.objectStore(ti),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{l=s.transaction(ei,"readwrite");const r=l.objectStore(ei).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const oi="/",li="tensorflowjs_models",ui="info",ci="model_topology",hi="weight_specs",pi="weight_data",di="model_metadata";function fi(e){return{info:[li,e,ui].join(oi),topology:[li,e,ci].join(oi),weightSpecs:[li,e,hi].join(oi),weightData:[li,e,pi].join(oi),modelMetadata:[li,e,di].join(oi)}}function mi(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function gi(e){const t=e.split(oi);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(oi)}class yi{constructor(e){if(!$e().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=fi(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Ha(e),s=ka.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(za)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(s));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw mi(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(za){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}yi.URL_SCHEME="localstorage://";const bi=e=>{return $e().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(yi.URL_SCHEME)?(t=e.slice(yi.URL_SCHEME.length),new yi(t)):null;var t};Ka.registerSaveRouter(bi),Ka.registerLoadRouter(bi);class xi{constructor(){Y($e().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Y("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=li+oi,n=oi+ui;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[gi(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=fi(e=(t=e).startsWith(yi.URL_SCHEME)?t.slice(yi.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return mi(n),r}}const wi="://";class vi{constructor(){this.managers={}}static getInstance(){return null==vi.instance&&(vi.instance=new vi),vi.instance}static registerManager(e,t){Y(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(wi)&&(e=e.slice(0,e.indexOf(wi))),Y(e.length>0,(()=>"scheme must not be an empty string."));const n=vi.getInstance();Y(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=vi.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(vi.getInstance().managers)}}function ki(e){if(-1===e.indexOf(wi))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${vi.getSchemes().join(",")}`);return{scheme:e.split(wi)[0],path:e.split(wi)[1]}}async function Ii(e,t,n=!1){Y(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=Ka.getLoadHandlers(e);Y(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Y(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const s=r[0],a=Ka.getSaveHandlers(t);Y(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Y(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=a[0],o=ki(e).scheme,l=ki(e).path,u=o===ki(e).scheme,c=await s.load();n&&u&&await vi.getManager(o).removeModel(l);const h=await i.save(c);return n&&!u&&await vi.getManager(o).removeModel(l),h.modelArtifactsInfo}async function Ni(){const e=vi.getSchemes(),t={};for(const n of e){const e=await vi.getManager(n).listModels();for(const r in e)t[n+wi+r]=e[r]}return t}async function Ai(e){const t=ki(e);return vi.getManager(t.scheme).removeModel(t.path)}async function Si(e,t){return Ii(e,t,!1)}async function Ci(e,t){return Ii(e,t,!0)}class Ei{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&$e().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(e,t)}isTypedArray(e){return ns(e)}}if($e().get("IS_BROWSER")){$e().setPlatform("browser",new Ei);try{vi.registerManager(yi.URL_SCHEME,new xi)}catch(e){}try{vi.registerManager(si.URL_SCHEME,new ii)}catch(e){}}let Ti;function $i(e,t="float32",n){return t=t||"float32",Ie(e),new Ds(e,t,n)}$e().get("IS_NODE")&&!$e().get("IS_BROWSER")&&$e().setPlatform("node",new class{constructor(){this.util=n(590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=$e().global.fetch?$e().global.fetch(e,t):(null==Ti&&(Ti=n(817)),Ti(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});const _i=ya({cast_:function(e,t){const n=fa(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return ia.runKernel(st,r,s)}}),Ri=ya({clone_:function(e){const t={x:fa(e,"x","clone","string_or_numeric")};return ia.runKernel(Xt,t)}});function Oi(e,t=!1){console.log(e.toString(t))}aa(),Ls={buffer:$i,cast:_i,clone:Ri,print:Oi};const Fi=ya({add_:function(e,t){let n=fa(e,"a","add"),r=fa(t,"b","add");[n,r]=Js(n,r);const s={a:n,b:r};return ia.runKernel(Be,s)}}),Di=ya({floorDiv_:function(e,t){let n=fa(e,"a","floorDiv"),r=fa(t,"b","floorDiv");[n,r]=Js(n,r);const s={a:n,b:r};return ia.runKernel(Ut,s)}}),Mi=ya({div_:function(e,t){let n=fa(e,"a","div"),r=fa(t,"b","div");if([n,r]=Js(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Di(n,r);const s={a:n,b:r};return ia.runKernel($t,s,{})}}),Li=ya({mul_:function(e,t){let n=fa(e,"a","mul"),r=fa(t,"b","mul");[n,r]=Js(n,r);const s={a:n,b:r};return ia.runKernel(Sn,s)}}),Bi=ya({sqrt_:function(e){const t={x:fa(e,"x","sqrt","float32")};return ia.runKernel(pr,t)}}),zi=ya({square_:function(e){const t=fa(e,"x","square");return ia.runKernel("Square",{x:t},{})}}),Pi=ya({zerosLike_:function(e){const t={x:fa(e,"x","zerosLike")};return ia.runKernel(zr,t)}});function Wi(e){return ia.customGrad(e)}function Vi(e,t){if((ks(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&ks(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return xa(e,[],[],t)}const Ui=new Map,Gi=new Map;class ji{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Hi{constructor(){this.classNameMap={}}static getMap(){return null==Hi.instance&&(Hi.instance=new Hi),Hi.instance}static register(e){Hi.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function qi(e,t,n){Y(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Y("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Y(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);const r=t+">"+n;return Hi.register(e),Ui.set(r,e),Gi.set(e,r),e}class Ki extends ji{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return Sa(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){Y(me(e),(()=>"The f passed in variableGrads(f) must be a function")),Y(null==t||Array.isArray(t)&&t.every((e=>e instanceof Ws)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in ia.registeredVariables)t.push(ia.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;t=t.filter((e=>e.trainable)),Y(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:i}=ia.gradients(e,t,null,!0);Y(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),Y(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:a,grads:o}}(e,t)}dispose(){null!=this.iterations_&&Sa(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Vi(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ki,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Xi extends Ki{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ia.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ia.registeredVariables[t],s=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Aa((()=>Pi(r).variable(s)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Aa((()=>Pi(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Aa((()=>{const e=Fi(Li(i,this.rho),Li(zi(a),1-this.rho)),t=Li(Mi(Bi(Fi(o,this.epsilon)),Bi(Fi(i,this.epsilon))),a),n=Fi(Li(o,this.rho),Li(zi(t),1-this.rho));i.assign(e),o.assign(n);const s=Fi(Li(t,-this.learningRate),r);r.assign(s)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Sa(this.accumulatedGrads.map((e=>e.variable))),Sa(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function Yi(e,t,n){Ie(e);const r={shape:e,value:t,dtype:n=n||fe(t)};return ia.runKernel(Pt,{},r)}class Zi extends Ki{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ia.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Aa((()=>Yi(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;Aa((()=>{const e=Fi(a,zi(s));a.assign(e);const t=Fi(Li(Mi(s,Bi(Fi(e,ia.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Sa(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const Ji=ya({pow_:function(e,t){let n=fa(e,"base","pow"),r=fa(t,"exp","pow");[n,r]=Js(n,r);const s={a:n,b:r};return ia.runKernel(Mn,s)}}),Qi=ya({sub_:function(e,t){let n=fa(e,"a","sub"),r=fa(t,"b","sub");[n,r]=Js(n,r);const s={a:n,b:r};return ia.runKernel(Tr,s)}});class eo extends Ki{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Aa((()=>{this.accBeta1=Vi(t).variable(),this.accBeta2=Vi(n).variable()})),null==r&&(this.epsilon=ia.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Aa((()=>{const n=Qi(1,this.accBeta1),r=Qi(1,this.accBeta2);t.forEach(((t,s)=>{const a=ia.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Aa((()=>Pi(a).variable(i)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:Aa((()=>Pi(a).variable(i)))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,c=Fi(Li(l,this.beta1),Li(o,1-this.beta1)),h=Fi(Li(u,this.beta2),Li(zi(o),1-this.beta2)),p=Mi(c,n),d=Mi(h,r);l.assign(c),u.assign(h);const f=Fi(Li(Mi(p,Fi(Bi(d),this.epsilon)),-this.learningRate),a);a.assign(f)})),this.accBeta1.assign(Li(this.accBeta1,this.beta1)),this.accBeta2.assign(Li(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Sa(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Sa(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Aa((()=>{this.accBeta1.assign(Ji(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ji(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const to=ya({abs_:function(e){const t=fa(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return ia.runKernel(lt,e)}{const e={x:t};return ia.runKernel(De,e)}}});function no(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function ro(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function so(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let s=0;s<n;s++){let a=e[e.length-s-1];null==a&&(a=1);let i=t[t.length-s-1];if(null==i&&(i=1),1===a)r[n-s-1]=i;else if(1===i)r[n-s-1]=a;else{if(a!==i)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);r[n-s-1]=a}}return r}const ao=ya({maximum_:function(e,t){let n=fa(e,"a","maximum"),r=fa(t,"b","maximum");[n,r]=Js(n,r),"bool"===n.dtype&&(n=_i(n,"int32"),r=_i(r,"int32")),so(n.shape,r.shape);const s={a:n,b:r};return ia.runKernel(fn,s)}});class io extends Ki{static get className(){return"Adamax"}constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Aa((()=>{this.iteration=Vi(0).variable(),this.accBeta1=Vi(t).variable()})),null==r&&(this.epsilon=ia.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Aa((()=>{const n=Qi(1,this.accBeta1),r=Mi(-this.learningRate,Fi(Li(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=ia.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Pi(a).variable(i)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:Pi(a).variable(i)});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,c=Fi(Li(l,this.beta1),Li(o,1-this.beta1)),h=Li(u,this.beta2),p=to(o),d=ao(h,p);l.assign(c),u.assign(d);const f=Fi(Li(Mi(r,n),Mi(c,Fi(d,this.epsilon))),a);a.assign(f)})),this.iteration.assign(Fi(this.iteration,1)),this.accBeta1.assign(Li(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Sa(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Sa(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class oo extends Ki{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=ia.registeredVariables[t];Aa((()=>{const e=Fi(Li(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Ca(Vi(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class lo extends oo{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Vi(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ia.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Aa((()=>Pi(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&Aa((()=>{let e;const t=Fi(Li(this.m,s),a);e=this.useNesterov?Fi(Li(this.c,Fi(a,Li(t,this.m))),r):Fi(Li(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Sa(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class uo extends Ki{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=ia.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=ia.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Aa((()=>Pi(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Aa((()=>Pi(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Aa((()=>Pi(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Aa((()=>{const e=Fi(Li(i,this.decay),Li(zi(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=Fi(Li(t,this.decay),Li(a,1-this.decay)),l=Mi(Li(a,this.learningRate),Bi(Qi(e,Fi(zi(s),this.epsilon)))),u=Fi(Li(o,this.momentum),l);i.assign(e),t.assign(s),o.assign(u);const c=Qi(r,u);r.assign(c)}else{const e=Fi(Li(i,this.decay),Li(zi(a),1-this.decay)),t=Fi(Li(o,this.momentum),Mi(Li(a,this.learningRate),Bi(Fi(e,this.epsilon))));i.assign(e),o.assign(t);const n=Qi(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Sa(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Sa(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Sa(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const co=[Xi,Zi,eo,io,lo,uo,oo];function ho(e){return new Promise((e=>setTimeout(e))).then(e)}class po{constructor(e){if(!$e().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(po.URL_SCHEME)&&(e=e.slice(po.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=ka.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=Ua(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await ho((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await ho((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Ha(e)}}}}po.URL_SCHEME="downloads://";class fo{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:s});const a=ja(r,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(s).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Va(e.name))),r={};for(const s of e)s.paths.forEach((e=>{const s=Va(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function mo(e){return new fo(e)}function go(e,t,n,r){!function(e){Y(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){Y(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Y(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Y(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function yo(e,t){null==t&&(t={});const n=null==t.fetchFunc?$e().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await go(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await go(s,t.onProgress,.5,1)}async function bo(e,t="",n,r){return xo((e=>yo(e,{requestInit:r})))(e,t,n)}function xo(e){return async(t,n="",r)=>{const s=t.map((()=>!1)),a={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=va[l]*Q(e.shape),c=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=u}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),h={};let p=0;return l.forEach((e=>{const n=t[e].paths.length,r=new ka(c.slice(p,p+n));a[e].forEach((e=>{const t=Ra(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),p+=n})),h}}Ka.registerSaveRouter((e=>$e().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(po.URL_SCHEME)?function(e="model"){return new po(e)}(e.slice(po.URL_SCHEME.length)):null));class wo{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Y("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=$e().platform.fetch,Y(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&Y(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Ua(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=ka.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Ha(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){return this.loadOptions.streamWeights?this.loadStream():ja(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=qa(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const r=null==t.fetchFunc?$e().platform.fetch:t.fetchFunc;let s,a=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var i;a<e.length;){if(!s){const n=(await r(e[a],t.requestInit,{isBinary:!0})).body;s=n.getReader()}const{done:o,value:l}=await s.read();if(!o)return void n.enqueue(l);a++,s=void 0,null===(i=t.onProgress)||void 0===i||i.call(t,a/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):a.push(s+e+r);return this.weightUrlConverter&&a.push(...await Promise.all(i)),a}async loadWeights(e){const t=await this.getWeightUrls(e);return[qa(e),await yo(t,this.loadOptions)]}}function vo(e){return null!=e.match(wo.URL_SCHEME_REGEX)}wo.URL_SCHEME_REGEX=/^https?:\/\//;const ko=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>vo(e))):vo(e),n)return Io(e,t)}return null};function Io(e,t){return new wo(e,t)}function No(e,t){return Io(e,t)}Ka.registerSaveRouter(ko),Ka.registerLoadRouter(ko);class Ao{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class So{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class Co{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function Eo(e,t,n,r){return new Co(To(...arguments))}function To(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Ao(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ao({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ao({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function $o(e){return new So(e)}function _o(e){return new So(e)}function Ro(e,t,n){if(J(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=ha(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return xa(e,t,r,n)}let Oo;const Fo=ya({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=Yr(Wr,ia.backendName)){const n={pixels:e},r={numChannels:t};return ia.runKernel(Wr,n,r)}const[l,u]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)c=e.data;else if(a||s||o){if(null==Oo)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Oo=new OffscreenCanvas(1,1).getContext("2d")}else Oo=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Oo.canvas.width=l,Oo.canvas.height=u,Oo.drawImage(e,0,0,l,u),c=Oo.getImageData(0,0,l,u).data}if(4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return Ro(h,[u,l,t],"int32")}}),Do=-2,Mo=-1;function Lo(e,t,n){const r=e.shape.length;Y(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),Y(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)Y(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function Bo(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function zo(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function Po(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function Wo(e,t,n){return n<=e?n:n-(t-1)}function Vo(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Uo(e,t,n,r,s,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),p=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Go(i,l,u,r,e),h=jo(o,l,u,s,e),p=Po(a,l,u,e)}else for(let t=0;t<u;t++)c[t]=qo(i,r,a,e,t,l),h[t]=Ko(o,s,a,e,t,l),p[t]=Ho(a,t,l);return{begin:c,end:h,strides:p}}function Go(e,t,n,r,s){const a=[...s],i=Vo(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=Wo(t,n,s);let o=r[i];e&1<<i&&(o=0),a[s]=o}return a}function jo(e,t,n,r,s){const a=[...s],i=Vo(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=Wo(t,n,s);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=q(0,a[e],s[e])}return a}function Ho(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function qo(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=q(0,i,l-1),i}function Ko(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=o>0?q(0,i,l):q(-1,i,l-1),i}function Xo(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function Yo(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Zo(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{Y(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(Y(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function Jo(e,t,n,r,s,a,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)c&&1<<e&o&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(Do),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(Mo),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,p);let d=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===p.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(p.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const s=[p.beginMask&1<<t,p.endMask&1<<t],a=[p.strides[t]>0?0:-1,p.strides[t]>0?r:r-1];if(n&&p.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[t];const i=!!(p.beginMask&1<<t&&p.endMask&1<<t);if(p.beginValid&&p.endValid){if(n){const e=p.begin[t]<0?r+p.begin[t]:p.begin[t];if(p.begin[t]=e,p.end[t]=p.begin[t]+1,e<0||e>=r)throw Error(`slice index ${p.begin[t]} of dimension ${t} out of bounds.`)}else p.begin[t]=Qo(p.begin[t],0,p.strides[t],r,s,a),p.end[t]=Qo(p.end[t],1,p.strides[t],r,s,a);const e=1===p.strides[t]&&0===p.begin[t]&&p.end[t]===r;d=d&&e,f=f&&(0===t&&1===p.strides[t]||e)}else d=d&&1===p.strides[t]&&i,f=f&&(0===t&&1===p.strides[t]||i);let o,l=!1;if(p.beginValid&&p.endValid?(o=p.end[t]-p.begin[t],l=!0):n?(o=1,l=!0):i&&r>=0&&(o=p.strides[t]<0?-r:r,l=!0),l){let e;e=0===o||o<0!=p.strides[t]<0?0:Math.trunc(o/p.strides[t])+(o%p.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<p.finalShapeGatherIndices.length;++e){const t=p.finalShapeGatherIndices[e];t>=0?y.push(g[t]):t===Do&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>p.finalShapeGatherIndices[t]!==Do)),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function Qo(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}const el=ya({acos_:function(e){const t={x:fa(e,"x","acos")};return ia.runKernel(Me,t)}}),tl=ya({acosh_:function(e){const t={x:fa(e,"x","acosh")};return ia.runKernel(Le,t)}}),nl=ya({addN_:function(e){Y(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),Y(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>fa(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!ee(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return ia.runKernel(ze,r)}}),rl=ya({all_:function(e,t=null,n=!1){const r={x:fa(e,"x","all","bool")},s={axis:t,keepDims:n};return ia.runKernel(Pe,r,s)}}),sl=ya({any_:function(e,t=null,n=!1){const r={x:fa(e,"x","any","bool")},s={axis:t,keepDims:n};return ia.runKernel(We,r,s)}}),al=ya({argMax_:function(e,t=0){const n={x:fa(e,"x","argMax")},r={axis:t};return ia.runKernel(Ve,n,r)}}),il=ya({argMin_:function(e,t=0){const n={x:fa(e,"x","argMin")},r={axis:t};return ia.runKernel(Ue,n,r)}}),ol=ya({asin_:function(e){const t={x:fa(e,"x","asin")};return ia.runKernel(Ge,t)}}),ll=ya({asinh_:function(e){const t={x:fa(e,"x","asinh")};return ia.runKernel(je,t)}}),ul=ya({atan_:function(e){const t={x:fa(e,"x","atan")};return ia.runKernel(He,t)}}),cl=ya({atan2_:function(e,t){let n=fa(e,"a","atan2"),r=fa(t,"b","atan2");[n,r]=Js(n,r);const s={a:n,b:r};return ia.runKernel(Ke,s)}}),hl=ya({atanh_:function(e){const t={x:fa(e,"x","atanh")};return ia.runKernel(qe,t)}});function pl(e,t,n,r,s="NHWC",a){return ml(e,[...t,e[3]],n,a,r,null,null,Al(s))}function dl(e,t,n,r,s,a,i="channelsLast"){const[o,l]=bl(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return ml(e,u,n,r,s,a,!1,i)}function fl(e,t,n,r,s,a,i="NDHWC"){const[o,l,u]=xl(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return gl(e,c,n,r,s,!1,h,a)}function ml(e,t,n,r,s,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[p,d,,f]=t,[m,g]=bl(n),[y,b]=bl(r),x=wl(p,y),w=wl(d,b),{padInfo:v,outHeight:k,outWidth:I}=function(e,t,n,r,s,a,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=yl(e,t,n));const a=e[1];return[vl((e[0]-t+2*r)/n+1,s),vl((a-t+2*r)/n+1,s)]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),l=Math.floor(e/2),p=e-l,d=Math.floor(o/2);u={top:l,bottom:p,left:d,right:o-d,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===l?e[1][0]:e[2][0],d="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=vl((t-a+p+d)/r+1,o),h=vl((n-i+f+m)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,m,g,x,w,a,o),N=i?f*h:f;let A;return"channelsFirst"===o?A=[l,N,k,I]:"channelsLast"===o&&(A=[l,k,I,N]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:N,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:e,outShape:A,filterShape:t}}function gl(e,t,n,r,s,a=!1,i="channelsLast",o){let[l,u,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,p]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,p,u,c,h]=e}const[d,f,m,,g]=t,[y,b,x]=xl(n),[w,v,k]=xl(r),I=wl(d,w),N=wl(f,v),A=wl(m,k),{padInfo:S,outDepth:C,outHeight:E,outWidth:T}=function(e,t,n,r,s,a,i,o,l,u,c){let h,p,d,f;if("valid"===e&&(e=0),"number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const m=function(e,t,n,r,s,a){null==s&&(s=yl(e,t[0],r[0]));const i=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*s>=t[n]&&(i[n]=vl((e[n]-t[n]+2*s)/r[n]+1,a));return i}([t,n,r,1],[o,l,u],0,[s,a,i],e,c);p=m[0],d=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{p=Math.ceil(t/s),d=Math.ceil(n/a),f=Math.ceil(r/i);const e=(p-1)*s+o-t,c=(d-1)*a+l-n,m=(f-1)*i+u-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,w=Math.floor(m/2);h={top:b,bottom:x,left:w,right:m-w,front:g,back:y,type:"SAME"}}}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(s,u,c,h,y,b,x,I,N,A,o),$=a?g*p:g;let _;return"channelsFirst"===i?_=[l,$,C,E,T]:"channelsLast"===i&&(_=[l,C,E,T,$]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:p,outDepth:C,outHeight:E,outWidth:T,outChannels:$,padInfo:S,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:N,effectiveFilterWidth:A,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:e,outShape:_,filterShape:t}}function yl(e,t,n,r=1){const s=wl(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function bl(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function xl(e){return"number"==typeof e?[e,e,e]:e}function wl(e,t){return t<=1?e:e+(e-1)*(t-1)}function vl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function kl(e){const[t,n,r]=bl(e);return 1===t&&1===n&&1===r}function Il(e,t){return kl(e)||kl(t)}function Nl(e){return bl(e).every((e=>e>0))}function Al(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Sl(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)Y(te(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{Y(te(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const Cl=ya({reshape_:function(e,t){const n={x:fa(e,"x","reshape","string_or_numeric")},r={shape:t};return ia.runKernel(Hn,n,r)}}),El=ya({avgPool_:function(e,t,n,r,s){const a=fa(e,"x","avgPool","float32");Y(Il(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=Cl(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Y(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),Sl("avgPool",r,s);const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=ia.runKernel(Xe,l,u);return c=_i(c,a.dtype),o?Cl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Tl=ya({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const i=fa(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=Cl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Y(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),Y("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),Y("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),Sl("avgPool3d",r,s);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let h=ia.runKernel(Ze,u,c);return h=_i(h,o.dtype),l?Cl(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),$l=ya({concat_:function(e,t=0){Y(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=ma(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Ri(n[0]);const r=n,s={axis:t};return ia.runKernel(ut,r,s)}}),_l=ya({matMul_:function(e,t,n=!1,r=!1){let s=fa(e,"a","matMul"),a=fa(t,"b","matMul");[s,a]=Js(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return ia.runKernel(Qe,i,o)}}),Rl=ya({sigmoid_:function(e){const t={x:fa(e,"x","sigmoid","float32")};return ia.runKernel(cr,t)}}),Ol=ya({slice_:function(e,t,n){const r=fa(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return ia.runKernel(ir,s,a)}}),Fl=ya({tanh_:function(e){const t={x:fa(e,"x","tanh","float32")};return ia.runKernel(_r,t)}}),Dl=ya({basicLSTMCell_:function(e,t,n,r,s,a){const i=fa(e,"forgetBias","basicLSTMCell"),o=fa(t,"lstmKernel","basicLSTMCell"),l=fa(n,"lstmBias","basicLSTMCell"),u=fa(r,"data","basicLSTMCell"),c=fa(s,"c","basicLSTMCell"),h=fa(a,"h","basicLSTMCell"),p=$l([u,h],1),d=_l(p,o),f=Fi(d,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=Ol(f,[0,0],y),x=Ol(f,[0,g],y),w=Ol(f,[0,2*g],y),v=Ol(f,[0,3*g],y),k=Fi(Li(Rl(b),Fl(x)),Li(c,Rl(Fi(i,w))));return[k,Li(Fl(k),Rl(v))]}}),Ml=ya({batchToSpaceND_:function(e,t,n){const r=fa(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));Y(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),Y(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),Y(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},i={blockShape:t,crops:n};return ia.runKernel(et,a,i)}}),Ll=ya({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=fa(e,"x","batchNorm"),o=fa(t,"mean","batchNorm"),l=fa(n,"variance","batchNorm");let u,c;null!=s&&(u=fa(s,"scale","batchNorm")),null!=r&&(c=fa(r,"offset","batchNorm")),Y(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Y(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Y(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?Cl(e,[1,1,1,e.size]):2===e.rank?Cl(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Cl(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:u,offset:c,mean:o,variance:l},p={varianceEpsilon:a},d=ia.runKernel(Gt,h,p);return Cl(d,i.shape)}}),Bl=ya({batchNorm2d_:function(e,t,n,r,s,a){const i=fa(e,"x","batchNorm"),o=fa(t,"mean","batchNorm"),l=fa(n,"variance","batchNorm");let u,c;return null!=s&&(u=fa(s,"scale","batchNorm")),null!=r&&(c=fa(r,"offset","batchNorm")),Y(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),Y(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),Y(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&Y(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&Y(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Ll(i,o,l,c,u,a)}}),zl=ya({batchNorm3d_:function(e,t,n,r,s,a){const i=fa(e,"x","batchNorm"),o=fa(t,"mean","batchNorm"),l=fa(n,"variance","batchNorm");let u,c;return null!=s&&(u=fa(s,"scale","batchNorm")),null!=r&&(c=fa(r,"offset","batchNorm")),Y(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),Y(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),Y(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&Y(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&Y(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Ll(i,o,l,c,u,a)}}),Pl=ya({batchNorm4d_:function(e,t,n,r,s,a){const i=fa(e,"x","batchNorm"),o=fa(t,"mean","batchNorm"),l=fa(n,"variance","batchNorm");let u,c;return null!=s&&(u=fa(s,"scale","batchNorm")),null!=r&&(c=fa(r,"offset","batchNorm")),Y(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),Y(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),Y(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&Y(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&Y(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Ll(i,o,l,c,u,a)}}),Wl=ya({bincount_:function(e,t,n){const r=fa(e,"x","bincount"),s=fa(t,"weights","bincount");Y("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),Y(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Y(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},i={size:n};return ia.runKernel(tt,a,i)}}),Vl=ya({bitwiseAnd_:function(e,t){const n=fa(e,"x","bitwiseAnd"),r=fa(t,"y","bitwiseAnd");if(!ee(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);const s={a:n,b:r};return ia.runKernel(nt,s)}}),Ul=ya({broadcastArgs_:function(e,t){const n=fa(e,"s0","broadcastArgs","int32"),r=fa(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return ia.runKernel(rt,s)}}),Gl=ya({broadcastTo_:function(e,t){let n=fa(e,"broadcastTo","x");const r=n.shape;if(Ie(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Cl(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Ri(n);const i={x:n},o={reps:a};return ia.runKernel(Rr,i,o)}}),jl=ya({ceil_:function(e){const t={x:fa(e,"x","ceil","float32")};return ia.runKernel(at,t)}}),Hl=ya({clipByValue_:function(e,t,n){const r=fa(e,"x","clipByValue");if(Y(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return Yi(r.shape,t,r.dtype);const s={x:r},a={clipValueMin:t,clipValueMax:n};return ia.runKernel(it,s,a)}}),ql=ya({concat1d_:function(e){return $l(e,0)}}),Kl=ya({concat2d_:function(e,t){return $l(e,t)}}),Xl=ya({concat3d_:function(e,t){return $l(e,t)}}),Yl=ya({concat4d_:function(e,t){return $l(e,t)}}),Zl=ya({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=fa(e,"x","conv2d","float32"),l=fa(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Cl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Y(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),Y(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),Sl("conv2d",r,i);const h="NHWC"===s?u.shape[3]:u.shape[1];Y(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),Y(Il(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),Y(Nl(a),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),Y(Nl(n),(()=>"Error in conv2D: Strides should be larger than 0."));const p={x:u,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=ia.runKernel(ct,p,d);return c?Cl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Jl=ya({conv1d_:function(e,t,n,r,s="NWC",a=1,i){const o=fa(e,"x","conv1d"),l=fa(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Cl(o,[1,o.shape[0],o.shape[1]])),Y(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),Y(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),Sl("conv1d",r,i),Y(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),Y(Il(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),Y(Nl(a),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),Y(Nl(n),(()=>"Error in conv1D: Stride should be larger than 0.")),Y("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=Cl(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=Cl(u,[u.shape[0],1,u.shape[1],u.shape[2]]),d=Zl(p,h,[1,n],r,"NHWC",[1,a],i);return Cl(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),Ql=ya({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",i){Y(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Cl(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),Y(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),Y(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),Y(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];Y(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),Y(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),Sl("conv2dDerInput",s,i);const p={dy:l,filter:n},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},f=ia.runKernel(pt,p,d);return u?Cl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),eu=ya({conv2dTranspose_:function(e,t,n,r,s,a){const i=fa(e,"x","conv2dTranspose"),o=fa(t,"filter","conv2dTranspose");return Ql(n,i,o,r,s,"NHWC",a)}}),tu=ya({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=fa(e,"x","conv3d"),o=fa(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=Cl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Y(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),Y(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),Y(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),Y(Il(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),Y("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`)),Y(Nl(a),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),Y(Nl(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:a},p=ia.runKernel(dt,c,h);return u?Cl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),nu=ya({conv3DBackpropInput_:function(e,t,n,r,s){Y(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=Cl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];Y(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),Y(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),Y(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),Y(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),Y(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:s,strides:r,inputShape:a},p=ia.runKernel(mt,c,h);return o?Cl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),ru=ya({conv3dTranspose_:function(e,t,n,r,s){const a=fa(e,"x","conv3dTranspose"),i=fa(t,"filter","conv3dTranspose");return nu(n,a,i,r,s)}}),su=ya({cos_:function(e){const t={x:fa(e,"x","cos","float32")};return ia.runKernel(gt,t)}}),au=ya({cosh_:function(e){const t={x:fa(e,"x","cosh","float32")};return ia.runKernel(yt,t)}}),iu=ya({cumprod_:function(e,t=0,n=!1,r=!1){const s={x:fa(e,"x","cumprod")},a={axis:t,exclusive:n,reverse:r};return ia.runKernel(bt,s,a)}}),ou=ya({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:fa(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return ia.runKernel(xt,s,a)}}),lu=ya({denseBincount_:function(e,t,n,r=!1){const s=fa(e,"x","denseBincount"),a=fa(t,"weights","denseBincount");Y("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),Y(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),Y(n>=0,(()=>`size must be non-negative, but got ${n}.`)),Y(a.size===s.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`));const i={x:s,weights:a},o={size:n,binaryOutput:r};return ia.runKernel(vt,i,o)}}),uu=ya({depthToSpace_:function(e,t,n="NHWC"){const r=fa(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];Y(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),Y(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),Y(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),Y(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:t,dataFormat:n};return ia.runKernel(kt,o,l)}}),cu=ya({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=fa(e,"x","depthwiseConv2d","float32"),l=fa(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Cl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Y(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),Y(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));const h="NHWC"===s?u.shape[3]:u.shape[1];Y(h===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Sl("depthwiseConv2d",r,i);const p={x:u,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=ia.runKernel(It,p,d);return c?Cl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),hu=ya({diag_:function(e){const t={x:fa(e,"x","diag")};return ia.runKernel(St,t)}}),pu=ya({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const i=fa(e,"x","dilation2d"),o=fa(t,"filter","dilation2d");Y(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),Y(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),Y("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=Cl(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),Y(l.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`));const c={x:l,filter:o},h={strides:n,pad:r,dilations:s},p=ia.runKernel(Ct,c,h);return u?Cl(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),du=ya({equal_:function(e,t){let n=fa(e,"a","equal","string_or_numeric"),r=fa(t,"b","equal","string_or_numeric");[n,r]=Js(n,r),so(n.shape,r.shape);const s={a:n,b:r};return ia.runKernel(Dt,s)}}),fu=ya({where_:function(e,t,n){const r=fa(t,"a","where"),s=fa(n,"b","where"),a=fa(e,"condition","where","bool"),i=so(so(a.shape,r.shape),s.shape),o={condition:Gl(a,i),t:Gl(r,i),e:Gl(s,i)};return ia.runKernel(sr,o)}}),mu=ya({divNoNan_:function(e,t){let n=fa(e,"a","div"),r=fa(t,"b","div");[n,r]=Js(n,r);const s=Mi(n,r),a=Pi(s),i=du(r,a);return fu(i,a,s)}}),gu=ya({dot_:function(e,t){const n=fa(e,"t1","dot"),r=fa(t,"t2","dot");Y(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(Y(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=Cl(n,[1,-1]),t=Cl(r,[-1,1]),s=_l(e,t);return Cl(s,[])}if(1===n.rank&&2===r.rank){const e=Cl(n,[1,-1]),t=Cl(r,[r.shape[0],r.shape[1]]),s=_l(e,t);return Cl(s,[s.size])}if(2===n.rank&&1===r.rank){const e=Cl(r,[-1,1]),t=_l(n,e);return Cl(t,[t.size])}{const e=Cl(r,[r.shape[0],r.shape[1]]);return _l(n,e)}}}),yu=ya({einsum_:function(e,...t){const n=t.map(((e,t)=>fa(e,`tensors${t}`,"einsum"))),r={equation:e};return ia.runKernel(_t,n,r)}}),bu=ya({elu_:function(e){const t={x:fa(e,"x","elu","float32")};return ia.runKernel(Rt,t)}}),xu=ya({ensureShape_:function(e,t){const n=fa(e,"x","ensureShape","string_or_numeric");if(!function(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}}),wu=ya({erf_:function(e){let t=fa(e,"x","erf");Y("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=_i(t,"float32"));const n={x:t};return ia.runKernel(Ft,n)}});function vu(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function ku(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function Iu(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function Nu(e,t){return ku(e,t.map((e=>1)),t)}function Au(e,t,n){Y(vu(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Su(e,t){if(vu(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Cu(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Eu(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Tu=ya({max_:function(e,t=null,n=!1){const r={x:fa(e,"x","max")},s={reductionIndices:t,keepDims:n};return ia.runKernel(dn,r,s)}}),$u=ya({min_:function(e,t=null,n=!1){const r={x:fa(e,"x","min")},s={axis:t,keepDims:n};return ia.runKernel(vn,r,s)}}),_u=ya({sum_:function(e,t=null,n=!1){let r=fa(e,"x","sum");"bool"===r.dtype&&(r=_i(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return ia.runKernel(dr,s,a)}});function Ru(e,t,n=null){if(0===e.rank)return to(e);if(1!==e.rank&&null===n)return Ru(Cl(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return _u(to(e),n);if(t===1/0)return Tu(to(e),n);if(t===-1/0)return $u(to(e),n);if("euclidean"===t||2===t)return Bi(_u(Ji(to(e),Vi(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Tu(_u(to(e),n[0]),n[1]-1);if(t===1/0)return Tu(_u(to(e),n[1]),n[0]);if(t===-1/0)return $u(_u(to(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Bi(_u(zi(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Ou=ya({norm_:function(e,t="euclidean",n=null,r=!1){const s=Ru(e=fa(e,"x","norm"),t,n);let a=s.shape;if(r){const t=ie(n,e.shape);a=Nu(s.shape,t)}return Cl(s,a)}}),Fu=ya({euclideanNorm_:function(e,t=null,n=!1){return Ou(e,"euclidean",t,n)}}),Du=ya({exp_:function(e){const t={x:fa(e,"x","exp")};return ia.runKernel(Mt,t)}}),Mu=ya({expandDims_:function(e,t=0){const n=fa(e,"x","expandDims","string_or_numeric");Y(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return ia.runKernel(Lt,r,s)}}),Lu=ya({expm1_:function(e){const t={x:fa(e,"x","expm1")};return ia.runKernel(Bt,t)}}),Bu=ya({tile_:function(e,t){const n=fa(e,"x","tile","string_or_numeric");Y(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return ia.runKernel(Rr,r,s)}}),zu=ya({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=$i([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const i=Cl(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Bu(Mu(i,0),[n[0],1,1]);if(2===n.length)return Bu(Mu(Mu(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Bu(Mu(Mu(Mu(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),Pu=ya({floor_:function(e){const t={x:fa(e,"x","floor","float32")};return ia.runKernel(Vt,t)}}),Wu=ya({gather_:function(e,t,n=0,r=0){const s={x:fa(e,"x","gather"),indices:fa(t,"indices","gather","int32")},a={axis:n,batchDims:r};return ia.runKernel(jt,s,a)}}),Vu=ya({greater_:function(e,t){let n=fa(e,"a","greater","string_or_numeric"),r=fa(t,"b","greater","string_or_numeric");[n,r]=Js(n,r),so(n.shape,r.shape);const s={a:n,b:r};return ia.runKernel(qt,s)}}),Uu=ya({greaterEqual_:function(e,t){let n=fa(e,"a","greaterEqual","string_or_numeric"),r=fa(t,"b","greaterEqual","string_or_numeric");[n,r]=Js(n,r),so(n.shape,r.shape);const s={a:n,b:r};return ia.runKernel(Kt,s)}}),Gu=ya({imag_:function(e){const t={input:fa(e,"input","imag")};return ia.runKernel(Zt,t)}}),ju=ya({isFinite_:function(e){const t={x:fa(e,"x","isFinite")};return ia.runKernel(Jt,t)}}),Hu=ya({isInf_:function(e){const t={x:fa(e,"x","isInf")};return ia.runKernel(Qt,t)}}),qu=ya({isNaN_:function(e){const t={x:fa(e,"x","isNaN")};return ia.runKernel(en,t)}}),Ku=ya({leakyRelu_:function(e,t=.2){const n={x:fa(e,"x","leakyRelu")},r={alpha:t};return ia.runKernel(tn,n,r)}}),Xu=ya({less_:function(e,t){let n=fa(e,"a","less","string_or_numeric"),r=fa(t,"b","less","string_or_numeric");[n,r]=Js(n,r),so(n.shape,r.shape);const s={a:n,b:r};return ia.runKernel(nn,s)}}),Yu=ya({lessEqual_:function(e,t){let n=fa(e,"a","lessEqual","string_or_numeric"),r=fa(t,"b","lessEqual","string_or_numeric");[n,r]=Js(n,r),so(n.shape,r.shape);const s={a:n,b:r};return ia.runKernel(rn,s)}});function Zu(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return ia.runKernel(sn,{},r)}const Ju=ya({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=fa(e,"x","localResponseNormalization");Y(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),Y(te(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=Cl(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:s},c=ia.runKernel(hn,l,u);return o?Cl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Qu=ya({log_:function(e){const t={x:fa(e,"x","log","float32")};return ia.runKernel(an,t)}}),ec=ya({log1p_:function(e){const t={x:fa(e,"x","log1p")};return ia.runKernel(on,t)}}),tc=ya({neg_:function(e){const t={x:fa(e,"x","neg")};return ia.runKernel(Cn,t)}}),nc=ya({softplus_:function(e){const t={x:fa(e,"x","softplus")};return ia.runKernel(hr,t)}}),rc=ya({logSigmoid_:function(e){const t=fa(e,"x","logSigmoid");return Wi((e=>({value:tc(nc(tc(e))),gradFunc:t=>Li(t,Rl(tc(e)))})))(t)}}),sc=ya({logSoftmax_:function(e,t=-1){const n=fa(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=Wi(((e,n)=>{const r=Tu(e,t,!0),s=Qi(e,r),a=Qi(_i(s,"float32"),Qu(_u(Du(s),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[r]=n,s=Du(r);return Qi(e,Li(_u(e,t,!0),s))}}}));return r(n)}}),ac=ya({logSumExp_:function(e,t=null,n=!1){const r=fa(e,"x","logSumExp"),s=ie(t,r.shape),a=Tu(r,s,!0),i=Qi(r,a),o=Du(i),l=_u(o,s),u=Qu(l),c=Fi(Cl(a,u.shape),u);if(n){const e=Nu(c.shape,s);return Cl(c,e)}return c}}),ic=ya({logicalAnd_:function(e,t){const n=fa(e,"a","logicalAnd","bool"),r=fa(t,"b","logicalAnd","bool");so(n.shape,r.shape);const s={a:n,b:r};return ia.runKernel(ln,s)}}),oc=ya({logicalNot_:function(e){const t={x:fa(e,"x","logicalNot","bool")};return ia.runKernel(un,t)}}),lc=ya({logicalOr_:function(e,t){const n=fa(e,"a","logicalOr","bool"),r=fa(t,"b","logicalOr","bool");so(n.shape,r.shape);const s={a:n,b:r};return ia.runKernel(cn,s)}}),uc=ya({logicalXor_:function(e,t){const n=fa(e,"a","logicalXor","bool"),r=fa(t,"b","logicalXor","bool");return so(n.shape,r.shape),ic(lc(e,t),oc(ic(e,t)))}}),cc=2147483648,hc=ya({searchSorted_:function(e,t,n="left"){const r=fa(e,"sortedSequence","searchSorted"),s=fa(t,"values","searchSorted"),a=r.shape[r.shape.length-1],i=s.shape[s.shape.length-1],o=Cl(r,[-1,a]),l=Cl(s,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Q(l.shape)>=cc)throw new Error("values tensor size must less than 2147483648");if(o.shape[1]>=cc)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);const u={sortedSequence:o,values:l},c={side:n};return ia.runKernel(rr,u,c)}});function pc(e,t){return hc(e,t,"left")}const dc=ya({maxPool_:function(e,t,n,r,s){const a=fa(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=Cl(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Y(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),Y(Il(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Sl("maxPool",r,s);const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=ia.runKernel(mn,l,u);return o?Cl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),fc=ya({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const i=fa(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=Cl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),Y(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),Y("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),Sl("maxPool3d",r,s);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},h=ia.runKernel(yn,u,c);return l?Cl(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),mc=ya({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const a={x:fa(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},o=ia.runKernel(xn,a,i);return{result:o[0],indexes:o[1]}}}),gc=ya({mean_:function(e,t=null,n=!1){const r={x:fa(e,"x","mean")},s={axis:t,keepDims:n};return ia.runKernel(wn,r,s)}});function yc(e,t="float32"){if(Ie(e),"complex64"===t){const t=yc(e,"float32"),n=yc(e,"float32");return ba(t,n)}const n=ve(Q(e),t);return ia.makeTensor(n,e,t)}function bc(e,t="float32"){if(Ie(e),"complex64"===t){const t=bc(e,"float32"),n=yc(e,"float32");return ba(t,n)}const n=we(Q(e),t);return ia.makeTensor(n,e,t)}function xc(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=fa(e,"x","meshgrid",e instanceof zs?e.dtype:"float32");if(void 0===t)return[r];let s=fa(t,"y","meshgrid",t instanceof zs?t.dtype:"float32");const a=Q(r.shape),i=Q(s.shape);return"xy"===n?(r=Cl(r,[1,-1]),s=Cl(s,[-1,1]),[_l(bc([i,1],r.dtype),r),_l(s,bc([1,a],s.dtype))]):(r=Cl(r,[-1,1]),s=Cl(s,[1,-1]),[_l(r,bc([1,i],r.dtype)),_l(bc([a,1],s.dtype),s)])}const wc=ya({minimum_:function(e,t){let n=fa(e,"a","minimum"),r=fa(t,"b","minimum");[n,r]=Js(n,r),"bool"===n.dtype&&(n=_i(n,"int32"),r=_i(r,"int32")),so(n.shape,r.shape);const s={a:n,b:r};return ia.runKernel(kn,s)}}),vc=ya({mirrorPad_:function(e,t,n){Y("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=fa(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Y(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)Y(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Y(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},i={x:r};return ia.runKernel(In,i,a)}}),kc=ya({mod_:function(e,t){let n=fa(e,"a","mod"),r=fa(t,"b","mod");[n,r]=Js(n,r);const s={a:n,b:r};return ia.runKernel(Nn,s)}}),Ic=ya({moments_:function(e,t=null,n=!1){const r=ie(t,(e=fa(e,"x","moments")).shape),s=gc(e,r,n);let a=s.shape;n||(a=Nu(s.shape,r));const i=zi(Qi(_i(e,"float32"),Cl(s,a)));return{mean:s,variance:gc(i,r,n)}}}),Nc=ya({multiRNNCell_:function(e,t,n,r){const s=fa(t,"data","multiRNNCell"),a=ma(n,"c","multiRNNCell"),i=ma(r,"h","multiRNNCell");let o=s;const l=[];for(let t=0;t<e.length;t++){const n=e[t](o,a[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}const u=[],c=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),c.push(l[e+1]);return[u,c]}}),Ac=ya({multinomial_:function(e,t,n,r=!1){const s=fa(e,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?Cl(s,[1,-1]):s},l={numSamples:t,seed:n,normalized:r},u=ia.runKernel(An,o,l);return 1===i?Cl(u,[u.size]):u}}),Sc=ya({notEqual_:function(e,t){let n=fa(e,"a","notEqual","string_or_numeric"),r=fa(t,"b","notEqual","string_or_numeric");[n,r]=Js(n,r),so(n.shape,r.shape);const s={a:n,b:r};return ia.runKernel(En,s)}}),Cc=ya({oneHot_:function(e,t,n=1,r=0,s="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:fa(e,"indices","oneHot","int32")},i={dtype:s,depth:t,onValue:n,offValue:r};return ia.runKernel(On,a,i)}}),Ec=ya({onesLike_:function(e){const t={x:fa(e,"x","onesLike")};return ia.runKernel(Rn,t)}}),Tc=ya({outerProduct_:function(e,t){const n=fa(e,"v1","outerProduct"),r=fa(t,"v2","outerProduct");Y(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=Cl(n,[-1,1]),a=Cl(r,[1,-1]);return _l(s,a)}}),$c=ya({pad_:function(e,t,n=0){const r=fa(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return ia.runKernel(Dn,a,s)}}),_c=ya({pad1d_:function(e,t,n=0){return Y(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),$c(e,[t],n)}}),Rc=ya({pad2d_:function(e,t,n=0){return Y(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),$c(e,t,n)}}),Oc=ya({pad3d_:function(e,t,n=0){return Y(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),$c(e,t,n)}}),Fc=ya({pad4d_:function(e,t,n=0){return Y(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),$c(e,t,n)}}),Dc=ya({spaceToBatchND_:function(e,t,n){const r=fa(e,"x","spaceToBatchND");Y(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),Y(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),Y(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return ia.runKernel(fr,s,a)}}),Mc=ya({pool_:function(e,t,n,r,s,a,i){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const o=fa(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=Cl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),Y(Il(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const c=dl(l.shape,t,a,s,r),h=[c.dilationHeight,c.dilationWidth];let p;p="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const d=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=s.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([c.inHeight,c.inWidth],h,p),g=d?r:"valid",y=d?l:Dc(l,h,f),b=("avg"===n?()=>El(y,t,a,g,i):()=>dc(y,t,a,g,i))(),x=d?b:Ml(b,h,m);return u?Cl(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),Lc=ya({prelu_:function(e,t){const n={x:fa(e,"x","prelu"),alpha:fa(t,"alpha","prelu")};return ia.runKernel(Ln,n)}}),Bc=ya({prod_:function(e,t=null,n=!1){let r=fa(e,"x","prod");"bool"===r.dtype&&(r=_i(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return ia.runKernel(Bn,s,a)}}),zc=ya({raggedGather_:function(e,t,n,r){const s={paramsNestedSplits:e.map(((e,t)=>fa(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:fa(t,"paramsDenseValues","raggedGather"),indices:fa(n,"indices","raggedGather","int32")},a={outputRaggedRank:r},i=ia.runKernel(zn,s,a);return{outputNestedSplits:i.slice(0,i.length-1),outputDenseValues:i[i.length-1]}}}),Pc=ya({raggedRange_:function(e,t,n){const r=fa(e,"starts","raggedRange"),s={starts:r,limits:fa(t,"limits","raggedRange",r.dtype),deltas:fa(n,"deltas","raggedRange",r.dtype)},a=ia.runKernel(Pn,s);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}}),Wc=ya({raggedTensorToTensor_:function(e,t,n,r,s){const a=fa(e,"shape","raggedTensorToTensor","int32"),i=fa(t,"values","raggedTensorToTensor"),o={shape:a,values:i,defaultValue:fa(n,"defaultValue","raggedTensorToTensor",i.dtype),rowPartitionTensors:r.map(((e,t)=>fa(e,`tensors${t}`,"raggedTensorToTensor","int32")))},l={rowPartitionTypes:s};return ia.runKernel(Wn,o,l)}}),Vc=ya({rand_:function(e,t,n){Ie(e);const r=Q(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let e=0;e<r;e++)s[e]=t();return ia.makeTensor(s,e,n)}});var Uc=n(391);class Gc{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=Uc.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class jc{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=Uc.alea(s.toString()),this.randn=new Gc(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Hc{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Uc.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const qc=ya({randomGamma_:function(e,t,n=1,r="float32",s){if(Ie(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new jc(t,n,r,s),i=$i(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Kc=ya({randomNormal_:function(e,t=0,n=1,r,s){if(Ie(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new Gc(t,n,r,!1,s),i=$i(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Xc=ya({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return Kc(e,0,1,t,n)}}),Yc=ya({randomUniform_:function(e,t=0,n=1,r="float32",s){Ie(e);const a=$i(e,r),i=new Hc(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}}),Zc=ya({randomUniformInt_:function(e,t,n,r){return Yc(e,t,n,"int32",r)}});function Jc(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return ia.runKernel(Vn,{},s)}const Qc=ya({real_:function(e){const t={input:fa(e,"input","real")};return ia.runKernel(Un,t)}}),eh=ya({reciprocal_:function(e){const t={x:fa(e,"x","reciprocal")};return ia.runKernel(Gn,t)}}),th=ya({relu_:function(e){const t={x:fa(e,"x","relu")};return ia.runKernel(jn,t)}}),nh=ya({relu6_:function(e){const t={x:fa(e,"x","relu6")};return ia.runKernel(Zn,t)}}),rh=ya({reverse_:function(e,t){const n={x:fa(e,"x","reverse")},r={dims:t};return ia.runKernel(Jn,n,r)}}),sh=ya({reverse1d_:function(e){const t=fa(e,"x","reverse");return Y(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),rh(t,0)}}),ah=ya({reverse2d_:function(e,t){const n=fa(e,"x","reverse");return Y(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),rh(n,t)}}),ih=ya({reverse3d_:function(e,t){const n=fa(e,"x","reverse");return Y(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),rh(n,t)}}),oh=ya({reverse4d_:function(e,t){const n=fa(e,"x","reverse");return Y(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),rh(n,t)}}),lh=ya({round_:function(e){const t={x:fa(e,"x","round")};return ia.runKernel(Qn,t)}}),uh=ya({rsqrt_:function(e){const t={x:fa(e,"x","rsqrt","float32")};return ia.runKernel(er,t)}}),ch=ya({selu_:function(e){const t={x:fa(e,"x","selu")};return ia.runKernel(ar,t)}}),hh=ya({separableConv2d_:function(e,t,n,r,s,a=[1,1],i="NHWC"){const o=fa(e,"x","separableConv2d"),l=fa(t,"depthwiseFilter","separableConv2d"),u=fa(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Cl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");Y(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),Y(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),Y(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),Y(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),Y(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const p=l.shape[2],d=l.shape[3];Y(u.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${u.shape[2]}.`));const f=cu(c,l,r,s,i,a),m=Zl(f,u,1,"valid",i);return h?Cl(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),ph=async function(e,t){const n=fa(e,"x","setdiff1d"),r=fa(t,"y","setdiff1d");Y(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),Y(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),Y(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),i=new Set(a);let o=0;for(let e=0;e<s.length;e++)i.has(s[e])||o++;const l=new Ds([o],n.dtype),u=new Ds([o],"int32");for(let e=0,t=0;e<s.length;e++)i.has(s[e])||(l.values[t]=s[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]},dh=ya({sign_:function(e){const t={x:fa(e,"x","sign")};return ia.runKernel(ur,t)}}),fh=ya({sin_:function(e){const t={x:fa(e,"x","sin","float32")};return ia.runKernel(or,t)}}),mh=ya({sinh_:function(e){const t={x:fa(e,"x","sinh")};return ia.runKernel(lr,t)}}),gh=ya({slice1d_:function(e,t,n){const r=fa(e,"x","slice1d");return Y(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Ol(r,[t],[n])}}),yh=ya({slice2d_:function(e,t,n){const r=fa(e,"x","slice2d");return Y(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Ol(r,t,n)}}),bh=ya({slice3d_:function(e,t,n){const r=fa(e,"x","slice3d");return Y(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Ol(r,t,n)}}),xh=ya({slice4d_:function(e,t,n){const r=fa(e,"x","slice4d");return Y(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Ol(r,t,n)}}),wh=ya({softmax_:function(e,t=-1){const n=fa(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return ia.runKernel(gr,r,s)}}),vh=ya({fft_:function(e){Y("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ia.runKernel(zt,t)}}),kh=ya({ifft_:function(e){Y("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ia.runKernel(Yt,t)}}),Ih=ya({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=Cl(e,[n,t]);r=kh(s)}else{const s=[n,2*(t-1)],a=Cl(Qc(e),[n,t]),i=Cl(Gu(e),[n,t]),o=rh(Ol(a,[0,1],[n,t-2]),1),l=Li(rh(Ol(i,[0,1],[n,t-2]),1),Vi(-1)),u=$l([a,o],1),c=$l([i,l],1),h=Cl(ba(u,c),[s[0],s[1]]);r=kh(h)}if(r=Qc(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Cl(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Nh=ya({split_:function(e,t,n=0){const r={x:fa(e,"x","split")},s={numOrSizeSplits:t,axis:n};return ia.runKernel(mr,r,s)}}),Ah=ya({rfft_:function(e,t){Y("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=Ol(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=$l([e,yc(r)],e.shape.length-1),n=t}else s=e;const a=Pi(s),i=Cl(ba(s,a),[r,n]),o=vh(i),l=Math.floor(n/2)+1,u=Qc(o),c=Gu(o),h=Nh(u,[l,n-l],u.shape.length-1),p=Nh(c,[l,n-l],c.shape.length-1),d=s.shape.slice();return d[s.shape.length-1]=l,Cl(ba(h[0],p[0]),d)}}),Sh=ya({squaredDifference_:function(e,t){let n=fa(e,"a","squaredDifference"),r=fa(t,"b","squaredDifference");[n,r]=Js(n,r),so(n.shape,r.shape);const s={a:n,b:r};return ia.runKernel(kr,s,{})}}),Ch=ya({squeeze_:function(e,t){const n=fa(e,"x","squeeze","string_or_numeric");return Cl(n,oe(n.shape,t).newShape)}}),Eh=ya({stack_:function(e,t=0){const n=ma(e,"tensors","stack","string_or_numeric");Y(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&Y(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return ia.runKernel(Fn,r,s)}}),Th=ya({step_:function(e,t=0){const n={x:fa(e,"x","step")},r={alpha:t};return ia.runKernel(Pr,n,r)}}),$h=ya({stridedSlice_:function(e,t,n,r,s=0,a=0,i=0,o=0,l=0){const u={x:fa(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return ia.runKernel(Ar,u,c)}}),_h=ya({tan_:function(e){const t={x:fa(e,"x","tan","float32")};return ia.runKernel($r,t)}});function Rh(e,t){J(e);const n=ha(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return xa(e,null,n,t)}function Oh(e,t,n){if(J(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=ha(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return xa(e,t,r,n)}function Fh(e,t,n){if(J(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=ha(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return xa(e,t,r,n)}function Dh(e,t,n){if(J(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=ha(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return xa(e,t,r,n)}function Mh(e,t,n){if(J(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=ha(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return xa(e,t=t||r,r,n)}function Lh(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function Bh(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Lh(n,t,e)}function zh(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let e=s;e<a;++e)i*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:Q(t.shape)/o,sliceSize:i,strides:[...ye(n.slice(0,s)),1],outputSize:Q(n)}}const Ph=ya({tensorScatterUpdate_:function(e,t,n){const r=fa(e,"tensor","tensorScatterupdate"),s=fa(t,"indices","tensorScatterupdate","int32"),a=fa(n,"updates","tensorScatterupdate");if(Bh(a,s,r.shape),r.dtype!==a.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${a.dtype}.`);const i={tensor:r,indices:s,updates:a};return ia.runKernel(nr,i,{})}}),Wh=ya({topk_:function(e,t=1,n=!0){const r=fa(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},i={k:t,sorted:n},[o,l]=ia.runKernel(Or,a,i);return{values:o,indices:l}}}),Vh=ya({truncatedNormal_:function(e,t=0,n=1,r,s){if(Ie(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new Gc(t,n,r,!0,s),i=$i(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Uh=ya({unique_:function(e,t=0){const n=fa(e,"x","unique","string_or_numeric");Y(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,i]=ia.runKernel(Mr,r,s);return{values:a,indices:i}}}),Gh=ya({unsortedSegmentSum_:function(e,t,n){const r=fa(e,"x","unsortedSegmentSum"),s=fa(t,"segmentIds","unsortedSegmentSum","int32");Y(te(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},i={numSegments:n};return ia.runKernel(Br,a,i)}}),jh=ya({unstack_:function(e,t=0){const n=fa(e,"x","unstack","string_or_numeric");Y(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return ia.runKernel(Lr,r,s)}});function Hh(e,t){return hc(e,t,"right")}function qh(e,t=!0,n,r){return ia.makeVariable(e,t,n,r)}function Kh(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=$i(e,"int32"),s=$i([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),i=t*e.length;s.values.set(a,i)}return s.toTensor()}const Xh=async function(e){const t=fa(e,"condition","whereAsync","bool"),n=await t.data(),r=Kh(t.shape,n);return e!==t&&t.dispose(),r},Yh=async function(e,t,n){const r=fa(e,"tensor","boolMask"),s=fa(t,"mask","boolMask","bool"),a=null==n?0:n,i=s.rank,o=r.shape;Y(i>0,(()=>"mask cannot be scalar")),Z(o.slice(a,a+i),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=a;e<a+i;e++)l*=o[e];const u=o.slice(0,a).concat([l],o.slice(a+i)),c=Cl(r,u),h=Cl(s,[-1]),p=await Xh(h),d=Ch(p,[1]),f=Wu(c,d,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),d.dispose(),c.dispose(),h.dispose(),p.dispose(),f},Zh=ya({transpose_:function(e,t,n){const r=fa(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),Y(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{Y(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const s={x:r},a={perm:t};return"complex64"===r.dtype?Aa((()=>{let e=Qc(r),t=Gu(r);return e=ia.runKernel(Dr,{x:e},a),t=ia.runKernel(Dr,{x:t},a),n&&(t=tc(t)),ba(e,t)})):ia.runKernel(Dr,s,a)}}),Jh=ya({movingAverage_:function(e,t,n,r,s=!0){const a=fa(e,"v","movingAverage"),i=fa(t,"x","movingAverage"),o=fa(n,"decay","movingAverage");var l,u;u=i,Y((l=a).dtype===u.dtype,(()=>`The dtypes of the first(${l.dtype}) and second(${u.dtype}) input must match`)),Y(ee(a.shape,i.shape),(()=>"Shape mismatch in v and x"));const c=Vi(1),h=Qi(c,o);let p=Li(Qi(i,a),h);if(s){Y(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=fa(r,"step","movingAverage");p=Mi(p,Qi(c,Ji(o,e)))}return Fi(a,p)}}),Qh=ya({scatterND_:function(e,t,n){Ie(n);const r=fa(e,"indices","scatterND","int32"),s=fa(t,"updates","scatterND");Bh(s,r,n);const a={indices:r,updates:s},i={shape:n};return ia.runKernel(tr,a,i)}}),ep=ya({sparseToDense_:function(e,t,n,r=0){Ie(n);const s=fa(e,"sparseIndices","sparseToDense","int32"),a=fa(t,"sparseValues","sparseToDense","string_or_numeric"),i=fa(r,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,i);const o={sparseIndices:s,sparseValues:a,defaultValue:i},l={outputShape:n};return ia.runKernel(vr,o,l)}}),tp=ya({gatherND_:function(e,t){const n=fa(t,"indices","gatherND","int32"),r={params:fa(e,"x","gatherND","string_or_numeric"),indices:n};return ia.runKernel(Ht,r)}}),np=ya({dropout_:function(e,t,n,r){const s=fa(e,"x","dropout");if(Y("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),Y(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof zs?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(ee(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,o=Mi(Pu(Fi(Yc(a,0,1,"float32",r),i)),i);return Li(s,o)}});function rp(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function sp(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return Rh(s,"float32")}const ap=async function(e,t,n=1){const r=fa(e,"predictions","inTopK"),s=fa(t,"targets","inTopK");Y(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),Y(r.rank-1===s.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`)),Z(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];Y(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const i=await r.data(),o=await s.data(),[l,u]=[i.length/a,a],c=le("bool",l);for(let e=0;e<l;e++){const t=e*u,r=i.subarray(t,t+u),s=[];for(let e=0;e<r.length;e++)s.push({value:r[e],index:e});s.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(s[t].index===o[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),wa(c,s.shape,"bool")},ip=ya({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",i){let o=e;3===e.rank&&(o=Cl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Cl(t,[1,t.shape[0],t.shape[1],t.shape[2]])),Y(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),Y(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),Y(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];Y(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),Y(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),Sl("conv2dDerFilter",s,i);const h={x:o,dy:l},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return ia.runKernel(ht,h,p)}});function op(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Li(e,Th(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function lp(e,t){let n=t;const r=ro(e.shape,t.shape);return r.length>0&&(n=_u(n,r)),Cl(n,e.shape)}function up(e,t,n,r){if("linear"===t)return e;if("relu"===t)return th(e);if("elu"===t)return bu(e);if("relu6"===t)return nh(e);if("prelu"===t)return Lc(e,n);if("leakyrelu"===t)return Ku(e,r);if("sigmoid"===t)return Rl(e);throw new Error(`Unknown fused activation ${t}.`)}const cp=(e,t)=>!(e>0)||"linear"===t,hp=ya({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===cp(ia.state.gradientDepth,l)){Y("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=Zl(e,t,n,r,s,a,i);return null!=o&&(h=Fi(h,o)),up(h,l,u,c)}const h=fa(e,"x","conv2d","float32"),p=fa(t,"filter","conv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=Cl(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Y(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),Y(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),Sl("fused conv2d",r,i);const m="NHWC"===s?d.shape[3]:d.shape[1];Y(p.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${p.shape[2]}.`)),Y(Il(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const g=ml(d.shape,p.shape,n,a,r,i);let y,b;if(null!=o&&(y=fa(o,"bias","fused conv2d"),[y]=Js(y,h),"NHWC"===s?so(g.outShape,y.shape):(Y(y.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`)),Y(0===y.shape.length||y.shape[0]===g.outChannels||1===y.shape[0],(()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)))),null!=u){const e=u.shape;if(Y(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)Y(1===e[0]||e[0]===g.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${g.outChannels}).`));else if(3===e.length)try{so(e,g.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(n)}b=fa(u,"prelu weights","fused conv2d")}const x=(e,t)=>{Y("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[i,o,u,c]=t,h=op(e,u,l);Y(kl(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const p=[Ql(o.shape,h,i,n,r),ip(o,h,i.shape,n,r)];if(null!=c){const e=lp(c,h);p.push(e)}return p},w={x:d,filter:p,bias:y,preluActivationWeights:b},v={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=Wi(((e,t,n)=>{let r=ia.runKernel(Gr,w,v);return n([t,e,r]),f&&(r=Cl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(d,p)}{const e=Wi(((e,t,n,r)=>{let s=ia.runKernel(Gr,w,v);return r([t,e,s,n]),f&&(s=Cl(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:x}}));return e(d,p,y)}}}),pp=ya({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],i){let o=e;3===e.rank&&(o=Cl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Cl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return ia.runKernel(Nt,u,c)}}),dp=ya({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=Cl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e},h=ia.runKernel(At,u,c);return l?Cl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),fp=ya({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===cp(ia.state.gradientDepth,l)){let h=cu(e,t,n,r,s,a,i);return null!=o&&(h=Fi(h,o)),up(h,l,u,c)}const h=fa(e,"x","depthwiseConv2d","float32"),p=fa(t,"filter","depthwiseConv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=Cl(h,[1,h.shape[0],h.shape[1],h.shape[2]])),Y(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),Y(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),Y(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==a&&(a=[1,1]),Y(Il(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),Sl("fused depthwiseConv2d",r,i);const m=ml(d.shape,p.shape,n,a,r,i,!0);let g,y;null!=o&&(g=fa(o,"bias","fused conv2d"),[g]=Js(g,h),so(m.outShape,g.shape)),null!=u&&(y=fa(u,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{Y(kl(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,o,u,c]=t,h=op(e,u,l),p=dp(o.shape,h,s,n,r,a,i),d=pp(o,h,s.shape,n,r,a,i);return null!=c?[p,d,lp(g,h)]:[p,d]},x={x:d,filter:p,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=Wi(((e,t,n)=>{let r=ia.runKernel(jr,x,w);return n([t,e,r]),f&&(r=Cl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(d,p)}{const e=Wi(((e,t,n,r)=>{let s=ia.runKernel(jr,x,w);return r([t,e,s,n]),f&&(s=Cl(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}));return e(d,p,g)}}}),mp=ya({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===cp(ia.state.gradientDepth,a)){let l=_l(e,t,n,r);return null!=s&&(l=Fi(l,s)),up(l,a,i,o)}let l=fa(e,"a","fused matMul"),u=fa(t,"b","fused matMul");[l,u]=Js(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],d=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=Q(f),y=Q(m);Y(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=so(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,d]),x=Cl(l,n?[g,c,p]:[g,p,c]),w=Cl(u,r?[y,d,h]:[y,h,d]);let v,k;null!=s&&(v=fa(s,"bias","fused matMul"),[v]=Js(v,l),so(b,v.shape)),null!=i&&(k=fa(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,l,u]=t,c=op(Cl(e,l.shape),l,a);let h,p;return n||r?!n&&r?(h=_l(c,o,!1,!1),p=_l(c,i,!0,!1)):n&&!r?(h=_l(o,c,!1,!0),p=_l(i,c,!1,!1)):(h=_l(o,c,!0,!0),p=_l(c,i,!0,!0)):(h=_l(c,o,!1,!0),p=_l(i,c,!0,!1)),null!=s?[h,p,lp(u,c)]:[h,p]},N={a:x,b:w,bias:v,preluActivationWeights:k},A={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};if(null==s){const e=Wi(((e,t,n)=>{const r=ia.runKernel(Ur,N,A);return n([e,t,r]),{value:Cl(r,b),gradFunc:I}}));return e(x,w)}{const e=Wi(((e,t,n,r)=>{const s=ia.runKernel(Ur,N,A);return r([e,t,s,n]),{value:Cl(s,b),gradFunc:I}}));return e(x,w,v)}}}),gp=ya({hammingWindow_:function(e){return sp(e,.54,.46)}}),yp=ya({hannWindow_:function(e){return sp(e,.5,.5)}}),bp=ya({frame_:function(e,t,n,r=!1,s=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(Ol(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=$l([Ol(e,a,t-r),Yi([r],s)]);i.push(o),a+=n}return 0===i.length?Oh([],[0,t]):Cl($l(i),[i.length,t])}}),xp=ya({stft_:function(e,t,n,r,s=yp){null==r&&(r=rp(t));const a=bp(e,t,n),i=Li(a,s(t));return Ah(i,r)}}),wp=ya({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=fa(e,"image","cropAndResize"),o=fa(t,"boxes","cropAndResize","float32"),l=fa(n,"boxInd","cropAndResize","int32"),u=o.shape[0];Y(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),Y(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),Y(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),Y(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),Y(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),Y("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:i,boxes:o,boxInd:l},h={method:s,extrapolationValue:a,cropSize:r};return ia.runKernel(wt,c,h)}}),vp=ya({flipLeftRight_:function(e){const t=fa(e,"image","flipLeftRight","float32");Y(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return ia.runKernel(Wt,n,{})}}),kp=ya({grayscaleToRGB_:function(e){const t=fa(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];Y(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),Y(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,Bu(t,s)}}),Ip=ya({rgbToGrayscale_:function(e){const t=fa(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];Y(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),Y(3===r,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`));const s=t.dtype,a=_i(t,"float32"),i=Rh([.2989,.587,.114]);let o;switch(t.rank){case 2:o=yu("ij,j->i",a,i);break;case 3:o=yu("ijk,k->ij",a,i);break;case 4:o=yu("ijkl,l->ijk",a,i);break;case 5:o=yu("ijklm,m->ijkl",a,i);break;case 6:o=yu("ijklmn,n->ijklm",a,i);break;default:throw new Error("Not a valid tensor rank.")}return o=Mu(o,-1),_i(o,s)}}),Np=ya({rotateWithOffset_:function(e,t,n=0,r=.5){const s=fa(e,"image","rotateWithOffset","float32");Y(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:t,fillValue:n,center:r};return ia.runKernel(Vr,a,i)}});function Ap(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),Y(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),Y(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),Y(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),Y(1===t.rank,(()=>"scores must be a 1D tensor")),Y(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),Y(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const Sp=ya({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=fa(e,"boxes","nonMaxSuppression","float32"),i=fa(t,"scores","nonMaxSuppression","float32"),o=Ap(a,i,n,r,s),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return ia.runKernel(Tn,{boxes:a,scores:i},l)}});function Cp(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||Ep)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Ep(e,t){return e>t?1:e<t?-1:0}function Tp(e,t,n,r,s){return Rp(e,t,n,r,s,0)}function $p(e,t,n,r,s,a){return Rp(e,t,n,r,s,0,!1,a,!0)}function _p(e,t,n,r,s,a){return Rp(e,t,n,r,s,a,!0)}function Rp(e,t,n,r,s,a,i=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>s&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Dp);const c=a>0?-.5/a:0,h=[],p=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=Op(e,a,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*Fp(r,c,i),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),p.push(t.score)):t.score>s&&Cp(u,t,Dp))}const d=h.length,f=n-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=p),l&&(m.validOutputs=d),m}function Op(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),d=(o-a)*(l-i),f=(h-u)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(l,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function Fp(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Dp(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Mp=ya({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=fa(e,"boxes","nonMaxSuppression"),o=fa(t,"scores","nonMaxSuppression"),l=Ap(i,o,n,r,s,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=ia.runKernel(_n,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Lp=ya({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=fa(e,"boxes","nonMaxSuppression"),o=fa(t,"scores","nonMaxSuppression"),l=Ap(i,o,n,r,s,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=ia.runKernel($n,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),Bp=ya({resizeBilinear_:function(e,t,n=!1,r=!1){const s=fa(e,"images","resizeBilinear");Y(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),Y(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),Y(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=Cl(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=ia.runKernel(Xn,o,l);return i?Cl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),zp=ya({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=fa(e,"images","resizeNearestNeighbor");Y(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),Y(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),Y("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),Y(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=Cl(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=ia.runKernel(qn,o,l);return i?Cl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Pp=ya({threshold_:function(e,t="binary",n=!1,r=.5){const s=fa(e,"image","threshold"),a=s.shape[0]*s.shape[1];let i,o,l,u,c=Li(Rh([r]),255);if(Y(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),Y(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),Y("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),Y("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[i,o,l]=Nh(s,[1,1,1],-1);const e=Li(i,.2989),t=Li(o,.587),n=Li(l,.114);u=Fi(Fi(e,t),n)}else u=e;"otsu"===t&&(c=function(e,t){let n,r,s,a,i,o,l=Rh([-1]),u=Rh([0]),c=Rh([0]);for(let h=0;h<e.size-1;h++){n=Ol(e,0,h+1),r=Ol(e,h+1),i=Mi(_u(n),t),o=Mi(_u(r),t);const p=_u(Li(n,Jc(0,n.size)));s=Mi(p,_u(n));const d=Yi(r.shape,n.size),f=Fi(Jc(0,r.size),d),m=Li(r,f);a=Mi(_u(m),_u(r));const g=Qi(s,a),y=Qi(s,a),b=Li(i,o);c=Li(Li(b,g),y);const x=Vu(c,u);u=fu(x,c,u),l=fu(x,Rh([h]),l)}return l}(Wl(_i(lh(u),"int32"),wa([]),256),a));const h=n?Yu(u,c):Vu(u,c);return _i(Li(h,255),"int32")}}),Wp=ya({transform_:function(e,t,n="nearest",r="constant",s=0,a){const i=fa(e,"image","transform","float32"),o=fa(t,"transforms","transform","float32");Y(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),Y(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),Y(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return ia.runKernel(Fr,l,u)}}),Vp=ya({bandPart_:function(e,t,n){const r=fa(e,"a","bandPart");Y(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);let o,l;"number"==typeof t?(Y(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),Y(t<=a,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`)),o=fa(t<0?a:t,"numLower","bandPart")):(Y("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=fu(Xu(t,0),a,wc(t,a))),"number"==typeof n?(Y(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),Y(n<=i,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`)),l=fa(n<0?i:n,"numUpper","bandPart")):(Y("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),l=fu(Xu(n,0),i,wc(n,i)));const u=Cl(Jc(0,a,1,"int32"),[-1,1]),c=Jc(0,i,1,"int32"),h=Qi(u,c),p=ic(Yu(h,o),Uu(h,tc(l))),d=yc([a,i],r.dtype);return Cl(Eh(jh(Cl(r,[-1,a,i])).map((e=>fu(p,e,d)))),s)}}),Up=ya({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Y(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)Y(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Nh(e,e.shape[0],0).map((e=>Ch(e,[0])));Y(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(ia.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Li(_u(Li(n[r],e)),n[r]);e=Qi(e,t)}return Mi(e,Ou(e,"euclidean"))})));return t?Eh(n,0):n}});function Gp(e,t=!1){return ia.tidy((()=>{Y(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=zu(n),a=Ri(e);const i=Oh([[1]],[1,1]);let o=Ri(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=a,l=o,u=s;[o,a,s]=ia.tidy((()=>{const t=Ol(a,[e,e],[n-e,1]),l=Ou(t),u=Ol(a,[e,e],[1,1]),c=fu(Vu(u,0),Oh([[-1]]),Oh([[1]])),h=Qi(u,Li(c,l)),p=Mi(t,h);o=1===p.shape[0]?Ri(i):$l([i,Ol(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=tc(Mi(_l(c,h),l)),f=Ol(a,[e,0],[n-e,r]),m=Li(d,o),g=Zh(o);if(0===e)a=Qi(f,_l(m,_l(g,f)));else{const t=Qi(f,_l(m,_l(g,f)));a=$l([Ol(a,[0,0],[e,r]),t],0)}const y=Zh(m),b=Ol(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=Qi(b,_l(_l(b,o),y));else{const t=Qi(b,_l(_l(b,o),y));s=$l([Ol(s,[0,0],[n,e]),t],1)}return[o,a,s]})),Sa([t,l,u])}return!t&&n>r&&(s=Ol(s,[0,0],[n,r]),a=Ol(a,[0,0],[r,r])),[s,a]}))}const jp=ya({qr_:function(e,t=!1){if(Y(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Gp(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=jh(Cl(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach((e=>{const[n,r]=Gp(e,t);s.push(n),a.push(r)})),[Cl(Eh(s,0),e.shape),Cl(Eh(a,0),e.shape)]}}});var Hp;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Hp||(Hp={}));const qp=ya({computeWeightedLoss_:function(e,t,n=Hp.SUM_BY_NONZERO_WEIGHTS){const r=fa(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=fa(t,"weights","computeWeightedLoss"));const a=null==s?r:Li(r,s);if(n===Hp.NONE)return a;if(n===Hp.SUM)return _u(a);if(n===Hp.MEAN){if(null==s)return gc(a);{const e=r.size/s.size,t=Mi(_u(a),_u(s));return e>1?Mi(t,Vi(e)):t}}if(n===Hp.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Mi(_u(a),Vi(r.size));{const e=Li(s,bc(r.shape)),t=_i(_u(Sc(e,Vi(0))),"float32");return Mi(_u(a),t)}}throw Error(`Unknown reduction: ${n}`)}}),Kp=ya({absoluteDifference_:function(e,t,n,r=Hp.SUM_BY_NONZERO_WEIGHTS){const s=fa(e,"labels","absoluteDifference"),a=fa(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=fa(n,"weights","absoluteDifference")),Z(s.shape,a.shape,"Error in absoluteDifference: ");const o=to(Qi(s,a));return qp(o,i,r)}}),Xp=ya({cosineDistance_:function(e,t,n,r,s=Hp.SUM_BY_NONZERO_WEIGHTS){const a=fa(e,"labels","cosineDistance"),i=fa(t,"predictions","cosineDistance");let o=null;null!=r&&(o=fa(r,"weights","cosineDistance")),Z(a.shape,i.shape,"Error in cosineDistance: ");const l=Vi(1),u=Qi(l,_u(Li(a,i),n,!0));return qp(u,o,s)}}),Yp=ya({hingeLoss_:function(e,t,n,r=Hp.SUM_BY_NONZERO_WEIGHTS){let s=fa(e,"labels","hingeLoss");const a=fa(t,"predictions","hingeLoss");let i=null;null!=n&&(i=fa(n,"weights","hingeLoss")),Z(s.shape,a.shape,"Error in hingeLoss: ");const o=Vi(1);s=Qi(Li(Vi(2),s),o);const l=th(Qi(o,Li(s,a)));return qp(l,i,r)}}),Zp=ya({huberLoss_:function(e,t,n,r=1,s=Hp.SUM_BY_NONZERO_WEIGHTS){const a=fa(e,"labels","huberLoss"),i=fa(t,"predictions","huberLoss");let o=null;null!=n&&(o=fa(n,"weights","huberLoss")),Z(a.shape,i.shape,"Error in huberLoss: ");const l=Vi(r),u=to(Qi(i,a)),c=wc(u,l),h=Qi(u,c),p=Fi(Li(Vi(.5),zi(c)),Li(l,h));return qp(p,o,s)}}),Jp=ya({logLoss_:function(e,t,n,r=1e-7,s=Hp.SUM_BY_NONZERO_WEIGHTS){const a=fa(e,"labels","logLoss"),i=fa(t,"predictions","logLoss");let o=null;null!=n&&(o=fa(n,"weights","logLoss")),Z(a.shape,i.shape,"Error in logLoss: ");const l=Vi(1),u=Vi(r),c=tc(Li(a,Qu(Fi(i,u)))),h=Li(Qi(l,a),Qu(Fi(Qi(l,i),u))),p=Qi(c,h);return qp(p,o,s)}}),Qp=ya({meanSquaredError_:function(e,t,n,r=Hp.SUM_BY_NONZERO_WEIGHTS){const s=fa(e,"labels","meanSquaredError"),a=fa(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=fa(n,"weights","meanSquaredError")),Z(s.shape,a.shape,"Error in meanSquaredError: ");const o=Sh(s,a);return qp(o,i,r)}}),ed=ya({sigmoidCrossEntropy_:function(e,t,n,r=0,s=Hp.SUM_BY_NONZERO_WEIGHTS){let a=fa(e,"multiClassLabels","sigmoidCrossEntropy");const i=fa(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=fa(n,"weights","sigmoidCrossEntropy")),Z(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Vi(r),t=Vi(1),n=Vi(.5);a=Fi(Li(a,Qi(t,e)),Li(n,e))}const l=function(e,t){const n=fa(e,"labels","sigmoidCrossEntropyWithLogits"),r=fa(t,"logits","sigmoidCrossEntropyWithLogits");Z(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=th(r),a=Li(r,n),i=ec(Du(tc(to(r))));return Fi(Qi(s,a),i)}(a,i);return qp(l,o,s)}}),td=ya({softmaxCrossEntropy_:function(e,t,n,r=0,s=Hp.SUM_BY_NONZERO_WEIGHTS){let a=fa(e,"onehotLabels","softmaxCrossEntropy");const i=fa(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=fa(n,"weights","softmaxCrossEntropy")),Z(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Vi(r),t=Vi(1),n=Vi(a.shape[1]);a=Fi(Li(a,Qi(t,e)),Mi(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=Wi(((e,t,r)=>{const s=ac(t,[n],!0),a=Qi(_i(t,"float32"),s);r([e,a]);const i=tc(Li(a,e));return{value:_u(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=Nu(e.shape,[n]);return[Li(Cl(e,a),Qi(_i(r,"float32"),Du(s))),Li(Cl(e,a),Qi(Du(s),_i(r,"float32")))]}}}));return r(e,t)}(a,i);return qp(l,o,s)}}),nd=ya({sparseFillEmptyRows_:function(e,t,n,r){const s=fa(e,"indices","sparseFillEmptyRows","int32"),a=fa(t,"values","sparseFillEmptyRows"),i=fa(n,"denseShape","sparseFillEmptyRows","int32"),o=fa(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:s,values:a,denseShape:i,defaultValue:o},u=ia.runKernel(yr,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),rd=ya({sparseReshape_:function(e,t,n){const r=fa(e,"inputIndices","sparseReshape","int32"),s=fa(t,"inputShape","sparseReshape","int32"),a=fa(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:r,inputShape:s,newShape:a},o=ia.runKernel(br,i);return{outputIndices:o[0],outputShape:o[1]}}}),sd=ya({sparseSegmentMean_:function(e,t,n){const r=fa(e,"data","sparseSegmentMean"),s=fa(t,"indices","sparseSegmentMean","int32"),a=fa(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return ia.runKernel(xr,i)}}),ad=ya({sparseSegmentSum_:function(e,t,n){const r=fa(e,"data","sparseSegmentSum"),s=fa(t,"indices","sparseSegmentSum","int32"),a=fa(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return ia.runKernel(wr,i)}}),id=ya({stringNGrams_:function(e,t,n,r,s,a,i,o){const l=fa(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=fa(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:a,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},p=ia.runKernel(Sr,h,c);return{nGrams:p[0],nGramsSplits:p[1]}}}),od={fft:vh,ifft:kh,rfft:Ah,irfft:Ih},ld={hammingWindow:gp,hannWindow:yp,frame:bp,stft:xp},ud={flipLeftRight:vp,grayscaleToRGB:kp,resizeNearestNeighbor:zp,resizeBilinear:Bp,rgbToGrayscale:Ip,rotateWithOffset:Np,cropAndResize:wp,nonMaxSuppression:Sp,nonMaxSuppressionAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=fa(e,"boxes","nonMaxSuppressionAsync"),i=fa(t,"scores","nonMaxSuppressionAsync"),o=Ap(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l=await Promise.all([a.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=Tp(u,c,n,r,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),Rh(h,"int32")},nonMaxSuppressionWithScore:Mp,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=fa(e,"boxes","nonMaxSuppressionAsync"),o=fa(t,"scores","nonMaxSuppressionAsync"),l=Ap(i,o,n,r,s,a);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:p,selectedScores:d}=_p(c,h,n,r,s,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Rh(p,"int32"),selectedScores:Rh(d)}},nonMaxSuppressionPadded:Lp,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=fa(e,"boxes","nonMaxSuppressionAsync"),o=fa(t,"scores","nonMaxSuppressionAsync"),l=Ap(i,o,n,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=$p(p,d,u,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Rh(f,"int32"),validOutputs:Vi(m,"int32")}},threshold:Pp,transform:Wp},cd={bandPart:Vp,gramSchmidt:Up,qr:jp},hd={absoluteDifference:Kp,computeWeightedLoss:qp,cosineDistance:Xp,hingeLoss:Yp,huberLoss:Zp,logLoss:Jp,meanSquaredError:Qp,sigmoidCrossEntropy:ed,softmaxCrossEntropy:td},pd={sparseFillEmptyRows:nd,sparseReshape:rd,sparseSegmentMean:sd,sparseSegmentSum:ad},dd={stringNGrams:id,stringSplit:ya({stringSplit_:function(e,t,n=!0){const r=fa(e,"input","stringSplit","string"),s=fa(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const a={skipEmpty:n},i={input:r,delimiter:s},o=ia.runKernel(Cr,i,a);return{indices:o[0],values:o[1],shape:o[2]}}}),stringToHashBucketFast:ya({stringToHashBucketFast_:function(e,t){const n=fa(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return ia.runKernel(Er,s,r)}}),staticRegexReplace:ya({staticRegexReplace_:function(e,t,n,r=!0){const s=fa(e,"input","staticRegexReplace","string"),a={pattern:t,rewrite:n,replaceGlobal:r};return ia.runKernel(Nr,{x:s},a)}})},fd=class{static sgd(e){return new oo(e)}static momentum(e,t,n=!1){return new lo(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new uo(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new eo(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Xi(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new io(e,t,n,r,s)}static adagrad(e,t=.1){return new Zi(e,t)}},md="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function gd(){return new Promise((e=>md((()=>e()))))}function yd(e,t){const n=e[0].length;e.forEach(((e,t)=>{Y(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),Y(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)Y(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function bd(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var xd;function wd(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const a=n[s],i=r[r.length-n.length+s],o=r[i];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${a} but shape[${s+e}] = ${o}`)}else r[i]=a}return r}function vd(e){const t={FIRST_DIM_SIZE:xd.FIRST_DIM_SIZE,VALUE_ROWIDS:xd.VALUE_ROWIDS,ROW_LENGTHS:xd.ROW_LENGTHS,ROW_SPLITS:xd.ROW_SPLITS,ROW_LIMITS:xd.ROW_LIMITS,ROW_STARTS:xd.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function kd(e){return 0===e.length?0:e[0]===xd.FIRST_DIM_SIZE?e.length-1:e.length}function Id(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(xd||(xd={}));const Nd=30;function Ad(e){return e<=Nd?e:ge(e,Math.floor(Math.sqrt(e)))}function Sd(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Cd(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function Ed(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Td(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function $d(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function _d(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function Rd(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Q(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let e=0;e<s.length-1;++e)i*=s[e];const o=e.shape,l=s.slice();l.pop();let u=1;for(let e=a;e<n;++e)u*=o[e],l.push(o[e]);const c=[...ye(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}const Od=1.7580993408473768,Fd=1.0507009873554805,Dd=.3275911,Md=.254829592,Ld=-.284496736,Bd=1.421413741,zd=-1.453152027,Pd=1.061405429;function Wd(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Vd(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Ud(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Gd(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function jd(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Hd(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function qd(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function Kd(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const Xd="->",Yd=/->/g,Zd=",",Jd="...";function Qd(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Yd,"").length)/Xd.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Xd}").`);const[r,s]=e.split(Xd);Y(-1===r.indexOf(Jd),(()=>`The ellipsis notation ("${Jd}") is not supported yet.`));const a=r.split(Zd),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<s.length;++e){const t=s[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&t!==Zd&&o.push(t)}const l=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<a[e].length;++t)l[e].push(o.indexOf(a[e][t]))}const u=o.length,c=[];for(let e=s.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function ef(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function tf(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:Y(r[t[e][n]]===s[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function nf(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const a=[];for(let e=0;e<n.length;++e){const s=sf(t,n[e]);for(const t of s)-1===a.indexOf(t)&&(r[e].push(t),a.push(t))}return{path:n,steps:r}}function rf(e){return e.every(((e,t)=>e===t))}function sf(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function af(e,t,n=0){let r=[];if("number"==typeof t)Y(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);Y(s<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}Y(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function of(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function lf(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function uf(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function cf(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function hf(e,t){return`size ${e} must be non-negative, not ${t}`}function pf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function df(e,t){return`Input to reshape is a SparseTensor with ${Q(e)}\n  dense values, but the requested shape requires a multiple of ${Q(t)}. inputShape=${e} outputShape= ${t}`}function ff(e,t){return`Input to reshape is a tensor with ${Q(e)} dense values, but the requested shape has ${Q(t)}. inputShape=${e} outputShape=${t}`}function mf(){return"segment ids must be >= 0"}function gf(){return"segment ids are not increasing"}function yf(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function bf(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function xf(e,t){let n,r=!1;for(e<=Nd?(n=e,r=!0):n=ge(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=ge(e,n+1);return n}function wf(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function vf(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function kf(e){try{return e.map((e=>vs(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function If(e){return e.map((e=>ws(e)))}!function(){for(const e of co)qi(e)}();const Nf={kernelName:De,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Li(e,Th(_i(n,"float32"),-1))}}},Af={kernelName:Me,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=zi(_i(n,"float32")),r=Bi(Qi(Vi(1),t));return tc(Mi(e,r))}}}},Sf={kernelName:Le,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Bi(Qi(zi(_i(n,"float32")),1));return Mi(e,t)}}}},Cf={kernelName:Be,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=so(n.shape,r.shape);return{a:()=>{let t=e;const r=ro(n.shape,s);return r.length>0&&(t=_u(t,r)),Cl(t,n.shape)},b:()=>{let t=e;const n=ro(r.shape,s);return n.length>0&&(t=_u(t,n)),Cl(t,r.shape)}}}},Ef={kernelName:ze,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},Tf={kernelName:Ve,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Pi(n)}}},$f={kernelName:Ue,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Pi(n)}}},_f={kernelName:Ge,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mi(e,Bi(Qi(Vi(1),zi(_i(n,"float32")))))}}},Rf={kernelName:je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Bi(Fi(Vi(1),zi(_i(n,"float32"))));return Mi(e,t)}}}},Of={kernelName:Ke,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=so(n.shape,r.shape);return{a:()=>{const t=Fi(zi(n),zi(r));let a=Li(e,Mi(r,t));const i=ro(n.shape,s);return i.length>0&&(a=_u(a,i)),Cl(a,n.shape)},b:()=>{const t=Fi(zi(n),zi(r));let a=tc(Li(e,Mi(n,t)));const i=ro(r.shape,s);return i.length>0&&(a=_u(a,i)),Cl(a,r.shape)}}}},Ff={kernelName:He,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mi(e,Fi(zi(_i(n,"float32")),1))}}},Df={kernelName:qe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mi(e,Qi(Vi(1),zi(_i(n,"float32"))))}}},Mf=ya({avgPool3dGrad_:function(e,t,n,r,s,a){const i=fa(e,"dy","avgPool3dGrad"),o=fa(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=Cl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=Cl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Y(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),Y(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),Sl("avgPool3dGrad",s,a);const h={dy:l,input:u},p={filterSize:n,strides:r,pad:s,dimRoundingMode:a},d=ia.runKernel(Je,h,p);return c?Cl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Lf={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>Mf(e,r,s,a,i,o)}}},Bf=ya({avgPoolGrad_:function(e,t,n,r,s){const a=fa(e,"dy","avgPoolGrad"),i=fa(t,"input","avgPoolGrad");Y(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=Cl(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Cl(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Y(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),Y(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:r,pad:s},p=ia.runKernel(Ye,c,h);return u?Cl(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),zf={kernelName:Xe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>Bf(e,r,s,a,i)}}},Pf={kernelName:Qe,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>_l(e,s,!1,!1),b:()=>_l(e,r,!0,!1)}:a&&!i?{a:()=>_l(s,e,!1,!0),b:()=>_l(r,e,!1,!1)}:{a:()=>_l(s,e,!0,!0),b:()=>_l(e,r,!0,!0)}:{a:()=>_l(e,s,!1,!0),b:()=>_l(r,e,!0,!1)}}},Wf={kernelName:et,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>Dc(e,r,s)}}},Vf={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let e=s.length-1;e>=0;e--)if(s[e]===a[e])i[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>_u(e,o,!0)}}},Uf={kernelName:st,gradFunc:e=>({x:()=>e.clone()})},Gf={kernelName:at,gradFunc:e=>({x:()=>Pi(e)})},jf={kernelName:it,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>fu(ic(Uu(r,s),Yu(r,a)),e,Pi(e))}}},Hf={kernelName:lt,inputsToSave:["x"],gradFunc:Nf.gradFunc},qf={kernelName:ut,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=ie(s,t[0].shape)[0],i=r.map((e=>e[a]));return Nh(e,i,a).map((e=>()=>e))}},Kf={kernelName:ct,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return Y(kl(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>Ql(r.shape,e,s,i,o,l),filter:()=>ip(r,e,s.shape,i,o,l)}}},Xf={kernelName:pt,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Zl(e,s,a,i,o,1,l),filter:()=>ip(e,r,s.shape,a,i,o,l)}}},Yf=ya({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=Cl(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Cl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),Y(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),Y(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),Y(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),Y(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),Y(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:r,pad:s,filterShape:n};return ia.runKernel(ft,o,l)}}),Zf={kernelName:dt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;Y(kl(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>nu(i.shape,e,o,s,a),filter:()=>Yf(i,e,o.shape,s,a)}}},Jf={kernelName:gt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Li(tc(fh(_i(n,"float32"))),e)}}},Qf={kernelName:yt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Li(mh(_i(n,"float32")),e)}}},em={kernelName:xt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=Su([s],r.rank);let n=ou(e,s,a,!i);return null!=t&&(n=Zh(n,t)),n}}}},tm={kernelName:It,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;Y(kl(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return Y(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),Y(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),Y(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Y(Il(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),Sl("depthwiseConv2d",a,i),{x:()=>dp(l.shape,e,u,s,a,o,i),filter:()=>pp(l,e,u.shape,s,a,o,i)}}},nm={kernelName:Ct,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>ia.runKernel(Et,a,n),filter:()=>ia.runKernel(Tt,i,n)}}},rm={kernelName:Rt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>ia.runKernel(Ot,r)}}},sm={kernelName:Ft,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Li(Du(tc(zi(n))),2/Math.sqrt(Math.PI));return{x:()=>Li(e,r)}}},am={kernelName:Mt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Li(e,n)}}},im={kernelName:Lt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Cl(e,n.shape)}}},om={kernelName:Bt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Li(e,Du(n))}}},lm={kernelName:Vt,gradFunc:e=>({x:()=>Pi(e)})},um={kernelName:Ut,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=so(n.shape,r.shape);return{a:()=>{const t=Mi(e,_i(r,"float32")),a=ro(n.shape,s);return a.length>0?Cl(_u(t,a),n.shape):t},b:()=>{let t=Li(e,_i(n,"float32"));const a=ro(r.shape,s);a.length>0&&(t=Cl(_u(t,a),r.shape));const i=zi(r);return tc(Mi(t,_i(i,"float32")))}}}},cm={kernelName:Gt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,l=null==o?Vi(1):o,u=ro(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=Qi(s,a),p=Li(e,l),d=uh(Fi(i,Vi(r))),f=Li(Li(Li(d,d),d),Vi(-.5));return{x:()=>1===a.rank?Cl(Li(Li(e,Bu(Cl(d,[1,1,1,a.shape[0]]),c)),l),s.shape):Cl(Li(Li(e,d),l),s.shape),mean:()=>{let e=Li(Li(d,Vi(-1)),p);return 1===a.rank&&(e=_u(e,u)),Cl(e,a.shape)},variance:()=>{let e=Li(Li(f,h),p);return 1===a.rank&&(e=_u(e,u)),Cl(e,a.shape)},scale:()=>{const t=Li(h,d);let n=Li(e,t);return 1===a.rank&&(n=_u(n,u)),Cl(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=_u(t,u)),Cl(t,a.shape)}}}},hm={kernelName:jt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a,batchDims:i}=n,o=ie(a,r.shape)[0],l=(e,t,n)=>()=>{const r=e.shape,s=t.size,i=r.slice(0,o),l=i.length,u=r.slice(a,r.length).slice(1),c=u.length,h=pm(0,l),p=pm(l+1,l+1+c),d=dm([i,[s],u]),f=Cl(n,d),m=Cl(t,[s]),g=dm([[l],h,p]),y=Zh(f,g);let b=Gh(y,m,e.shape[o]);const x=Cu(g);return b=Zh(b,x),b};if(1===i){const t=r.shape[0],n=r.split(t,0);return{x:()=>{const t=Eh(n.map(((t,n)=>l(t,s.slice(n,1),e.slice(n,1))())));return t.reshape(r.shape)},indices:()=>s}}return{x:l(r,s,e),indices:()=>s}}};function pm(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function dm(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const fm={kernelName:Kt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Pi(n),b:()=>Pi(r)}}},mm={kernelName:Xt,gradFunc:e=>({x:()=>_i(e,"float32")})},gm={kernelName:Jt,gradFunc:e=>({x:()=>Pi(e)})},ym={kernelName:Qt,gradFunc:e=>({x:()=>Pi(e)})},bm={kernelName:en,gradFunc:e=>({x:()=>Pi(e)})},xm={kernelName:tn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=Vu(r,0);return{x:()=>fu(a,e,Li(e,s))}}},wm={kernelName:on,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mi(e,Fi(n,1))}}},vm={kernelName:an,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mi(e,_i(n,"float32"))}}},km={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=Du(r);return Qi(e,Li(_u(e,s,!0),t))}}}},Im=ya({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:r,bias:s,alpha:a,beta:i};return ia.runKernel(pn,o,l)}}),Nm={kernelName:hn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>Im(r,s,e,a,i,o,l)}}};function Am(e,t,n,r){return t.rank<n.rank&&(t=Cl(t,Nu(t.shape,r))),e.rank<n.rank&&(e=Cl(e,Nu(e.shape,r))),{x:()=>Li(e,_i(du(n,t),e.dtype))}}const Sm={kernelName:dn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=Am(e,t[1],a,ie(s,a.shape));return{x:()=>i.x()}}},Cm={kernelName:fn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Li(e,_i(Uu(n,r),"float32")),b:()=>Li(e,_i(Xu(n,r),"float32"))}}},Em=ya({maxPool3dGrad_:function(e,t,n,r,s,a,i){const o=fa(e,"dy","maxPool3dGrad"),l=fa(t,"input","maxPool3dGrad"),u=fa(n,"output","maxPool3dGrad");let c=o,h=l,p=u,d=!1;4===l.rank&&(d=!0,c=Cl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Cl(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=Cl(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),Y(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),Y(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),Y(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),Sl("maxPool3dGrad",a,i);const f={dy:c,input:h,output:p},m={filterSize:r,strides:s,pad:a,dimRoundingMode:i},g=ia.runKernel(bn,f,m);return d?Cl(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Tm={kernelName:yn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>Em(e,r,s,a,i,o,l)}}},$m=ya({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=fa(e,"dy","maxPoolGrad"),l=fa(t,"input","maxPoolGrad"),u=fa(n,"output","maxPoolGrad");Y(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),Y(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),Y(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),Sl("maxPoolGrad",a,i);const c={dy:o,input:l,output:u},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return ia.runKernel(gn,c,h)}}),_m={kernelName:mn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>$m(e,r,s,a,i,o)}}},Rm={kernelName:In,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>Ol(e,a,r.shape)}}},Om={kernelName:Dn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>Ol(e,a,r.shape)}}},Fm={kernelName:Mn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=so(a.shape,i.shape);return{a:()=>{const t=_i(i,"float32");let n=Li(e,Li(t,Ji(a,Qi(t,Vi(1)))));const r=ro(a.shape,o);return r.length>0&&(n=_u(n,r)),Cl(n,a.shape)},b:()=>{const t=Vu(a,0),n=fu(t,Qu(a),Pi(a));let r=Li(e,Li(s,n));const l=ro(i.shape,o);return l.length>0&&(r=_u(r,l)),Cl(r,i.shape)}}}};const Dm={kernelName:ar,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Vu(n,Vi(0)),r=Vi(Od),s=Vi(Fd),a=Li(e,s),i=Li(Li(e,r),Du(_i(n,"float32")));return fu(t,a,i)}}}},Mm={kernelName:fr,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Ml(e,r,s)}}},Lm={kernelName:mr,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>$l(e,r)}}},Bm=[Nf,Af,Sf,Cf,Ef,Tf,$f,_f,Rf,Of,Ff,Df,Lf,zf,Pf,Wf,Vf,Uf,Gf,jf,Hf,qf,Xf,Kf,Zf,Jf,Qf,em,tm,nm,{kernelName:$t,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=so(n.shape,r.shape);return{a:()=>{const t=Mi(e,_i(r,"float32")),a=ro(n.shape,s);return a.length>0?Cl(_u(t,a),n.shape):t},b:()=>{let t=Li(e,_i(n,"float32"));const a=ro(r.shape,s);a.length>0&&(t=Cl(_u(t,a),r.shape));const i=zi(r);return tc(Mi(t,_i(i,"float32")))}}}},rm,sm,am,im,om,um,lm,cm,hm,fm,mm,gm,ym,bm,xm,wm,vm,km,Nm,Sm,Sm,Cm,Tm,_m,{kernelName:wn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=ie(s,r.shape),i=Q(Iu(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=Cl(e,t);return Mi(Li(n,bc(r.shape,"float32")),i)}}}},{kernelName:vn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=Am(e,i,a,ie(s,a.shape));return{x:()=>o.x()}}},{kernelName:kn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Li(e,_i(Yu(n,r),"float32")),b:()=>Li(e,_i(Vu(n,r),"float32"))}}},Rm,{kernelName:Nn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=so(n.shape,r.shape);return{a:()=>{const t=ro(n.shape,s);return t.length>0?Cl(_u(e,t),n.shape):e},b:()=>{const t=Li(e,tc(Pu(Mi(n,r)))),a=ro(r.shape,s);return a.length>0?Cl(_u(t,a),r.shape):t}}}},{kernelName:Sn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=so(n.shape,r.shape);return{a:()=>{const t=Li(e,_i(r,"float32")),a=ro(n.shape,s);return a.length>0?Cl(_u(t,a),n.shape):t},b:()=>{const t=Li(e,_i(n,"float32")),a=ro(r.shape,s);return a.length>0?Cl(_u(t,a),r.shape):t}}}},{kernelName:Cn,gradFunc:e=>({x:()=>tc(e)})},{kernelName:On,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>yc(n.shape,"float32")}}},{kernelName:Rn,gradFunc:e=>({x:()=>Pi(e)})},{kernelName:Fn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return jh(e,r).map((e=>()=>e))}},Om,Om,Fm,{kernelName:Ln,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=Vu(n,0);return{x:()=>fu(s,e,Li(e,r)),alpha:()=>{let t=fu(s,Pi(e),Li(e,n));const a=ro(r.shape,e.shape);return a.length>0&&(t=_u(t,a)),Cl(t,r.shape)}}}},{kernelName:Bn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let a=[];return a=null==s?r.shape.map(((e,t)=>t)):"number"==typeof s?[s]:s,{x:()=>function(e,t,n){const r=e.shape.length,s=r-n.length,a=Su(n,r);let i=e;null!=a&&(i=Zh(e,a));const o=i.shape.slice(),l=o.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){const r=e.shape.slice();r[n]=1;const s=Cl(t,r),a=iu(e,n,!0,!1),i=iu(e,n,!0,!0),o=Li(a,i);return Li(s,o)}(i.reshape(o),t,s);if(u=u.reshape(i.shape),null!=a){const e=Cu(a);u=Zh(u,e)}return u}(r,e,a)}}},{kernelName:Gn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mi(e,tc(zi(n)))}}},{kernelName:Zn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Li(Yu(n,6),Th(n));return{x:()=>Li(e,_i(r,"float32"))}}},{kernelName:jn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Li(e,_i(Th(n),"float32"))}}},{kernelName:Hn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cl(e,n.shape)}}},{kernelName:Xn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>ia.runKernel(Yn,s,n)}}},{kernelName:qn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>ia.runKernel(Kn,s,n)}}},{kernelName:Jn,gradFunc:(e,t,n)=>{const{dims:r}=n,s=ie(r,e.shape);return{x:()=>rh(e,s)}}},{kernelName:Qn,gradFunc:e=>({x:()=>Pi(e)})},{kernelName:er,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>tc(Mi(e,Li(Ji(n,1.5),2)))}}},{kernelName:sr,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>_i(Pi(n),"float32"),t:()=>Li(e,_i(n,e.dtype)),e:()=>Li(e,_i(oc(n),e.dtype))}}},Dm,{kernelName:cr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Li(e,Li(n,Qi(Vi(1),n)))}}},{kernelName:ur,gradFunc:e=>({x:()=>Pi(e)})},{kernelName:or,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Li(su(_i(n,"float32")),e)}}},{kernelName:lr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Li(au(_i(n,"float32")),e)}}},{kernelName:ir,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,l]=Zo(r,s,a),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>$c(e,u)}}},{kernelName:gr,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=Li(e,r);return{logits:()=>Qi(a,Li(_u(a,[s],!0),r))}}},{kernelName:hr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Li(e,Rl(n))}}},Mm,Mm,Lm,Lm,{kernelName:pr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mi(e,Li(Bi(_i(n,"float32")),2))}}},{kernelName:kr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Vi(2);return{a:()=>Li(e,Li(s,Qi(n,r))),b:()=>Li(e,Li(s,Qi(r,n)))}}},{kernelName:Ir,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Li(e,Li(_i(n,"float32"),2))}}},{kernelName:Pr,gradFunc:e=>({x:()=>Pi(e)})},{kernelName:Tr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=so(n.shape,r.shape);return{a:()=>{let t=e;const r=ro(n.shape,s);return r.length>0&&(t=_u(t,r)),Cl(t,n.shape)},b:()=>{let t=e;const n=ro(r.shape,s);return n.length>0&&(t=_u(t,n)),Cl(tc(t),r.shape)}}}},{kernelName:dr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;ie(a,r.shape).forEach((e=>{s[e]=1}));const i=Cl(e,s),o=Li(i,bc(r.shape,"float32"));return{x:()=>o}}},{kernelName:$r,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Mi(e,zi(su(n)))}}},{kernelName:_r,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Li(Qi(Vi(1),zi(n)),e)}}},{kernelName:Rr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=Pi(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=Fi(t,Ol(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=Fi(t,Ol(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=Fi(t,Ol(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=Fi(t,Ol(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Dr,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=Cu(s);return{x:()=>Zh(e,a)}}},{kernelName:Lr,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>Eh(e,s)}}},{kernelName:Br,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=ao(t,Pi(t)),r=Wu(e,n);let s=Uu(t,Vi(0,"int32"));const a=r.rank-s.rank;for(let e=0;e<a;++e)s=Mu(s,e+1);s=ic(s,bc(r.shape,"bool"));const i=Pi(r);return fu(s,r,i)}(e,n)}}},{kernelName:zr,gradFunc:e=>({x:()=>Pi(e)})}];for(const e of Bm)es(e);Ps().prototype.abs=function(){return this.throwIfDisposed(),to(this)},Ps().prototype.acos=function(){return this.throwIfDisposed(),el(this)},Ps().prototype.acosh=function(){return this.throwIfDisposed(),tl(this)},Ps().prototype.add=function(e){return this.throwIfDisposed(),Fi(this,e)},Ps().prototype.all=function(e,t){return this.throwIfDisposed(),rl(this,e,t)},Ps().prototype.any=function(e,t){return this.throwIfDisposed(),sl(this,e,t)},Ps().prototype.argMax=function(e){return this.throwIfDisposed(),al(this,e)},Ps().prototype.argMin=function(e){return this.throwIfDisposed(),il(this,e)},Ps().prototype.asScalar=function(){return this.throwIfDisposed(),Y(1===this.size,(()=>"The array must have only 1 element.")),Cl(this,[])},Ps().prototype.asType=function(e){return this.throwIfDisposed(),_i(this,e)},Ps().prototype.as1D=function(){return this.throwIfDisposed(),Cl(this,[this.size])},Ps().prototype.as2D=function(e,t){return this.throwIfDisposed(),Cl(this,[e,t])},Ps().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Cl(this,[e,t,n])},Ps().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Cl(this,[e,t,n,r])},Ps().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),Cl(this,[e,t,n,r,s])},Ps().prototype.asin=function(){return this.throwIfDisposed(),ol(this)},Ps().prototype.asinh=function(){return this.throwIfDisposed(),ll(this)},Ps().prototype.atan=function(){return this.throwIfDisposed(),ul(this)},Ps().prototype.atan2=function(e){return this.throwIfDisposed(),cl(this,e)},Ps().prototype.atanh=function(){return this.throwIfDisposed(),hl(this)},Ps().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),El(this,e,t,n,r)},Ps().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Ml(this,e,t)},Ps().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),Ll(this,e,t,n,r,s)},Ps().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Gl(this,e)},Ps().prototype.cast=function(e){return this.throwIfDisposed(),_i(this,e)},Ps().prototype.ceil=function(){return this.throwIfDisposed(),jl(this)},Ps().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Hl(this,e,t)},Ps().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof zs&&(e=[e]),$l([this,...e],t)},Ps().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Jl(this,e,t,n,r,s,a)},Ps().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),eu(this,e,t,n,r,s)},Ps().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Zl(this,e,t,n,r,s,a)},Ps().prototype.cos=function(){return this.throwIfDisposed(),su(this)},Ps().prototype.cosh=function(){return this.throwIfDisposed(),au(this)},Ps().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),iu(this,e,t,n)},Ps().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),ou(this,e,t,n)},Ps().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),uu(this,e,t)},Ps().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),cu(this,e,t,n,r,s,a)},Ps().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),pu(this,e,t,n,r,s)},Ps().prototype.divNoNan=function(e){return this.throwIfDisposed(),mu(this,e)},Ps().prototype.div=function(e){return this.throwIfDisposed(),Mi(this,e)},Ps().prototype.dot=function(e){return this.throwIfDisposed(),gu(this,e)},Ps().prototype.elu=function(){return this.throwIfDisposed(),bu(this)},Ps().prototype.equal=function(e){return this.throwIfDisposed(),du(this,e)},Ps().prototype.erf=function(){return this.throwIfDisposed(),wu(this)},Ps().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Fu(this,e,t)},Ps().prototype.exp=function(){return this.throwIfDisposed(),Du(this)},Ps().prototype.expandDims=function(e){return this.throwIfDisposed(),Mu(this,e)},Ps().prototype.expm1=function(){return this.throwIfDisposed(),Lu(this)},Ps().prototype.fft=function(){return this.throwIfDisposed(),vh(this)},Ps().prototype.flatten=function(){return this.throwIfDisposed(),Cl(this,[this.size])},Ps().prototype.floor=function(){return this.throwIfDisposed(),Pu(this)},Ps().prototype.floorDiv=function(e){return this.throwIfDisposed(),Di(this,e)},Ps().prototype.gather=function(e,t,n){return this.throwIfDisposed(),Wu(this,e,t,n)},Ps().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Uu(this,e)},Ps().prototype.greater=function(e){return this.throwIfDisposed(),Vu(this,e)},Ps().prototype.ifft=function(){return this.throwIfDisposed(),kh(this)},Ps().prototype.irfft=function(){return this.throwIfDisposed(),Ih(this)},Ps().prototype.isFinite=function(){return this.throwIfDisposed(),ju(this)},Ps().prototype.isInf=function(){return this.throwIfDisposed(),Hu(this)},Ps().prototype.isNaN=function(){return this.throwIfDisposed(),qu(this)},Ps().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Ku(this,e)},Ps().prototype.lessEqual=function(e){return this.throwIfDisposed(),Yu(this,e)},Ps().prototype.less=function(e){return this.throwIfDisposed(),Xu(this,e)},Ps().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Ju(this,e,t,n,r)},Ps().prototype.logSigmoid=function(){return this.throwIfDisposed(),rc(this)},Ps().prototype.logSoftmax=function(e){return this.throwIfDisposed(),sc(this,e)},Ps().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),ac(this,e,t)},Ps().prototype.log=function(){return this.throwIfDisposed(),Qu(this)},Ps().prototype.log1p=function(){return this.throwIfDisposed(),ec(this)},Ps().prototype.logicalAnd=function(e){return this.throwIfDisposed(),ic(this,e)},Ps().prototype.logicalNot=function(){return this.throwIfDisposed(),oc(this)},Ps().prototype.logicalOr=function(e){return this.throwIfDisposed(),lc(this,e)},Ps().prototype.logicalXor=function(e){return this.throwIfDisposed(),uc(this,e)},Ps().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),_l(this,e,t,n)},Ps().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),dc(this,e,t,n,r)},Ps().prototype.max=function(e,t){return this.throwIfDisposed(),Tu(this,e,t)},Ps().prototype.maximum=function(e){return this.throwIfDisposed(),ao(this,e)},Ps().prototype.mean=function(e,t){return this.throwIfDisposed(),gc(this,e,t)},Ps().prototype.min=function(e,t){return this.throwIfDisposed(),$u(this,e,t)},Ps().prototype.minimum=function(e){return this.throwIfDisposed(),wc(this,e)},Ps().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),vc(this,e,t)},Ps().prototype.mod=function(e){return this.throwIfDisposed(),kc(this,e)},Ps().prototype.mul=function(e){return this.throwIfDisposed(),Li(this,e)},Ps().prototype.neg=function(){return this.throwIfDisposed(),tc(this)},Ps().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Ou(this,e,t,n)},Ps().prototype.notEqual=function(e){return this.throwIfDisposed(),Sc(this,e)},Ps().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Cc(this,e,t,n)},Ps().prototype.onesLike=function(){return this.throwIfDisposed(),Ec(this)},Ps().prototype.pad=function(e,t){return this.throwIfDisposed(),$c(this,e,t)},Ps().prototype.pool=function(e,t,n,r,s,a){return this.throwIfDisposed(),Mc(this,e,t,n,r,s,a)},Ps().prototype.pow=function(e){return this.throwIfDisposed(),Ji(this,e)},Ps().prototype.prelu=function(e){return this.throwIfDisposed(),Lc(this,e)},Ps().prototype.prod=function(e,t){return this.throwIfDisposed(),Bc(this,e,t)},Ps().prototype.reciprocal=function(){return this.throwIfDisposed(),eh(this)},Ps().prototype.relu=function(){return this.throwIfDisposed(),th(this)},Ps().prototype.relu6=function(){return this.throwIfDisposed(),nh(this)},Ps().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Cl(this,e.shape)},Ps().prototype.reshape=function(e){return this.throwIfDisposed(),Cl(this,e)},Ps().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Bp(this,e,t,n)},Ps().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),zp(this,e,t,n)},Ps().prototype.reverse=function(e){return this.throwIfDisposed(),rh(this,e)},Ps().prototype.rfft=function(){return this.throwIfDisposed(),Ah(this)},Ps().prototype.round=function(){return this.throwIfDisposed(),lh(this)},Ps().prototype.rsqrt=function(){return this.throwIfDisposed(),uh(this)},Ps().prototype.selu=function(){return this.throwIfDisposed(),ch(this)},Ps().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),hh(this,e,t,n,r,s,a)},Ps().prototype.sigmoid=function(){return this.throwIfDisposed(),Rl(this)},Ps().prototype.sign=function(){return this.throwIfDisposed(),dh(this)},Ps().prototype.sin=function(){return this.throwIfDisposed(),fh(this)},Ps().prototype.sinh=function(){return this.throwIfDisposed(),mh(this)},Ps().prototype.slice=function(e,t){return this.throwIfDisposed(),Ol(this,e,t)},Ps().prototype.softmax=function(e){return this.throwIfDisposed(),wh(this,e)},Ps().prototype.softplus=function(){return this.throwIfDisposed(),nc(this)},Ps().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Dc(this,e,t)},Ps().prototype.split=function(e,t){return this.throwIfDisposed(),Nh(this,e,t)},Ps().prototype.sqrt=function(){return this.throwIfDisposed(),Bi(this)},Ps().prototype.square=function(){return this.throwIfDisposed(),zi(this)},Ps().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Sh(this,e)},Ps().prototype.squeeze=function(e){return this.throwIfDisposed(),Ch(this,e)},Ps().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof zs?[this,e]:[this,...e];return Eh(n,t)},Ps().prototype.step=function(e){return this.throwIfDisposed(),Th(this,e)},Ps().prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),$h(this,e,t,n,r,s,a,i,o)},Ps().prototype.sub=function(e){return this.throwIfDisposed(),Qi(this,e)},Ps().prototype.sum=function(e,t){return this.throwIfDisposed(),_u(this,e,t)},Ps().prototype.tan=function(){return this.throwIfDisposed(),_h(this)},Ps().prototype.tanh=function(){return this.throwIfDisposed(),Fl(this)},Ps().prototype.tile=function(e){return this.throwIfDisposed(),Bu(this,e)},Ps().prototype.toBool=function(){return this.throwIfDisposed(),_i(this,"bool")},Ps().prototype.toFloat=function(){return this.throwIfDisposed(),_i(this,"float32")},Ps().prototype.toInt=function(){return this.throwIfDisposed(),_i(this,"int32")},Ps().prototype.topk=function(e,t){return this.throwIfDisposed(),Wh(this,e,t)},Ps().prototype.transpose=function(e){return this.throwIfDisposed(),Zh(this,e)},Ps().prototype.unique=function(e){return this.throwIfDisposed(),Uh(this,e)},Ps().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Gh(this,e,t)},Ps().prototype.unstack=function(e){return this.throwIfDisposed(),jh(this,e)},Ps().prototype.where=function(e,t){return this.throwIfDisposed(),fu(e,this,t)},Ps().prototype.zerosLike=function(){return this.throwIfDisposed(),Pi(this)};class zm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,zm.prototype)}}class Pm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Pm.prototype)}}class Wm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Wm.prototype)}}class Vm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Vm.prototype)}}class Um extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Um.prototype)}}Error;class Gm{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function jm(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Hm(e,t){if(!e)throw new Um(t)}function qm(e,t){let n=0;for(const r of e)r===t&&n++;return n}function Km(e){return 1===e.length?e[0]:e}function Xm(e){return Array.isArray(e)?e:[e]}function Ym(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Zm(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Jm={};function Qm(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function eg(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>eg(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?eg(t):e[n]=t.value)}}}function tg(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in Jm)a=Jm[s];else if(a=t[s],null==a)throw new Wm(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new Wm(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in Jm?[o,l]=Jm.className:i in t&&([o,l]=t[i]),null==o)throw new Wm(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(Jm))e[t]=Jm[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},Jm);for(const e of Object.keys(n))Jm[e]=n[e];eg(a.config);const r=l(o,a.config,n,s);return Jm=Object.assign({},t),r}{const e=Object.assign({},Jm);for(const e of Object.keys(n))Jm[e]=n[e];const t=new o(a.config);return Jm=Object.assign({},e),t}}}function ng(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function rg(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function sg(e){if(null==e)throw new Wm(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function ag(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Wm(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function ig(e,t,n=0,r=1/0){return Hm(n>=0),Hm(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function og(e,t){Array.isArray(e)?(Y(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>og(e,`element ${n+1} of ${t}`)))):Y(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${lg(e)}.`))}function lg(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>lg(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function ug(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let cg=0;function hg(){return cg++}const pg={};function dg(e=""){return e in pg||(pg[e]=0),pg[e]+=1,e+pg[e].toString()}const fg=["channelsFirst","channelsLast"],mg=["nearest","bilinear"],gg=["valid","same","causal"],yg=["max","avg"],bg=["sum","mul","concat","ave"],xg=new Map;function wg(e){ag(fg,"DataFormat",e)}function vg(e){ag(gg,"PaddingMode",e)}function kg(e){ag(yg,"PoolMode",e)}const Ig=[];function Ng(e,t){Ig.push(e);try{const e=t();return Ig.pop(),e}catch(e){throw Ig.pop(),e}}function Ag(e){if(!Eg(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Ig.length?"":Ig.join("/")+"/")+e}function Sg(e){if(!Eg(e))throw new Error("Not a valid tensor name: '"+e+"'");xg.has(e)||xg.set(e,0);const t=xg.get(e);if(xg.set(e,xg.get(e)+1),t>0){const n=`${e}_${t}`;return xg.set(n,1),n}return e}const Cg=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Eg(e){return!!e.match(Cg)}function Tg(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function $g(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function _g(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function Rg(e,t){if(t<e)throw new Wm(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}let Og;function Fg(){return null==Og&&(Og=Ta().epsilon()),Og}function Dg(e,t){return _i(e,t)}function Mg(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Cl(e,n)}function Lg(e,t,n){return Aa((()=>{switch(e.rank){case 1:return gh(e,t,n);case 2:return yh(e,[t,0],[n,e.shape[1]]);case 3:return bh(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return xh(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Ol(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Ol(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Wm(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Bg(e,t,n){return Aa((()=>{switch(e.rank){case 1:return gh(e,t,n);case 2:return yh(e,[0,t],[e.shape[0],n]);case 3:return bh(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return xh(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Wm(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function zg(e,t,n,r){return Aa((()=>{switch(e.rank){case 1:return gh(e,t,n);case 2:switch(r){case 1:return Lg(e,t,n);case 2:return Bg(e,t,n);default:throw new Wm(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Lg(e,t,n);case 2:return bh(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Bg(e,t,n);default:throw new Wm(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Lg(e,t,n);case 2:return xh(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return xh(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Bg(e,t,n);default:throw new Wm(`The axis is not within the rank of the tensor ${r}`)}default:throw new Wm(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Pg(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),$l(e,t)}function Wg(e,t){switch(e.rank){case 1:return ql([e,t]);case 2:return Kl([e,t],0);case 3:return Xl([e,t],0);case 4:return Yl([e,t],0);default:throw new Wm(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Vg(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Wm(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Bu(e,t)}function Ug(e,t=0,n=1,r,s){return Kc(e,t,n,r,s)}function Gg(e,t,n,r){if(e.rank<2||t.rank<2)throw new Vm(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Vm(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return mp({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?qg(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),a=s.pop();e=Cl(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Cl(Zh(t,c),[l,-1]);const h=[...s,...u];return Cl(mp({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?qg(e.rank,r,"channelsLast"):null,activation:n}),h)}}function jg(e,t,n){return Aa((()=>(t=Array.isArray(t)?Rh(t,"int32"):_i(t,"int32"),Wu(e,t,n))))}function Hg(e){return Li(e,e)}function qg(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Wm(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Cl(t,[1,r[0],1,1,1]):Cl(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Cl(t,[1,1,1,1,r[0]]):Cl(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Cl(t,[1,r[0],1,1]):Cl(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Cl(t,[1,1,1,r[0]]):Cl(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Cl(t,[1,r[0],1]):Cl(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Cl(t,[1,1,r[0]]):Cl(t,[1].concat(r))}else if(e<3)return t;throw new Wm(`Unsupported input rank by biasAdd: ${t.rank}`)}function Kg(e,t,n){return Aa((()=>(null==n&&(n="channelsLast"),wg(n),Fi(e,qg(e.rank,t,n)))))}function Xg(e,t,n,r){return Aa((()=>np(e,t,n,r)))}function Yg(e,t,n=!1){return n?e():t()}const Zg=["fanIn","fanOut","fanAvg"],Jg=["normal","uniform","truncatedNormal"];class Qg extends ji{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class ey extends Qg{apply(e,t){return yc(e,t)}}ey.className="Zeros",qi(ey);class ty extends Qg{apply(e,t){return bc(e,t)}}ty.className="Ones",qi(ty);class ny extends Qg{constructor(e){if(super(),"object"!=typeof e)throw new Wm(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Wm(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Aa((()=>Li(Vi(this.value),bc(e,t))))}getConfig(){return{value:this.value}}}ny.className="Constant",qi(ny);class ry extends Qg{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Yc(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}ry.className="RandomUniform",qi(ry);class sy extends Qg{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Vm(`randomNormal does not support dType ${t}.`);return Ug(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}sy.className="RandomNormal",qi(sy);class ay extends Qg{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Vm(`truncatedNormal does not support dType ${t}.`);return Vh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ay.className="TruncatedNormal",qi(ay);class iy extends Qg{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Aa((()=>{if(2!==e.length||e[0]!==e[1])throw new Wm("Identity matrix initializer can only be used for 2D square matrices.");return Li(this.gain,zu(e[0]))}))}getConfig(){return{gain:this.gain}}}iy.className="Identity",qi(iy);class oy extends Qg{constructor(e){if(super(),e.scale<0)throw new Wm(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,ag(Zg,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){ag(Jg,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(wg(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Tg(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Tg(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Tg(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Vm(`${this.getClassName()} does not support dType ${t}.`);return Vh(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return Yc(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}oy.className="VarianceScaling",qi(oy);class ly extends oy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return oy.className}}ly.className="GlorotUniform",qi(ly);class uy extends oy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return oy.className}}uy.className="GlorotNormal",qi(uy);class cy extends oy{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return oy.className}}cy.className="HeNormal",qi(cy);class hy extends oy{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return oy.className}}hy.className="HeUniform",qi(hy);class py extends oy{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return oy.className}}py.className="LeCunNormal",qi(py);class dy extends oy{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return oy.className}}dy.className="LeCunUniform",qi(dy);class fy extends Qg{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return Aa((()=>{if(e.length<2)throw new Vm("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=Q(e.slice(0,-1)),r=e[e.length-1],s=n*r;s>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${s}) elements: Slowness may result.`);const a=Ug([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),i=cd.qr(a,!1);let o=i[0];const l=i[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return o=Li(o,l.sign()),n<r&&(o=o.transpose()),Li(Vi(this.gain),o.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}fy.className="Orthogonal",qi(fy);const my={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function gy(e,t={}){return tg(e,Hi.getMap().classNameMap,t,"initializer")}function yy(e){return Qm(e)}function by(e){if("string"==typeof e){const t=e in my?my[e]:e;if("GlorotNormal"===t)return new uy;if("GlorotUniform"===t)return new ly;if("HeNormal"===t)return new cy;if("HeUniform"===t)return new hy;if("LeCunNormal"===t)return new py;if("LeCunUniform"===t)return new dy;{const e={};return e.className=t,e.config={},gy(e)}}return e instanceof Qg?e:gy(e)}function xy(e){return Array.isArray(e)&&Array.isArray(e[0])}function wy(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function vy(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Wm(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function ky(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Wm(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Iy(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const Ny="Variable";class Ay{constructor(e,t="float32",n=Ny,r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=hg(),n=null==n?Ny:n,this.originalName=Ag(n),this.name=Sg(this.originalName),this.trainable_=r,this.constraint=s,this.val=qh(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Sy(e){return e.map((e=>e.read()))}function Cy(e){e.forEach((e=>{e[0].write(e[1])}))}class Ey{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Ty{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=hg(),null!=a&&(this.originalName=Ag(a),this.name=Sg(this.originalName)),this.rank=t.length}}let $y=0;class _y{constructor(e,t){this.callArgs=t,this.id=$y++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Ry=0;class Oy extends ji{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Ry++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Ym(e)+"_"+dg(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Pm(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Wm(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Km(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Km(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new zm(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new zm(`Layer ${this.name} is not connected, no input to return.`);return Km(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new zm(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new zm(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Km(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=Xm(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=Xm(this.inputSpec);if(t.length!==n.length)throw new Wm(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){const r=t[e],s=n[e];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new Wm(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new Wm(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new Wm(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new Wm(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const n in s.axes){const r=Number(n),a=s.axes[n],i=r>=0?t[r]:t[t.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new Wm(`Input ${e} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const n=s.shape[t],a=r.shape[t];if(null!=n&&null!=a&&n!==a)throw new Wm(`Input ${e} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Xm(e),r=function(e){let t=!0;for(const n of Xm(e))if(!(n instanceof Ty)){t=!1;break}return t}(e),s=function(e){let t=!0;for(const n of Xm(e))if(n instanceof Ty){t=!1;break}return t}(e);if(r===s)throw new Wm("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ng(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Xm(e))t.push(n.shape);this.build(Km(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);const s=Xm(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=Km(a),null!=this.activityRegularizer)throw new Vm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=Xm(e);const t=[];for(const n of e)t.push(n.shape);return Km(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new Ty(a,n,this,Xm(e),t,this.name,r))):new Ty(a,r,this,Xm(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Vm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new zm(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new zm(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Pm(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Iy(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Sy(e?this.trainableWeights:this.weights)}setWeights(e){Aa((()=>{const t=this.weights;if(t.length!==e.length)throw new Wm(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Sy(t);for(let s=0;s<r.length;++s){const a=r[s],i=t[s],o=e[s];if(!ee(a.shape,o.shape))throw new Wm(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Cy(n)}))}addWeight(e,t,n,r,s,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new Wm(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():by("zeros"));const l=r.apply(t,n),u=new Ay(l,n,e,a,i);return l.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Xm(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const r=this.computeMask(e,n),s=Xm(t),a=Xm(r);if(s.length!==a.length)throw new Error(`${this.name} outputs ${s.length} tensors but ${s.length} masks for those tensors`);for(let e=0;e<s.length;e++)s[e].kerasMask=a[e]}addInboundNode(e,t,n,r,s,a,i=null){const o=Xm(e);t=Xm(t),n=Xm(n),r=Xm(r),s=wy(s),a=wy(a);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new _y({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Fy(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Fy(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class Dy extends Oy{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:dg("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Wm("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Wm("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Wm("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Ty(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new _y({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Wm(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Dy.className="InputLayer",qi(Dy);class My{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof My)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Wm(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return _i(t,e.dtype)}catch(n){throw new Wm(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Ty){if(null==this.id2Value[e.id])throw new Wm(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Wm(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Ty){if(null==this.id2Value[e.id])throw new Wm(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Wm(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Sa(this.id2Mask)}}const Ly=new Gm,By=new Gm;function zy(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,p=Ly.get(c);if(null==p){const e=function(e,t){Y(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=Wy(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=Wy(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:Py(r)}}(i,t);p=e.sorted,h=e.recipientCounts,Ly.put(c,p),By.put(c,h)}h={},s||Object.assign(h,By.get(c));const d=new My(t);for(let e=0;e<p.length;++e){if(null!=r){const e=Na().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const a=p[e],i=a.sourceLayer;if(i instanceof Dy)continue;const u=[],c=[],f=[];let m=!1;for(const e of a.inputs){const n=d.getValue(e),r=d.getMask(e);u.push(n),c.push(r),null!=r&&(m=!0),s||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=Xm(i.apply(u,n));let y=null;i.supportsMasking&&(y=i.computeMask(u,c));const b=Vy(a),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){d.hasKey(x[e])||d.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}s||Sa(f)}return d.disposeMasks(),a?l:l[0]}function Py(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Wy(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function Vy(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Uy(e,t){return Aa((()=>Bi(_u(Li(e,e),t,!0))))}$e().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=Ly&&Ly.setMaxEntries(e),null!=By&&By.setMaxEntries(e)}));class Gy extends ji{getConfig(){return{}}}class jy extends Gy{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Aa((()=>{const t=Uy(e,this.axis),n=Hl(t,0,this.maxValue);return Li(e,Mi(n,Fi(Fg(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}jy.className="MaxNorm",qi(jy);class Hy extends Gy{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Aa((()=>Mi(e,Fi(Fg(),Uy(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Hy.className="UnitNorm",qi(Hy);class qy extends Gy{apply(e){return th(e)}}qy.className="NonNeg",qi(qy);class Ky extends Gy{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Aa((()=>{const t=Uy(e,this.axis),n=Fi(Li(this.rate,Hl(t,this.minValue,this.maxValue)),Li(1-this.rate,t));return Li(e,Mi(n,Fi(Fg(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Ky.className="MinMaxNorm",qi(Ky);const Xy={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Yy(e){return Qm(e)}function Zy(e,t={}){return tg(e,Hi.getMap().classNameMap,t,"constraint")}function Jy(e){return null==e?null:"string"==typeof e?Zy({className:e in Xy?Xy[e]:e,config:{}}):e instanceof Gy?e:Zy(e)}async function Qy(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];Sa(r)}}function eb(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var tb;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(tb||(tb={}));class nb{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class rb{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class sb extends nb{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=Aa((()=>Fi(this.totals[e],Li(r,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Aa((()=>{const n=Li(Mi(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Ca(t[e])})))}}class ab extends nb{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];e.push(i.data()),t.push(r),n.push(a)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class ib extends nb{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||gd,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");de(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,s=null!=n?n():xs();return(...a)=>{const i=null!=n?n():xs();return i-s<t||(s=i,r=e(...a)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Qy(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Qy(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Qy(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Qy(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Qy(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):de(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Qy(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Qy(e),await this.trainEnd(e))}}function ob(e,t){return null==e&&(e={}),e instanceof nb?[e]:Array.isArray(e)&&e[0]instanceof nb?e:Xm(e).map((e=>new ib(e,t)))}class lb{constructor(){}static registerCallbackConstructor(e,t){Y(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),lb.checkForDuplicate(t),null==lb.constructors[e]&&(lb.constructors[e]=[]),lb.constructors[e].push(t)}static checkForDuplicate(e){for(const t in lb.constructors)lb.constructors[+t].forEach((t=>{if(t===e)throw new Wm("Duplicate callback constructor.")}))}static clear(){lb.constructors={}}static createCallbacks(e){const t=[];for(const n in lb.constructors){const r=+n;e>=r&&t.push(...lb.constructors[r])}return t.map((e=>new e))}}function ub(e,t,n,r,s,a,i,o,l){const u=new ab,c=[new sb,...lb.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new rb(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function cb(e,t={},n=!1){return tg(e,Hi.getMap().classNameMap,t,"layer",n)}function hb(e,t){return Aa((()=>{"float32"!==e.dtype&&(e=_i(e,"float32"));const n=_u(Hg(e),t,!0),r=Yi(n.shape,Fg()),s=Bi(ao(n,r));return Mi(e,s)}))}function pb(e,t){return Aa((()=>gc(Hg(Qi(t,e)),-1)))}function db(e,t){return Aa((()=>gc(to(Qi(t,e)),-1)))}function fb(e,t){return Aa((()=>{const n=Qi(e,t),r=Hl(to(e),Fg(),Number.MAX_VALUE),s=to(Mi(n,r));return Li(100,gc(s,-1))}))}function mb(e,t,n=!1){return Aa((()=>{if(n)t=wh(t);else{const e=_u(t,t.shape.length-1,!0);t=Mi(t,e)}return t=Hl(t,Fg(),1-Fg()),tc(_u(Li(_i(e,"float32"),Qu(t)),t.shape.length-1))}))}function gb(e,t,n=!1){return Aa((()=>{const r=_i(Pu(function(e){const t=[Tg(e.shape)];return Cl(e,t)}(e)),"int32"),s=(t=Hl(t,Fg(),1-Fg())).shape;return mb(Cl(Cc(r,s[s.length-1]),s),t,n)}))}function yb(e,t){return Aa((()=>{let n;return n=Hl(t,Fg(),1-Fg()),n=Qu(Mi(n,Qi(1,n))),gc(function(e,t){if(!ee(e.shape,t.shape))throw new Wm(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Aa((()=>{const n=th(t),r=tc(to(t));return Fi(Qi(n,Li(t,e)),ec(Du(r)))}))}(e,n),-1)}))}function bb(e,t){return Aa((()=>{const n=hb(e,-1),r=hb(t,-1),s=Li(n,r);return tc(_u(s,-1))}))}lb.constructors={};const xb={meanSquaredError:pb,meanAbsoluteError:db,meanAbsolutePercentageError:fb,meanSquaredLogarithmicError:function(e,t){return Aa((()=>{const n=Hl(t,Fg(),Number.MAX_VALUE),r=Qu(Fi(1,n)),s=Hl(e,Fg(),Number.MAX_VALUE),a=Qu(Fi(1,s));return gc(Hg(Qi(r,a)),-1)}))},squaredHinge:function(e,t){return Aa((()=>{const n=ao(0,Qi(1,Li(e,t)));return gc(Hg(n),-1)}))},hinge:function(e,t){return Aa((()=>{const n=ao(0,Qi(1,Li(e,t)));return gc(n,-1)}))},categoricalHinge:function(e,t){return Aa((()=>{const n=_u(Li(e,t),-1),r=Tu(Li(Qi(1,e),t),-1);return ao(0,Fi(1,Qi(r,n)))}))},logcosh:function(e,t){return Aa((()=>{const n=Math.log(2),r=Qi(t,e),s=Qi(Fi(r,nc(Li(-2,r))),n);return gc(s,-1)}))},categoricalCrossentropy:mb,sparseCategoricalCrossentropy:gb,binaryCrossentropy:yb,kullbackLeiblerDivergence:function(e,t){return Aa((()=>{const n=Hl(e,Fg(),1),r=Hl(t,Fg(),1);return _u(Li(e,Qu(Mi(n,r))),-1)}))},poisson:function(e,t){return Aa((()=>{const n=Qu(Fi(Fg(),t));return gc(Qi(t,Li(e,n)),-1)}))},cosineProximity:bb};function wb(e){if("string"==typeof e){if(e in xb)return xb[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Wm(t)}return e}function vb(e,t){return Aa((()=>{const n=Li(.5,Ec(t)),r=Dg(Vu(t,n),e.dtype);return gc(du(e,r),-1)}))}function kb(e,t){return Aa((()=>Dg(du(al(e,-1),al(t,-1)),"float32")))}function Ib(e,t){return yb(e,t)}function Nb(e,t){return e.rank===t.rank&&(e=Ch(e,[e.rank-1])),(t=al(t,-1)).dtype!==e.dtype&&(t=_i(t,e.dtype)),_i(du(e,t),"float32")}const Ab=mb,Sb=gb,Cb={binaryAccuracy:vb,categoricalAccuracy:kb,precision:function(e,t){return Aa((()=>{const n=function(e,t){return Aa((()=>_i(_u(ic(du(e,1),du(t,1))),"float32")))}(e,t),r=function(e,t){return Aa((()=>_i(_u(ic(du(e,0),du(t,1))),"float32")))}(e,t),s=Fi(n,r);return _i(fu(Vu(s,0),Mi(n,s),0),"float32")}))},categoricalCrossentropy:Ab,sparseCategoricalCrossentropy:Sb,mse:pb,MSE:pb,mae:db,MAE:db,mape:fb,MAPE:fb,cosine:bb};function Eb(e){if("string"==typeof e&&e in Cb)return Cb[e];if("string"!=typeof e&&null!=e)return e;throw new Wm(`Unknown metric ${e}`)}function Tb(e){if(Hm(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(xb))if(xb[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Cb))if(Cb[n]===e){t=n;break}return void 0!==t?t:e.name}}function $b(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!_b(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function _b(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!_b(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!_b(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Rb(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function Ob(e,t,n){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Rb([`${e.name} (${e.getClassName()})`,s,r,e.countParams().toString()],t,n)}function Fb(e,t,n,r){let s,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];i.push(`${n}[${r}][${s}]`)}const o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];Rb([`${o} (${l})`,a,s,e.countParams().toString(),u],t,r);for(let e=1;e<i.length;++e)Rb(["","","","",i[e]],t,r)}function Db(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Mb(e,t){if(null===e)return null;if("string"==typeof e)return Zm(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Db(t,s,r)?n.push(r):n.push(Mb(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=Zm(n);t[e]=Mb(r,e)}}return t}}function Lb(e,t){if(null==e)return null;if("string"==typeof e)return Ym(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Db(t,s,r)?n.push(r):n.push(Lb(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[Ym(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Lb(r,n):r}return t}}const Bb="4.19.0";class zb extends Oy{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=dg(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],rg(this.inputs).length!==this.inputs.length)throw new Wm(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);rg(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;Hm(0===n,"input layer has >1 nodes"),Hm(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof Dy))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new Pm(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(zb.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const r=u.inputTensors[e],s=u.inboundLayers[e],a=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,s,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];a=Math.max(a,i),r[e.outboundLayer.id]=a,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],i=e.nodeIndices[r],o=s.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,l),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const p={};for(const e in r){const t=r[e];t in p||(p[t]=[]),p[t].push(s[e])}let d=Object.keys(p).map((e=>parseInt(e,10))).sort(ng);this.layers=[];for(const e of d){const t=p[e];t.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof zb&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,d=Object.keys(h).map((e=>parseInt(e,10))).sort(ng);const f=this.inputs.slice(),m=[];for(const e of d)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Pm(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new Pm(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new _y({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Wm("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;const s=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);s&&this.parseWeights(e);for(const e of this.layers)for(const[t,a]of e.weights.entries()){const e=s?`${a.name.split("/").slice(0,-1).join("/")+"/"}${t}`:a.originalName;if(null!=n[e])throw new Wm(`Duplicate weight name: ${e}`);n[e]=a,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new Wm(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Wm(`${e.length} of ${r} weights are not set: ${e}`)}Cy(a)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),r=["vars","layer_checkpoint_dependencies"],s=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!r.includes(e))).join("/");s!==t&&(e[s]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Bb}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Lb(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Aa((()=>{e=Xm(e);const n=new My;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return zy(this.outputs,n,t)}))}computeMask(e,t){return Aa((()=>{let n;return e=Xm(e),n=null==t?jm(null,e.length):Xm(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=wy(e);if(t.length!==this.inputLayers.length)throw new Wm(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ng);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=wy(t.computeOutputShape(Km(r))),a=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${a}_${e}`]=s[e]}}const s=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;a.push(s)}for(let e=0;e<a.length;e++){const t=a[e];Hm(t in n),s.push(n[t])}return Km(s)}runInternalGraph(e,t){null==t&&(t=jm(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=e[r],i=t[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ng);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,a=new Array;for(const e of r)e.id in n&&a.push(n[e.id]);if(a.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===a.length){const[e,n]=a[0];null==u.mask&&(u.mask=n),o=Xm(t.call(e,u)),l=Xm(t.computeMask(e,n)),r=[e],i=[n]}else r=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=Xm(t.call(r,u)),l=Xm(t.computeMask(r,i));if(t.activityRegularizer)throw new Vm("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],a=l[e];n[t.id]=[r,a]}}}}const s=[],a=[],i=[];for(const e of this.outputs){Hm(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),s.push(t),a.push(r)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof zb?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=zb.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new Wm("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(const t of this.layers)if(t.name===e)return t;throw new Wm(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new Wm(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return Aa((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=zb.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=zb.nodeKey(e,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let l=t[zb.nodeKey(s,a)];null==l&&(l=0),e.push([s.name,l,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],a=zb.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],a=zb.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],l=a[1],u=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(Km(n),r)}function l(e){const n=e.name,a=cb(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Wm(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!sg(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],p=[],d=t.inputLayers;for(const e of d){const t=e[0],n=e[1],r=e[2];Hm(t in s);const a=s[t].inboundNodes[n].outputTensors;h.push(a[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];Hm(t in s);const a=s[t].inboundNodes[n].outputTensors;p.push(a[r])}return new e({inputs:h,outputs:p,name:u})}get stateful(){if(this._stateful)throw new Wm("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Aa((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Pb(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Wb(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Aa((()=>{if(1===e.shape.length)return Ri(e);if(2===e.shape.length){if(e.shape[1]>1)return al(e,1);if(1===e.shape[1])return Cl(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());Sa(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),Rh(s,"float32")}return null}function Vb(e,t){return Li(e,t)}function Ub(e,t){let n,r;const s=t;n=s.xs,r=s.ys,Y(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=Gb("input",e.inputNames,n),i=Gb("output",e.outputNames,r),o=a[0].shape[0];Y(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),Y(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)Y(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)Y(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function Gb(e,t,n){if(n instanceof zs)return[n];if(Array.isArray(n))return Y(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new Wm(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function jb(e){return"function"==typeof e.iterator}function Hb(e){Y(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function qb(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Lg(e,t,n-t))):Lg(e,t,n-t)}function Kb(e,t){return Aa((()=>null==e?null:Array.isArray(e)?e.map((e=>Kb(e,t))):jg(e,"int32"===t.dtype?t:_i(t,"int32"))))}function Xb(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function Yb(e){const t=[];e instanceof zs&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(Mg(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Zb(e,t){if(null==e)return;const n=[];if(t instanceof zs)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof zs)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Jb(e){return Array.isArray(e)}function Qb(e){return!function(e){return e instanceof zs}(e)&&!Jb(e)}function ex(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Jb(e)&&e.length>0)t=!0;else if(Qb(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Wm(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(Qb(e)){a=[];for(const n of t){if(null==e[n])throw new Wm(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(Jb(e)){if(e.length!==t.length)throw new Wm(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new Wm(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=Yb(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Wm(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const a=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&a!==o)throw new Wm(`${s} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function tx(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new Wm(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new Wm(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Wm(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l!==o)throw new Wm(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class nx extends zb{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Wm("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),Rb(a,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?Ob(o[e],n,r):Fb(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?Iy(e.collectedTrainableWeights):Iy(e.trainableWeights),t}(e),u=Iy(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>fd.adagrad(.01),Adadelta:()=>fd.adadelta(1,.95,Fg()),Adam:()=>fd.adam(.001,.9,.999,Fg()),Adamax:()=>fd.adamax(.002,.9,.999,Fg(),0),RMSProp:()=>fd.rmsprop(.001,.9,0,Fg()),SGD:()=>fd.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Wm(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Ki))throw new Wm("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Wm(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>wb(e)))}else{const n=wb(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Wm(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(wb(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ng("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Ng("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===yb?-1!==["accuracy","acc"].indexOf(i)?r=vb:-1!==["crossentropy","ce"].indexOf(i)&&(r=Ib):this.lossFunctions[e]===gb?-1!==["accuracy","acc"].indexOf(i)?r=Nb:-1!==["crossentropy","ce"].indexOf(i)&&(r=Sb):-1!==["accuracy","acc"].indexOf(i)?r=kb:-1!==["crossentropy","ce"].indexOf(i)&&(r=Ab),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=Eb(i);a=e,n=""+Tb(i)}let t;Ng(n,(()=>{t=a})),s(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Hb(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const e=s[0].concat(s[1]);this.makeTestFunction();const t=this.testFunction;return Km(this.testLoop(t,e,r,n.verbose,n.steps))}finally{Zb(s[0],e),Zb(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new Vm("Verbose mode is not implemented yet.");Y(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!r||l<n.batches;){const t=await i.next();if(a=Aa((()=>{if(t.value){const{xs:n,ys:r}=Ub(e,t.value),i=n.concat(r),u=Aa((()=>s(i)));if(Sa(i),0===l)for(let e=0;e<u.length;++e)a.push(Vi(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=Aa((()=>Fi(a[e],Li(c,t)))),l>0&&Sa(n)}Sa(u),o+=c,++l}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=Mi(a[e],o),Sa(t)}return Km(a)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new Wm(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Wm(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Wm("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new My;if(e instanceof zs&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Wm(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Wm(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=zy(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=jm(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new Wm(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Aa((()=>{const r=this.checkNumSamples(e);if(n)throw new Vm("Verbose predictLoop() is not implemented yet.");const s=Xb(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t)Aa((()=>{const n=s[t][0],r=s[t][1],a=qb(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new My(i);return zy(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return Km(a.map((e=>$l(e,0))))}))}predict(e,t={}){const n=Yb(e);tx(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Hb(e),this.predictLoop(n,e)}finally{Zb(n,e)}}predictOnBatch(e){tx(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Pm("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===gb?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t,n){const r=rg(e.map((e=>e.shape[0])));r.sort();const s=rg(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new Wm(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new Wm(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&s.length>0&&!ee(r,s))throw new Wm(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=ex(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=ex(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[pb,yb,mb];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===mb&&1===a.shape[a.shape.length-1])throw new Wm(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new Wm(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new Wm(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=Pb(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await Wb(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,s){return Aa((()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new Vm("Verbose mode is not implemented yet.");if(null!=s)throw new Vm("steps mode in testLoop() is not implemented yet");{const r=Xb(a,n),s=Rh(Rg(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],l=Lg(s,a,o-a),u=Kb(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(Vi(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=Fi(i[e],Li(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=Mi(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;qm(e,r)>1&&(s+=`_${qm(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new My(e),o=zy(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=s[e]&&(n=Vb(n,s[e]));const a=gc(n);t.push(a),l=0===e?n:Fi(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=gc(t(r[s],o[s]))}Ca(n),a.push(n)}return l=gc(l),this.calculateLosses().forEach((e=>{l=Fi(l,e)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>Aa((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new My(a),o=zy(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=gc(r(s[e],o[e]));n=0===e?a:Fi(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=gc(n(s[r],o[r]));t.push(a)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,s,a,i,o,l,u,c,h;this.isTraining=!0;try{const p=null==n.batchSize?32:n.batchSize;Hb(p);const d=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,d,p);r=f[0],s=f[1],h=f[2];let m,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new Vm("validationData including sample weights is not supported yet."):new Wm(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],l=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,l,null,null,e,p);u=t[0],c=t[1],m=u.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;const e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];u=qb(r,e,t),a=r,r=qb(r,0,e),c=qb(s,e,t),i=s,s=qb(s,0,e),m=u.concat(c)}else null!=n.validationSteps&&(g=!0);const y=r.concat(s).concat(h);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let w,v;g?(this.makeTestFunction(),w=this.testFunction,v=x.slice().concat(x.map((e=>"val_"+e)))):(w=null,m=[],v=x.slice());const k=ob(n.callbacks,n.yieldEvery);return await this.fitLoop(b,y,x,p,n.epochs,n.verbose,k,w,m,n.shuffle,v,n.initialEpoch,null,null)}finally{this.isTraining=!1,Zb(r,e),Zb(s,t),Zb(a,e),Zb(i,t),Zb(u,o),Zb(c,l),null!=h&&Sa(h)}}async fitLoop(e,t,n,r,s,a,i,o,l,u,c,h,p,d){null==r&&(r=32),null==s&&(s=1),null==u&&(u=!0),null==h&&(h=0);let f=!1;if(null!=o&&null!=l&&(f=!0),null!=d&&(f=!0,null==p))throw new Wm("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,r,p,"steps_per_epoch");let g;null!=m&&(g=Rg(0,m)),null==a&&(a=1);const{callbackList:y,history:b}=ub(i,a,s,h,m,p,r,f,c);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let a=h;a<s;++a){await y.onEpochBegin(a);const s={};if(null!=p)throw new Vm("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new Vm("batch shuffling is not implemneted yet");u&&H(g);const a=Rh(g),i=Xb(m,r);for(let u=0;u<i.length;++u){const c={};if(await y.onBatchBegin(u,c),Aa((()=>{const h=i[u][0],p=i[u][1],d=Lg(a,h,p-h);c.batch=u,c.size=p-h;const m=Kb(t,d),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],r=g[e];c[t]=r,Ca(r)}if(u===i.length-1&&f){const e=this.testLoop(o,l,r);for(let t=0;t<n.length;++t){const r=n[t],a=e[t];Ca(a),s["val_"+r]=a}}})),await y.onBatchEnd(u,c),eb(c),this.stopTraining_)break}a.dispose()}if(await y.onEpochEnd(a,s),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(Y(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),Y(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),Y(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),Y(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),Y(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(jb(n.validationData))Y(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Vm("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=ob(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=ub(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,u);p.setModel(e),e.history=d,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const u={};await p.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=Ub(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await p.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=Pb(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Wb(s[e],null,t[e]))}const u=r.concat(s).concat(i),d=o(u);Sa(u);for(let e=0;e<l.length;++e){const t=l[e],n=d[e];a[t]=n,Ca(n)}await p.onBatchEnd(h,a),eb(a),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=jb(n.validationData)?Xm(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Xm(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,u),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return Sa(a),Zb(n[0],e),Zb(n[1],t),Km(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Na().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Na().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Ym(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Ym(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=Ym(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Ym(Tb(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Ym(Tb(e))));{const e={};for(const t in this.metrics)e[t]=Ym(Tb(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=cb(Mb(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=Zm(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Zm(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Zm(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>Zm(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Zm(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=Za(e);if(0===t.length)throw new Wm(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Wm(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Wm("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await _a(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Bb}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await _a(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=Wa([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;$b(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){$b(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}nx.className="Model",qi(nx);class rx extends nx{}rx.className="Functional",qi(rx);class sx extends nx{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:dg("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Wm(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof sx||e instanceof nx;let n;if(t){if(n=e,1!==n.outputs.length)throw new Wm("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Wm("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Wm("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Wm("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Dy({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Wm(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Wm("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Fy(this.outputs[0])}this.inboundNodes=[],new _y({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:jm(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(ky(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new nx({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Pm("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Pm("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Pm("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Pm("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Wm("Legacy serialization format not supported yet.");s=t}else Y(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof sx))throw new Vm(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of s){const t=cb(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new Wm("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Wm("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}sx.className="Sequential",qi(sx);class ax extends ji{getConfig(){return{}}}class ix extends ax{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Vm(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return bu(e)}(e,t)}}ix.className="elu",qi(ix);class ox extends ax{apply(e){return ch(e)}}ox.className="selu",qi(ox);class lx extends ax{apply(e){return th(e)}}lx.className="relu",qi(lx);class ux extends ax{apply(e){return Aa((()=>wc(6,th(e))))}}ux.className="relu6",qi(ux);class cx extends ax{apply(e){return e}}cx.className="linear",qi(cx);class hx extends ax{apply(e){return Rl(e)}}hx.className="sigmoid",qi(hx);class px extends ax{apply(e){return function(e){return Aa((()=>{const t=Fi(.5,Li(.2,e));return Hl(t,0,1)}))}(e)}}px.className="hardSigmoid",qi(px);class dx extends ax{apply(e){return nc(e)}}dx.className="softplus",qi(dx);class fx extends ax{apply(e){return function(e){return Aa((()=>Mi(e,Fi(to(e),1))))}(e)}}fx.className="softsign",qi(fx);class mx extends ax{apply(e){return Fl(e)}}mx.className="tanh",qi(mx);class gx extends ax{apply(e,t=-1){return wh(e,t)}}gx.className="softmax",qi(gx);class yx extends ax{apply(e,t=-1){return sc(e,t)}}yx.className="logSoftmax",qi(yx);class bx extends ax{apply(e){return Aa((()=>Aa((()=>{const t=Math.sqrt(2),n=Li(.5,Fi(1,wu(Mi(e,t))));return Li(e,n)}))))}}bx.className="gelu",qi(bx);class xx extends ax{apply(e){return Aa((()=>Li(.5,Li(e,Fi(1,Fl(Li(Bi(Mi(2,Math.PI)),Fi(e,Li(.044715,Ji(e,3))))))))))}}xx.className="gelu_new",qi(xx);class wx extends ax{apply(e){return Aa((()=>Li(e,Fl(nc(e)))))}}wx.className="mish",qi(wx);class vx extends ax{apply(e,t=1){return Aa((()=>Li(Rl(Li(e,t)),e)))}}function kx(e){return e.getClassName()}function Ix(e,t={}){return tg(e,Hi.getMap().classNameMap,t,"activation")}function Nx(e){if(null==e){return Ix({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},Ix(t)}return e instanceof ax?e:Ix(e)}vx.className="swish",qi(vx);class Ax extends ji{}class Sx extends Ax{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Aa((()=>{let t=yc([1]);return this.hasL1&&(t=Fi(t,_u(Li(this.l1,to(e))))),this.hasL2&&(t=Fi(t,_u(Li(this.l2,Hg(e))))),Cl(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Sx.className="L1L2",qi(Sx);const Cx={l1l2:"L1L2"};function Ex(e){return Qm(e)}function Tx(e,t={}){return tg(e,Hi.getMap().classNameMap,t,"regularizer")}function $x(e){return null==e?null:"string"==typeof e?Tx({className:e in Cx?Cx[e]:e,config:{}}):e instanceof Ax?e:Tx(e)}class _x extends Oy{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=vy(e);let n=th(e);return null!=this.maxValue&&(n=Hl(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}_x.className="ReLU",qi(_x);class Rx extends Oy{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=vy(e);return Ku(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Rx.className="LeakyReLU",qi(Rx);class Ox extends Oy{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=by(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=$x(e.alphaRegularizer),this.alphaConstraint=Jy(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Wm(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=ky(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Ey({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=vy(e),Lc(e,this.alpha.read())}getConfig(){const e={alphaInitializer:yy(this.alphaInitializer),alphaRegularizer:Ex(this.alphaRegularizer),alphaConstraint:Yy(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Ox.className="PReLU",qi(Ox);class Fx extends Oy{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Vm(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=vy(e);return bu(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Fx.className="ELU",qi(Fx);class Dx extends Oy{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=vy(e);return Li(n,_i(Vu(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Dx.className="ThresholdedReLU",qi(Dx);class Mx extends Oy{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new gx).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return Aa((()=>{let n=vy(e);const r=t.mask;if(null!=r){const e=Li(Qi(bc(n.shape),_i(r,n.dtype)),Vi(-1e9));n=Fi(n,e)}return this.axis instanceof Array?this.axis.length>1?Du(Qi(n,ac(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Lx(e,t,n){if("number"==typeof e)return jm(e,t);if(e.length!==t)throw new Wm(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new Wm(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function Bx(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function zx(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+_g([n-t,0]);else{if("same"!==r)throw new Wm(`Unsupport padding mode: ${r}.`);e*=t}return e}function Px(e,t){return Aa((()=>(wg(t),"channelsFirst"===t?Zh(e,[0,2,3,1]):e)))}function Wx(e,t){return Aa((()=>(wg(t),"channelsFirst"===t?Zh(e,[0,2,3,4,1]):e)))}function Vx(e,t,n,r=[1,1],s="valid",a,i,o=null){return Aa((()=>{if(null==a&&(a="channelsLast"),wg(a),3!==e.rank&&4!==e.rank)throw new Wm(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Wm(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Px(e,a);if("causal"===s)throw new Vm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=hp({x:l,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=Zh(l,[0,3,1,2])),l}))}Mx.className="Softmax",qi(Mx);class Ux extends Oy{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Ux.verifyArgs(t),this.rank=e,og(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Vm(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Lx(t.kernelSize,e,"kernelSize"),this.strides=Lx(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,vg(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,wg(this.dataFormat),this.activation=Nx(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=by(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Jy(t.biasConstraint),this.biasRegularizer=$x(t.biasRegularizer),this.activityRegularizer=$x(t.activityRegularizer),this.dilationRate=Lx(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Wm(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Wm(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Wm(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Hm("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!ig(e.kernelSize,"number",1,3))throw new Wm(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:kx(this.activation),useBias:this.useBias,biasInitializer:yy(this.biasInitializer),biasRegularizer:Ex(this.biasRegularizer),activityRegularizer:Ex(this.activityRegularizer),biasConstraint:Yy(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Gx extends Ux{constructor(e,t){super(e,t),this.kernel=null,Gx.verifyArgs(t),this.filters=t.filters,og(this.filters,"filters"),this.kernelInitializer=by(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Jy(t.kernelConstraint),this.kernelRegularizer=$x(t.kernelRegularizer)}build(e){e=ky(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Wm(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Aa((()=>{let t;e=vy(e);const n=null==this.bias?null:this.bias.read(),r=ug(this.activation.getClassName());if(null!=r&&2===this.rank)t=Vx(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",a,i=1){return Aa((()=>{if(null==a&&(a="channelsLast"),wg(a),3!==e.shape.length)throw new Wm(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Wm(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Wm(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===a&&(e=Zh(e,[0,2,1])),"causal"===s)throw new Vm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Jl(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=Kg(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Vx(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Vm("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",a,i){return Aa((()=>{if(null==a&&(a="channelsLast"),wg(a),4!==e.rank&&5!==e.rank)throw new Wm(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Wm(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Wx(e,a);if("causal"===s)throw new Vm("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=tu(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=Kg(o,n)),"channelsFirst"===a&&(o=Zh(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=ky(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=Bx(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:yy(this.kernelInitializer),kernelRegularizer:Ex(this.kernelRegularizer),kernelConstraint:Yy(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Wm(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class jx extends Gx{constructor(e){super(2,e),jx.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!ig(e.kernelSize,"number",1,2))throw new Wm(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}jx.className="Conv2D",qi(jx);class Hx extends Gx{constructor(e){super(3,e),Hx.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Wm(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Hx.className="Conv3D",qi(Hx);class qx extends jx{constructor(e){if(super(e),this.inputSpec=[new Ey({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Wm(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=ky(e)).length)throw new Wm("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Wm("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ey({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Aa((()=>{let t=vy(e);if(4!==t.shape.length)throw new Wm(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[r,zx(i,c,l,this.padding),zx(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Zh(t,[0,2,3,1]));let d=eu(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=Zh(d,[0,3,1,2])),null!=this.bias&&(d=Kg(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(e){const t=(e=ky(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=zx(t[r],o,a,this.padding),t[s]=zx(t[s],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}qx.className="Conv2DTranspose",qi(qx);class Kx extends Hx{constructor(e){if(super(e),this.inputSpec=[new Ey({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Wm(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=ky(e)).length)throw new Wm("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Wm("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ey({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Aa((()=>{let t=vy(e);if(5!==t.shape.length)throw new Wm(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a,i;"channelsFirst"===this.dataFormat?(i=2,s=3,a=4):(i=1,s=2,a=3);const o=n[i],l=n[s],u=n[a],c=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],d=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,zx(o,d,c,this.padding),zx(l,f,h,this.padding),zx(u,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Zh(t,[0,2,3,4,1]));let y=ru(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Zh(y,[0,4,1,2,3])),null!==this.bias&&(y=Kg(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=ky(e)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=zx(t[r],u,i,this.padding),t[s]=zx(t[s],c,o,this.padding),t[a]=zx(t[a],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Kx.className="Conv3DTranspose",qi(Kx);class Xx extends Gx{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Wm("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Wm("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Wm(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=by(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=$x(t.depthwiseRegularizer),this.depthwiseConstraint=Jy(t.depthwiseConstraint),this.pointwiseInitializer=by(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=$x(t.pointwiseRegularizer),this.pointwiseConstraint=Jy(t.pointwiseConstraint)}build(e){if((e=ky(e)).length<this.rank+2)throw new Wm(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Wm(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Ey({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Aa((()=>{let t;if(e=vy(e),1===this.rank)throw new Vm("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Zh(e,[0,2,3,1])),t=hh(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Kg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Zh(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=yy(this.depthwiseInitializer),e.pointwiseInitializer=yy(this.pointwiseInitializer),e.depthwiseRegularizer=Ex(this.depthwiseRegularizer),e.pointwiseRegularizer=Ex(this.pointwiseRegularizer),e.depthwiseConstraint=Yy(this.depthwiseConstraint),e.pointwiseConstraint=Yy(this.pointwiseConstraint),e}}Xx.className="SeparableConv";class Yx extends Xx{constructor(e){super(2,e)}}Yx.className="SeparableConv2D",qi(Yx);class Zx extends Gx{constructor(e){super(1,e),Zx.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!ig(e.kernelSize,"number",1,1))throw new Wm(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Zx.className="Conv1D",qi(Zx);class Jx extends Oy{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Aa((()=>{if(e=vy(e),"channelsLast"===this.dataFormat){const t=zg(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return zg(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=zg(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return zg(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Jx.className="Cropping2D",qi(Jx);class Qx extends Oy{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,wg(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,ag(mg,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Aa((()=>{let t=vy(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Zh(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?ud.resizeNearestNeighbor(t,[e,r]):ud.resizeBilinear(t,[e,r]);return Zh(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?ud.resizeNearestNeighbor(t,[e,r]):ud.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Qx.className="UpSampling2D",qi(Qx);class ew extends Ux{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=by(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Jy(e.depthwiseConstraint),this.depthwiseRegularizer=$x(e.depthwiseRegularizer)}build(e){if((e=ky(e)).length<4)throw new Wm(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Wm(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Aa((()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return Aa((()=>{null==s&&(s="channelsLast"),wg(s);let i=Px(e,s);if(4!==e.rank)throw new Wm(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Wm(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=cu(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=Zh(i,[0,3,1,2])),i}))}(e=vy(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Kg(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=ky(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=Bx(t,this.kernelSize[0],this.padding,this.strides[0]),a=Bx(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=yy(this.depthwiseInitializer),e.depthwiseRegularizer=Ex(this.depthwiseRegularizer),e.depthwiseConstraint=Yy(this.depthwiseRegularizer),e}}function tw(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Wm("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function nw(e,t,n,r=!1,s,a,i=!1,o=!1){return Aa((()=>{const l=t.shape.length;if(l<3)throw new Wm(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Rg(2,l));if(t=Zh(t,u),null!=a)throw new Vm("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=_i(_i(s,"bool"),"float32")).rank===l-1&&(s=Mu(s,-1)),s=Zh(s,u)),r&&(t=rh(t,0),null!=s&&(s=rh(s,0)));const c=[];let h,p=n;const d=t.shape[0],f=jh(t);let m,g;null!=s&&(m=jh(s));for(let t=0;t<d;++t){const n=f[t],r=Aa((()=>e(n,p)));if(null==s)h=r[0],p=r[1];else{const e=Aa((()=>{const e=m[t],n=Qi(Ec(e),e);return{output:Fi(Li(r[0],e),Li(p[0],n)),newStates:p.map(((t,s)=>Fi(Li(r[1][s],e),Li(t,n))))}}));h=e.output,p=e.newStates}o&&c.push(h)}return o&&(g=Eh(c,1)),[h,g,p]}))}ew.className="DepthwiseConv2D",qi(ew);class rw extends Oy{constructor(e){let t;if(super(e),null==e.cell)throw new Wm("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new hw({cells:e.cell}):e.cell,null==t.stateSize)throw new Wm("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Ey({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Rg(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){xy(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return Aa((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Vm("Constants support is not implemented in RNN yet.");xy(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Ey({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!ee(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new Wm(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new Ey({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Aa((()=>{if(!this.stateful)throw new zm("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Wm("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>yc([n,e]))):this.states_=[yc([n,this.cell.stateSize])];else if(null==e)Sa(this.states_),null!=this.keptStates&&(Sa(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>yc([n,e]))):this.states_[0]=yc([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Wm(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Sa(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!ee(r.shape,a))throw new Wm(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>Ca(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=tw(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Ey({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof Ty){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Aa((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=vy(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new Wm(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=nw(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return Aa((()=>{let t=yc(e.shape);return t=_u(t,[1,2]),t=Mg(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Vg(t,[1,e]):t)):this.cell.stateSize>1?[Vg(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===rw.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const r=cb(t.cell,n);return new e(Object.assign(t,{cell:r}))}}rw.className="RNN",qi(rw);class sw extends Oy{}class aw extends sw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,og(this.units,"units"),this.activation=Nx(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=by(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=by(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=by(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=$x(e.kernelRegularizer),this.recurrentRegularizer=$x(e.recurrentRegularizer),this.biasRegularizer=$x(e.biasRegularizer),this.kernelConstraint=Jy(e.kernelConstraint),this.recurrentConstraint=Jy(e.recurrentConstraint),this.biasConstraint=Jy(e.biasConstraint),this.dropout=$g([1,_g([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=$g([1,_g([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ky(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Aa((()=>{if(2!==e.length)throw new Wm(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pw({ones:()=>Ec(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pw({ones:()=>Ec(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=Gg(null!=a?Li(e,a):e,this.kernel.read()),null!=this.bias&&(s=Kg(s,this.bias.read())),null!=i&&(n=Li(n,i));let o=Fi(s,Gg(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:kx(this.activation),useBias:this.useBias,kernelInitializer:yy(this.kernelInitializer),recurrentInitializer:yy(this.recurrentInitializer),biasInitializer:yy(this.biasInitializer),kernelRegularizer:Ex(this.kernelRegularizer),recurrentRegularizer:Ex(this.recurrentRegularizer),biasRegularizer:Ex(this.biasRegularizer),activityRegularizer:Ex(this.activityRegularizer),kernelConstraint:Yy(this.kernelConstraint),recurrentConstraint:Yy(this.recurrentConstraint),biasConstraint:Yy(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}aw.className="SimpleRNNCell",qi(aw);class iw extends rw{constructor(e){e.cell=new aw(e),super(e)}call(e,t){return Aa((()=>{null!=this.cell.dropoutMask&&(Sa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Sa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}iw.className="SimpleRNN",qi(iw);class ow extends sw{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Wm("GRUCell does not support reset_after parameter set to true.");this.units=e.units,og(this.units,"units"),this.activation=Nx(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Nx(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=by(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=by(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=by(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=$x(e.kernelRegularizer),this.recurrentRegularizer=$x(e.recurrentRegularizer),this.biasRegularizer=$x(e.biasRegularizer),this.kernelConstraint=Jy(e.kernelConstraint),this.recurrentConstraint=Jy(e.recurrentConstraint),this.biasConstraint=Jy(e.biasConstraint),this.dropout=$g([1,_g([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=$g([1,_g([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=ky(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Aa((()=>{if(2!==e.length)throw new Wm(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pw({ones:()=>Ec(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pw({ones:()=>Ec(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=Li(e,s[0]));let u=Gg(e,this.kernel.read());this.useBias&&(u=Kg(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Li(r,a[0]));const c=this.recurrentKernel.read(),[h,p]=Nh(c,[2*this.units,this.units],c.rank-1),d=Gg(r,h),[f,m,g]=Nh(u,3,u.rank-1),[y,b]=Nh(d,2,d.rank-1);i=this.recurrentActivation.apply(Fi(f,y)),o=this.recurrentActivation.apply(Fi(m,b));const x=Gg(Li(o,r),p);l=this.activation.apply(Fi(g,x));const w=Fi(Li(i,r),Li(Fi(1,tc(i)),l));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:kx(this.activation),recurrentActivation:kx(this.recurrentActivation),useBias:this.useBias,kernelInitializer:yy(this.kernelInitializer),recurrentInitializer:yy(this.recurrentInitializer),biasInitializer:yy(this.biasInitializer),kernelRegularizer:Ex(this.kernelRegularizer),recurrentRegularizer:Ex(this.recurrentRegularizer),biasRegularizer:Ex(this.biasRegularizer),activityRegularizer:Ex(this.activityRegularizer),kernelConstraint:Yy(this.kernelConstraint),recurrentConstraint:Yy(this.recurrentConstraint),biasConstraint:Yy(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}ow.className="GRUCell",qi(ow);class lw extends rw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ow(e),super(e)}call(e,t){return Aa((()=>{null!=this.cell.dropoutMask&&(Sa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Sa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}lw.className="GRU",qi(lw);class uw extends sw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,og(this.units,"units"),this.activation=Nx(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Nx(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=by(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=by(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=by(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=$x(e.kernelRegularizer),this.recurrentRegularizer=$x(e.recurrentRegularizer),this.biasRegularizer=$x(e.biasRegularizer),this.kernelConstraint=Jy(e.kernelConstraint),this.recurrentConstraint=Jy(e.recurrentConstraint),this.biasConstraint=Jy(e.biasConstraint),this.dropout=$g([1,_g([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=$g([1,_g([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=ky(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends Qg{apply(t,r){const s=e.apply([n]),a=(new ty).apply([n]),i=e.apply([2*n]);return Wg(Wg(s,a),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Aa((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new Wm(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pw({ones:()=>Ec(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pw({ones:()=>Ec(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=Li(e,a[0]));let h=Gg(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Li(r,i[0])),h=Fi(h,Gg(r,this.recurrentKernel.read())),this.useBias&&(h=Kg(h,this.bias.read()));const[p,d,f,m]=Nh(h,4,h.rank-1);o=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(d),u=Fi(Li(l,s),Li(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Li(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:kx(this.activation),recurrentActivation:kx(this.recurrentActivation),useBias:this.useBias,kernelInitializer:yy(this.kernelInitializer),recurrentInitializer:yy(this.recurrentInitializer),biasInitializer:yy(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Ex(this.kernelRegularizer),recurrentRegularizer:Ex(this.recurrentRegularizer),biasRegularizer:Ex(this.biasRegularizer),activityRegularizer:Ex(this.activityRegularizer),kernelConstraint:Yy(this.kernelConstraint),recurrentConstraint:Yy(this.recurrentConstraint),biasConstraint:Yy(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}uw.className="LSTMCell",qi(uw);class cw extends rw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new uw(e),super(e)}call(e,t){return Aa((()=>{null!=this.cell.dropoutMask&&(Sa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Sa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}cw.className="LSTM",qi(cw);class hw extends sw{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Aa((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;xy(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{Ng(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(cb(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Sy(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}Cy(t)}}function pw(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):Xg(t(),n),o=()=>Yg(i,t,r);return!s||s<=1?Ca(o().clone()):Array(s).fill(void 0).map(o).map((e=>Ca(e.clone())))}hw.className="StackedRNNCells",qi(hw);class dw extends rw{constructor(e){if(e.unroll)throw new Vm("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Vm("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Ey({ndim:5})]}call(e,t){return Aa((()=>{if(null!=this.cell.dropoutMask&&(Sa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Sa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Wm("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Aa((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=yc([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){Aa((()=>{if(!this.stateful)throw new zm("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new Wm("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>yc(s))):this.states_=[yc(s)];else if(null==e)Sa(this.states_),null!=this.keptStates&&(Sa(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>yc(s))):this.states_[0]=yc(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Wm(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Sa(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!ee(n.shape,r))throw new Wm(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Ca(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=Bx(l,r[0],s,a[0],i[0]),h=Bx(u,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}dw.className="ConvRNN2D";class fw extends uw{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,og(this.filters,"filters"),this.kernelSize=Lx(n,2,"kernelSize"),this.kernelSize.forEach((e=>og(e,"kernelSize"))),this.strides=Lx(r||1,2,"strides"),this.strides.forEach((e=>og(e,"strides"))),this.padding=s||"valid",vg(this.padding),this.dataFormat=a||"channelsLast",wg(this.dataFormat),this.dilationRate=Lx(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>og(e,"dilationRate")))}build(e){var t;e=ky(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Wm(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Qg{apply(e,t){return Pg([n.apply([r]),bc([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Aa((()=>{if(3!==e.length)throw new Wm(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=pw({ones:()=>Ec(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Li(t[n],e):e;let l=o(r,i,0),u=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=pw({ones:()=>Ec(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let d=o(s,p,0),f=o(s,p,1),m=o(s,p,2),g=o(s,p,3);const[y,b,x,w]=Nh(this.kernel.read(),4,3),[v,k,I,N]=this.useBias?Nh(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,v,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,w,N,this.padding);const[A,S,C,E]=Nh(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,A),f=this.recurrentConv(f,S),m=this.recurrentConv(m,C),g=this.recurrentConv(g,E);const T=this.recurrentActivation.apply(Fi(l,d)),$=this.recurrentActivation.apply(Fi(u,f)),_=Fi(Li($,a),Li(T,this.activation.apply(Fi(c,m)))),R=Li(this.recurrentActivation.apply(Fi(h,g)),this.activation.apply(_));return[R,R,_]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){const s=Zl(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Kg(s,n,this.dataFormat):s}recurrentConv(e,t){return Zl(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}fw.className="ConvLSTM2DCell",qi(fw);class mw extends dw{constructor(e){const t=new fw(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}mw.className="ConvLSTM2D",qi(mw);class gw extends Oy{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Aa((()=>{this.invokeCallHook(e,t);const n=vy(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Yg((()=>Xg(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}gw.className="Dropout",qi(gw);class yw extends gw{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}yw.className="SpatialDropout1D",qi(yw);class bw extends Oy{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,og(this.units,"units"),this.activation=Nx(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=by(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=by(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Jy(e.kernelConstraint),this.biasConstraint=Jy(e.biasConstraint),this.kernelRegularizer=$x(e.kernelRegularizer),this.biasRegularizer=$x(e.biasRegularizer),this.activityRegularizer=$x(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=ky(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=ky(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Aa((()=>{this.invokeCallHook(e,t);const n=vy(e),r=ug(this.activation.getClassName());let s;return null!=r?s=Gg(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=Gg(n,this.kernel.read()),null!=this.bias&&(s=Kg(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:kx(this.activation),useBias:this.useBias,kernelInitializer:yy(this.kernelInitializer),biasInitializer:yy(this.biasInitializer),kernelRegularizer:Ex(this.kernelRegularizer),biasRegularizer:Ex(this.biasRegularizer),activityRegularizer:Ex(this.activityRegularizer),kernelConstraint:Yy(this.kernelConstraint),biasConstraint:Yy(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}bw.className="Dense",qi(bw);class xw extends Oy{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=ky(e);for(const t of e.slice(1))if(null==t)throw new Wm(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Tg(e,1)]}call(e,t){return Aa((()=>{this.invokeCallHook(e,t);let n=vy(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Zh(n,e)}return function(e){if(e.rank<=1)throw new Wm(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Tg(e.shape,1)];return Cl(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}xw.className="Flatten",qi(xw);class ww extends Oy{constructor(e){super(e),this.supportsMasking=!0,this.activation=Nx(e.activation)}call(e,t){return Aa((()=>{this.invokeCallHook(e,t);const n=vy(e);return this.activation.apply(n)}))}getConfig(){const e={activation:kx(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}ww.className="Activation",qi(ww);class vw extends Oy{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Aa((()=>{return e=vy(e),t=e,n=this.n,Aa((()=>{if(2!==t.shape.length)throw new Wm(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Vg(Mg(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}vw.className="RepeatVector",qi(vw);class kw extends Oy{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==a)throw new Wm("Can only specifiy one unknown dimension.");a=e}else s*=t}const i=Tg(e);if(null!==a){if(0===s||i%s!=0)throw new Wm(n);r[a]=i/s}else if(i!==s)throw new Wm(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Aa((()=>{this.invokeCallHook(e,t);const n=vy(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Cl(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}kw.className="Reshape",qi(kw);class Iw extends Oy{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Rg(1,e.dims.length+1);if(!ee(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ey({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=ky(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Zh(vy(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Iw.className="Permute",qi(Iw);class Nw extends Oy{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=vy(e);return sl(Sc(n,this.maskValue),-1)}call(e,t){return Aa((()=>{this.invokeCallHook(e,t);const n=vy(e),r=sl(Sc(n,this.maskValue),-1,!0);return Li(n,_i(r,n.dtype))}))}}Nw.className="Masking",qi(Nw);class Aw extends Oy{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Xm(e.inputLength))}this.inputDim=e.inputDim,og(this.inputDim,"inputDim"),this.outputDim=e.outputDim,og(this.outputDim,"outputDim"),this.embeddingsInitializer=by(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=$x(e.embeddingsRegularizer),this.activityRegularizer=$x(e.activityRegularizer),this.embeddingsConstraint=Jy(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Aa((()=>this.maskZero?(e=vy(e),Sc(e,Pi(e))):null))}computeOutputShape(e){if(e=ky(e),null==this.inputLength)return[...e,this.outputDim];const t=Xm(this.inputLength);if(t.length!==e.length-1)throw new Wm(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new Wm(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Aa((()=>{this.invokeCallHook(e,t);let n=vy(e);"int32"!==n.dtype&&(n=Dg(n,"int32"));const r=jg(this.embeddings.read(),Cl(n,[n.size]));return Cl(r,ky(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:yy(this.embeddingsInitializer),embeddingsRegularizer:Ex(this.embeddingsRegularizer),activityRegularizer:Ex(this.activityRegularizer),embeddingsConstraint:Yy(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Aw.className="Embedding",qi(Aw);class Sw extends Oy{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Vm}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new Wm("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[ky(e)]),e.length<2)throw new Wm(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=rg(t),t.length>1)throw new Wm(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===rg(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Aa((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=_g(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Mg(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let i=Cl(r,[s].concat(Tg(e.slice(1))));i=Zh(i,[1,0]),i=Cl(i,a),t.push(i),n=!0}else if(e>1){const s=Rg(1,e).concat([0]);t.push(Zh(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Cl(Zh(Cl(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(Rg(0,s-1));r=Zh(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=rg(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Aa((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Wm("`mask` should be an Array");if(!Array.isArray(e))throw new Wm("`inputs` should be an Array");if(t.length!==e.length)throw new Wm(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Mu(e,0))))[0];for(let e=1;e<t.length-1;++e)n=ic(n,t[e]);return n}))}}class Cw extends Sw{constructor(e){super(e)}mergeFunction(e){return Aa((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Fi(t,e[n]);return t}))}}Cw.className="Add",qi(Cw);class Ew extends Sw{constructor(e){super(e)}mergeFunction(e){return Aa((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Li(t,e[n]);return t}))}}Ew.className="Multiply",qi(Ew);class Tw extends Sw{constructor(e){super(e)}mergeFunction(e){return Aa((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Fi(t,e[n]);return Li(1/e.length,t)}))}}Tw.className="Average",qi(Tw);class $w extends Sw{constructor(e){super(e)}mergeFunction(e){return Aa((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ao(t,e[n]);return t}))}}$w.className="Maximum",qi($w);class _w extends Sw{constructor(e){super(e)}mergeFunction(e){return Aa((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=wc(t,e[n]);return t}))}}_w.className="Minimum",qi(_w);class Rw extends Sw{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Wm("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(ee(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new Wm("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Aa((()=>Pg(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Wm("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Wm("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Wm("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Wm(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Aa((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(_i(Ec(e[n]),"bool")):t[n].rank<e[n].rank?r.push(Mu(t[n],-1)):r.push(t[n]);const s=$l(r,this.axis);return rl(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Ow(e,t){for(;e<0;)e+=t;return e}Rw.className="Concatenate",qi(Rw);class Fw extends Sw{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){Y(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Vm("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Wm(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Wm(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Ow(t,e[n].shape.length))):[Ow(this.axes,n.shape.length),Ow(this.axes,r.shape.length)],this.normalize&&(n=hb(n,t[0]),r=hb(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Vm("batchDot is not implemented for tensors of 4D or higher rank yet");if(Y(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),Y(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Vm("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return Aa((()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=Cl(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=Cl(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?_u(Li(e,t),a[0]):_u(Li(Zh(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;i=_l(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=Ch(i,t)}return 1===i.shape.length&&(i=Mu(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Ow(this.axes,e.length),Ow(this.axes,t.length)],n}computeOutputShape(e){Y(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Vm("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Fw.className="Dot",qi(Fw);class Dw extends Oy{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Aa((()=>{this.invokeCallHook(e,t);const n=vy(e);return Yg((()=>Fi(Ug(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}Dw.className="GaussianNoise",qi(Dw);class Mw extends Oy{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Aa((()=>{this.invokeCallHook(e,t);const n=vy(e);return this.rate>0&&this.rate<1?Yg((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Li(n,Ug(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}Mw.className="GaussianDropout",qi(Mw);class Lw extends Oy{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||vy(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Aa((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Yg((()=>{const t=vy(e),r=-1.7580993408473766;let s=Uu(Yc(n),this.rate);s=Dg(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate,o=Fi(Li(t,s),Li(Fi(s,-1),r));return Fi(Li(o,a),i)}),(()=>vy(e)),t.training||!1)}return e}))}}function Bw(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=Bl(e,t,n,r,s,a);else if(3===e.rank)i=zl(e,t,n,r,s,a);else{if(4!==e.rank)throw new Vm(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Pl(e,t,n,r,s,a)}return i}Lw.className="AlphaDropout",qi(Lw);class zw extends Oy{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=by(e.betaInitializer||"zeros"),this.gammaInitializer=by(e.gammaInitializer||"ones"),this.movingMeanInitializer=by(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=by(e.movingVarianceInitializer||"ones"),this.betaConstraint=Jy(e.betaConstraint),this.gammaConstraint=Jy(e.gammaConstraint),this.betaRegularizer=$x(e.betaRegularizer),this.gammaRegularizer=$x(e.gammaRegularizer)}build(e){e=ky(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Wm(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Ey({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Aa((()=>{const n=null!=t.training&&t.training,r=vy(e),s=r.shape,a=s.length,i=Rg(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=jm(1,a);l[o]=s[o];const u=i.slice();u.sort();const c=!ee(u,Rg(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=Cl(this.movingMean.read(),l),t=Cl(this.movingVariance.read(),l),n=this.center?Cl(this.beta.read(),l):null,s=this.scale?Cl(this.gamma.read(),l):null;return Bw(r,e,t,n,s,this.epsilon)}return Bw(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=function(e,t,n,r,s=.001){return ee(r.slice().sort(),Rg(0,e.rank-1))?function(e,t,n,r,s=.001){return Aa((()=>{const a=Ic(e,r),i=a.mean,o=a.variance;return[Bw(e,i,o,n,t,s),i,o]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return Aa((()=>{const a=Ic(e,r),i=a.mean,o=a.variance,l=[];for(const t of Rg(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=Cl(i,l),c=Cl(o,l),h=null==t?null:Cl(t,l),p=null==n?null:Cl(n,l);return[Bw(e,u,c,p,h,s),i,o]}))}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Aa((()=>{const r=1-n,s=e.read(),a=Li(Qi(s,t),r);e.write(Qi(s,a))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:yy(this.betaInitializer),gammaInitializer:yy(this.gammaInitializer),movingMeanInitializer:yy(this.movingMeanInitializer),movingVarianceInitializer:yy(this.movingVarianceInitializer),betaRegularizer:Ex(this.betaRegularizer),gammaRegularizer:Ex(this.gammaRegularizer),betaConstraint:Yy(this.betaConstraint),gammaConstraint:Yy(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}zw.className="BatchNormalization",qi(zw);class Pw extends Oy{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=by(e.betaInitializer||"zeros"),this.gammaInitializer=by(e.gammaInitializer||"ones"),this.betaRegularizer=$x(e.betaRegularizer),this.gammaRegularizer=$x(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=ky(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==rg(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const n=vy(e),r=n.shape,s=r.length;return Aa((()=>{let{mean:e,variance:t}=Ic(n,this.axis,!0);const a=jm(1,s);for(const e of this.axis)a[e]=r[e];const i=e=>null!=e&&e.shape.length!==s?Cl(e,a):e;let o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null;const u=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),c.push(1)):(u.push(1),c.push(r[e]));return e=Bu(e,u),t=Bu(t,u),null!=o&&(o=Bu(o,c)),null!=l&&(l=Bu(l,c)),Bw(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:yy(this.betaInitializer),gammaInitializer:yy(this.gammaInitializer),betaRegularizer:Ex(this.betaRegularizer),gammaRegularizer:Ex(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Pw.className="LayerNormalization",qi(Pw);class Ww extends Oy{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Wm(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Wm(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Wm(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Ey({ndim:4})]}computeOutputShape(e){let t,n;return e=ky(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Aa((()=>{return t=vy(e),n=this.padding,r=this.dataFormat,Aa((()=>{if(4!==t.rank)throw new Wm(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Wm("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Wm(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],$c(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Vw(e,t,n,r,s,a){return Aa((()=>{let i;wg(s),kg(a),vg(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Px(e,s);const o="same"===r?"same":"valid";return i="max"===a?dc(e,t,n,o):El(e,t,n,o),"channelsFirst"===s&&(i=Zh(i,[0,3,1,2])),i}))}function Uw(e,t,n,r,s,a){return Aa((()=>{let i;wg(s),kg(a),vg(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Wx(e,s);const o="same"===r?"same":"valid";return i="max"===a?fc(e,t,n,o):Tl(e,t,n,o),"channelsFirst"===s&&(i=Zh(i,[0,4,1,2,3])),i}))}Ww.className="ZeroPadding2D",qi(Ww);class Gw extends Oy{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Wm(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(og(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Wm(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}og(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,vg(this.padding),this.inputSpec=[new Ey({ndim:3})]}computeOutputShape(e){const t=Bx((e=ky(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Aa((()=>{this.invokeCallHook(e,t),e=Mg(vy(e),2);const n=this.poolingFunction(vy(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Ch(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class jw extends Gw{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return wg(s),vg(r),Vw(e,t,n,r,s,"max")}}jw.className="MaxPooling1D",qi(jw);class Hw extends Gw{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return wg(s),vg(r),Vw(e,t,n,r,s,"avg")}}Hw.className="AveragePooling1D",qi(Hw);class qw extends Oy{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Wm(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];og(this.poolSize,"poolSize"),og(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,wg(this.dataFormat),vg(this.padding),this.inputSpec=[new Ey({ndim:4})]}computeOutputShape(e){e=ky(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Bx(t,this.poolSize[0],this.padding,this.strides[0]),n=Bx(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Aa((()=>(this.invokeCallHook(e,t),this.poolingFunction(vy(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Kw extends qw{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return wg(s),vg(r),Vw(e,t,n,r,s,"max")}}Kw.className="MaxPooling2D",qi(Kw);class Xw extends qw{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return wg(s),vg(r),Vw(e,t,n,r,s,"avg")}}Xw.className="AveragePooling2D",qi(Xw);class Yw extends Oy{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Wm(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];og(this.poolSize,"poolSize"),og(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,wg(this.dataFormat),vg(this.padding),this.inputSpec=[new Ey({ndim:5})]}computeOutputShape(e){e=ky(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Bx(t,this.poolSize[0],this.padding,this.strides[0]),n=Bx(n,this.poolSize[1],this.padding,this.strides[1]),r=Bx(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Aa((()=>(this.invokeCallHook(e,t),this.poolingFunction(vy(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Zw extends Yw{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return wg(s),vg(r),Uw(e,t,n,r,s,"max")}}Zw.className="MaxPooling3D",qi(Zw);class Jw extends Yw{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return wg(s),vg(r),Uw(e,t,n,r,s,"avg")}}Jw.className="AveragePooling3D",qi(Jw);class Qw extends Oy{constructor(e){super(e),this.inputSpec=[new Ey({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Vm}}class ev extends Qw{constructor(e){super(e||{})}call(e,t){return Aa((()=>{const t=vy(e);return gc(t,1)}))}}ev.className="GlobalAveragePooling1D",qi(ev);class tv extends Qw{constructor(e){super(e||{})}call(e,t){return Aa((()=>{const t=vy(e);return Tu(t,1)}))}}tv.className="GlobalMaxPooling1D",qi(tv);class nv extends Oy{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,wg(this.dataFormat),this.inputSpec=[new Ey({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Vm}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class rv extends nv{call(e,t){return Aa((()=>{const t=vy(e);return"channelsLast"===this.dataFormat?gc(t,[1,2]):gc(t,[2,3])}))}}rv.className="GlobalAveragePooling2D",qi(rv);class sv extends nv{call(e,t){return Aa((()=>{const t=vy(e);return"channelsLast"===this.dataFormat?Tu(t,[1,2]):Tu(t,[2,3])}))}}sv.className="GlobalMaxPooling2D",qi(sv);class av extends Oy{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=cb(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class iv extends av{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=ky(e)).length<3)throw new Wm(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=ky(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Aa((()=>nw(((e,n)=>[vy(this.layer.call(e,t)),[]]),e=vy(e),[],!1,null,null,!1,!0)[1]))}}iv.className="TimeDistributed",qi(iv);class ov extends av{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=cb(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=cb(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,ag(bg,"BidirectionalMergeMode",s),e.weights)throw new Vm("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Km(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=tw(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Wm("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new Ey({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Vm("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof Ty;for(const e of a)if(e instanceof Ty!==o)throw new Wm("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Aa((()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=rh(s,1)),"concat"===this.mergeMode?i=Pg([r,s]):"sum"===this.mergeMode?i=Fi(r,s):"ave"===this.mergeMode?i=Li(.5,Fi(r,s)):"mul"===this.mergeMode?i=Li(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ng(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Ng(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=cb(t.layer);if(delete t.layer,null!=t.numConstants)throw new Vm("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}ov.className="Bidirectional",qi(ov);class lv extends Oy{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Aa((()=>("float32"!==(e=vy(e)).dtype&&(e=Dg(e,"float32")),Fi(Li(e,this.scale),this.offset))))}}lv.className="Rescaling",qi(lv);const{resizeBilinear:uv,cropAndResize:cv}=ud;class hv extends Oy{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,s,a,i,o){return Aa((()=>{let l,u=!1;const c=[t/a,n/i,(r+t)/a,(s+n)/i],h=[];3===e.rank?(u=!0,l=Eh([e])):l=e;for(let e=0;e<l.shape[0];e++)h.push(c);const p=wa(h,[h.length,4]),d=Jc(0,h.length,1,"int32"),f=cv(l,p,d,[r,s],"nearest");return Dg(u?vy(jh(f)):f,o)}))}upsize(e,t,n,r){return Aa((()=>Dg(uv(e,[t,n]),r)))}call(e,t){return Aa((()=>{const t=vy(e),n=t.dtype,r=t.shape,s=r[r.length-3],a=r[r.length-2];let i=0;s!==this.height&&(i=Math.floor((s-this.height)/2));let o=0;return a!==this.width&&(o=Math.floor((a-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,s,a,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=ky(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}hv.className="CenterCrop",qi(hv);class pv extends Oy{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=ky(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return Aa((()=>{let n;if("int32"!==(e=vy(e)).dtype&&(e=Dg(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new Wm(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=vy(t.countWeights)}const r=Tu(e),s=$u(e),a=Vu(this.numTokens,r).bufferSync().get(0),i=Uu(s,0).bufferSync().get(0);if(!a||!i)throw new Wm(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let s=vy(e);if("int32"!==s.dtype&&(s=Dg(s,"int32")),"int"===t)return s;const a=s.shape;if(0===s.rank&&(s=Mu(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=Mu(s,-1)),s.rank>2)throw new Wm(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${a} which would result in output rank ${s.rank}.`);const i=["multiHot","oneHot"].includes(t);let o;if(o=lu(s,void 0!==r&&"count"===t?r:[],n,i),"tfIdf"!==t)return o;if(r)return Li(o,r);throw new Wm("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}pv.className="CategoryEncoding",qi(pv);const dv=new Set(["bilinear","nearest"]);class fv extends Oy{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!dv.has(e.interpolation))throw new Wm(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=ky(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Aa((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return ud.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return ud.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...dv]} are supported`)}))}}fv.className="Resizing",qi(fv);class mv{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}mv.className="RandomSeed";class gv extends Oy{constructor(e){super(e),this.randomGenerator=new mv(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}gv.className="BaseRandomLayer";const yv=new Set(["bilinear","nearest"]);class bv extends gv{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new Wm(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new Wm(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new Wm(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!yv.has(n))throw new Wm(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=ky(e))[2];return[this.imgHeight,-1,t]}call(e,t){return Aa((()=>{const t=vy(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=Yc([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);const s=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return ud.resizeBilinear(e,s);case"nearest":return ud.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...yv]} are supported`)}}))}}var xv,wv;bv.className="RandomWidth",qi(bv),$e().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(xv||(xv={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(wv||(wv={}));const vv={};function kv(e){return vv[e]}function Iv(e,t,n,r,s){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===a.type)return Nv(t.inputNames[o],n,r,s);if("tensors"===a.type){const a=t.inputs.slice(e,i);return t.inputNames.slice(e,i).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=a[t])||void 0===n?void 0:n.op)})).map((e=>Nv(e,n,r,s)))}const l=Nv(t.inputNames[o],n,r,s),u=l.dataSync();return"number"===a.type?u[0]:xe(l.shape,u)}const i=t.attrParams[e];return i&&i.value}function Nv(e,t,n,r){const[s,a]=Ev(e,n);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[Cv(s,e)]));return void 0!==i?t[Cv(s,i)][a]:void 0}function Av(e,t,n){return t[Cv(e,n.currentContextId)]}function Sv(e,t){const[n,r,s]=Ev(e,t);return[Cv(n,t&&t.currentContextId),r,s]}function Cv(e,t){return t?`${e}-${t}`:e}function Ev(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const r=e.split(":");let s;if(1===r.length)s=[e,0,void 0];else{const e=r[0],t=3===r.length?r[1]:void 0;s=[e,Number(r[r.length-1]),t]}return n&&t.parseNodeNameCache.set(e,s),s}function Tv(e,t,n){let r=Iv("pad",e,t,n);if("explicit"===r){r=Iv("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function $v(e){return e.kept?e:Ri(e)}const _v=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Rv=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Ov=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],Fv=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Dv=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Mv=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Lv=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],Bv=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],zv=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Pv=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],Wv=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],Vv=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],Uv=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],Gv=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],jv=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Hv=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],qv=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Kv=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],Xv=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class Yv{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[i,o,l,u,c,h,p,d,f,m,g,y,b,x,w,v,k,I,N].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],s=[],a=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let o=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=Sv(e),a=i[r];if(null!=a.outputs){const e=a.outputs.indexOf(s);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=Sv(e),n=i[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=Sv(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:i,inputs:o,outputs:l,weights:s,placeholders:r,signature:t,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=kv(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=Jv(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Jv(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=lk(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=lk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=ek(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=ek(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=ok(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ok(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=Qv(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=Qv(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=ck(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ck(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=ik(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=ik(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=uk(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=uk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=rk(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=rk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=sk(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=sk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=nk(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=nk(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const s=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=Sv(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:tk(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[s,,a]=Sv(e),i=r[s];if(null!=i.outputs){const e=i.outputs.indexOf(a);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=Sv(i[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,a.push(s))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function Zv(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=$e().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function Jv(e,t,n,r=!1){const s=e[t];return null!=s?Zv(s.s,r):n}function Qv(e,t,n){const r=e[t];return r?r.b:n}function ek(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function tk(e){switch("string"==typeof e&&(e=xv[e]),e){case xv.DT_FLOAT:case xv.DT_HALF:return"float32";case xv.DT_INT32:case xv.DT_INT64:case xv.DT_INT8:case xv.DT_UINT8:return"int32";case xv.DT_BOOL:return"bool";case xv.DT_DOUBLE:return"float32";case xv.DT_STRING:return"string";case xv.DT_COMPLEX64:case xv.DT_COMPLEX128:return"complex64";default:return null}}function nk(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function rk(e,t,n){const r=e[t];return r&&r.type?tk(r.type):n}function sk(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>tk(e))):n}function ak(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function ik(e,t,n){const r=e[t];return r&&r.shape?ak(r.shape):n}function ok(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function lk(e,t,n,r=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>Zv(e,r))):n}function uk(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>ak(e))):n}function ck(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class hk{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return Nv(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Nv(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return ek(this.node.rawAttrs,e,t);if(null!=n.s)return Jv(this.node.rawAttrs,e,t);if(null!=n.b)return Qv(this.node.rawAttrs,e,t);if(null!=n.shape)return ik(this.node.rawAttrs,e,t);if(null!=n.type)return rk(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return ok(this.node.rawAttrs,e,t);if(null!=n.list.s)return lk(this.node.rawAttrs,e,t);if(null!=n.list.shape)return uk(this.node.rawAttrs,e,t);if(null!=n.list.b)return ck(this.node.rawAttrs,e,t);if(null!=n.list.type)return sk(this.node.rawAttrs,e,t)}return t}}function pk(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){Y(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const s=e[r],a=t[r];Y(s<0||a<0||s===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function dk(e){return"number"!=typeof e&&!e.some((e=>e<0))}function fk(e,t,n){let r=mk(e,n);const s=!dk(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach((e=>{r=mk(e.shape,r)})),!dk(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function mk(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const s=e[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:a}return n}class gk{constructor(e,t,n,r,s,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Vi(0),Ca(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),pk(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Ca(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return wa([],[0].concat(this.elementShape));const n=this.readMany(e);return pk(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Eh(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return wa([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return pk(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),$l(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,jh(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,a=[];Aa((()=>{t=Cl(t,[1,n,s]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],s];a[n]=Cl(Ol(t,i,o),this.elementShape)}return a}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,a)}}class yk{get id(){return this.idTensor.id}constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);pk(t,e.shape,"TensorList shape mismatch: "),Ca(e)})),this.idTensor=Vi(0),this.maxNumElements=r,Ca(this.idTensor)}copy(){return new yk([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);pk(e,this.elementShape,"TensorList shape mismatch: ");const r=fk(this.elementShape,this.tensors,e);return Aa((()=>{const e=this.tensors.map((e=>Cl(e,r)));return Eh(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=fk(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,pk(r.shape,e,"TensorList shape mismatch: "),Cl(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(pk(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Ca(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new yk([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);pk(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=fk(this.elementShape,this.tensors,t);return Cl(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);pk(this.elementShape,t.shape,"TensorList shape mismatch: "),Ca(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);pk(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=fk(this.elementShape,this.tensors,n);return 0===e.length?wa([],[0].concat(r)):Aa((()=>{const t=e.map((e=>Cl(this.tensors[e],r)));return Eh(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);pk(this.elementShape,t,"TensorList shape mismatch: ");const n=fk(this.elementShape,this.tensors,t);return 0===this.size()?wa([],[0].concat(n)):Aa((()=>{const e=this.tensors.map((e=>Cl(e,n)));return $l(e,0)}))}}function bk(e,t,n){const[r,s]=Iv("fusedOps",e,t,n),a="biasadd"===r,i=!a,o="prelu"===s,l="fusedbatchnorm"===r,u=Iv("numArgs",e,t,n);if(a){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=Iv("strides",e,t,n),h=Tv(e,t,n),p=Iv("dataFormat",e,t,n).toUpperCase(),d=Iv("dilations",e,t,n);let[f,m]=Iv("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:h,dataFormat:p,dilations:d,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:Iv("leakyreluAlpha",e,t,n)}}function xk(e,t,n){return{boxes:Iv("boxes",e,t,n),scores:Iv("scores",e,t,n),maxOutputSize:Iv("maxOutputSize",e,t,n),iouThreshold:Iv("iouThreshold",e,t,n),scoreThreshold:Iv("scoreThreshold",e,t,n),softNmsSigma:Iv("softNmsSigma",e,t,n)}}class wk{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Vi(0),this.tensorMap=new Map,Ca(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Vi(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Aa((()=>{const e=jh(t),r=n.length,s=e.length;Y(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let t=0;t<r;t++){const r=n[t],s=e[t];Ca(s),this.tensorMap.set(r,s)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Aa((()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,t);e.push(a)}return Eh(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function vk(e,t,n,r,s=Aa){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return s((()=>((e,t,n,r=A)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(Iv("a",e,t,n),Iv("b",e,t,n))];case"AddN":return[r.addN(Iv("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(Iv("a",e,t,n),Iv("b",e,t,n))];case"Mul":return[r.mul(Iv("a",e,t,n),Iv("b",e,t,n))];case"RealDiv":case"Div":return[r.div(Iv("a",e,t,n),Iv("b",e,t,n))];case"DivNoNan":return[r.divNoNan(Iv("a",e,t,n),Iv("b",e,t,n))];case"FloorDiv":return[r.floorDiv(Iv("a",e,t,n),Iv("b",e,t,n))];case"Sub":return[r.sub(Iv("a",e,t,n),Iv("b",e,t,n))];case"Minimum":return[r.minimum(Iv("a",e,t,n),Iv("b",e,t,n))];case"Maximum":return[r.maximum(Iv("a",e,t,n),Iv("b",e,t,n))];case"Pow":return[r.pow(Iv("a",e,t,n),Iv("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(Iv("a",e,t,n),Iv("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return s((()=>((e,t,n,r=A)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(Iv("x",e,t,n))];case"Acos":return[r.acos(Iv("x",e,t,n))];case"Acosh":return[r.acosh(Iv("x",e,t,n))];case"Asin":return[r.asin(Iv("x",e,t,n))];case"Asinh":return[r.asinh(Iv("x",e,t,n))];case"Atan":return[r.atan(Iv("x",e,t,n))];case"Atan2":return[r.atan2(Iv("x",e,t,n),Iv("y",e,t,n))];case"Atanh":return[r.atanh(Iv("x",e,t,n))];case"Ceil":return[r.ceil(Iv("x",e,t,n))];case"Complex":return[r.complex(Iv("real",e,t,n),Iv("imag",e,t,n))];case"Cos":return[r.cos(Iv("x",e,t,n))];case"Cosh":return[r.cosh(Iv("x",e,t,n))];case"Elu":return[r.elu(Iv("x",e,t,n))];case"Erf":return[r.erf(Iv("x",e,t,n))];case"Exp":return[r.exp(Iv("x",e,t,n))];case"Expm1":return[r.expm1(Iv("x",e,t,n))];case"Floor":return[r.floor(Iv("x",e,t,n))];case"Log":return[r.log(Iv("x",e,t,n))];case"Log1p":return[r.log1p(Iv("x",e,t,n))];case"Imag":return[r.imag(Iv("x",e,t,n))];case"Neg":return[r.neg(Iv("x",e,t,n))];case"Reciprocal":return[r.reciprocal(Iv("x",e,t,n))];case"Real":return[r.real(Iv("x",e,t,n))];case"Relu":return[r.relu(Iv("x",e,t,n))];case"Round":return[r.round(Iv("x",e,t,n))];case"Selu":return[r.selu(Iv("x",e,t,n))];case"Sigmoid":return[r.sigmoid(Iv("x",e,t,n))];case"Sin":return[r.sin(Iv("x",e,t,n))];case"Sign":return[r.sign(Iv("x",e,t,n))];case"Sinh":return[r.sinh(Iv("x",e,t,n))];case"Softplus":return[r.softplus(Iv("x",e,t,n))];case"Sqrt":return[r.sqrt(Iv("x",e,t,n))];case"Square":return[r.square(Iv("x",e,t,n))];case"Tanh":return[r.tanh(Iv("x",e,t,n))];case"Tan":return[r.tan(Iv("x",e,t,n))];case"ClipByValue":return[r.clipByValue(Iv("x",e,t,n),Iv("clipValueMin",e,t,n),Iv("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(Iv("x",e,t,n))];case"Rsqrt":return[r.rsqrt(Nv(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(Iv("x",e,t,n),Iv("alpha",e,t,n))];case"Prelu":return[r.prelu(Iv("x",e,t,n),Iv("alpha",e,t,n))];case"IsNan":return[r.isNaN(Nv(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(Nv(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(Nv(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=Iv("thenBranch",e,t,n),s=Iv("elseBranch",e,t,n),a=Iv("cond",e,t,n),i=Iv("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Iv("body",e,t,n),s=Iv("cond",e,t,n),a=Iv("args",e,t,n),i=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((e=>e.id));let l=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let u=a;for(;l[0];){const e=u;u=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await a[0].data(),a.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[$v(Iv("pred",e,t,n))];case"Switch":{const r=Iv("pred",e,t,n);let s=Iv("data",e,t,n);return s.kept||(s=$v(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==Nv(e,t,n)));return r?[$v(Nv(r,t,n))]:void 0}case"Enter":{const r=Iv("frameName",e,t,n),s=Iv("tensor",e,t,n);return n.enterFrame(r),[$v(s)]}case"Exit":{const r=Iv("tensor",e,t,n);return n.exitFrame(),[$v(r)]}case"NextIteration":{const r=Iv("tensor",e,t,n);return n.nextIteration(),[$v(r)]}case"TensorArrayV3":{const r=Iv("size",e,t,n),s=Iv("dtype",e,t,n),a=Iv("elementShape",e,t,n),i=Iv("dynamicSize",e,t,n),o=Iv("clearAfterRead",e,t,n),l=Iv("identicalElementShapes",e,t,n),u=Iv("name",e,t,n),c=new gk(u,s,r,a,l,i,o);return n.addTensorArray(c),[c.idTensor,Vi(1)]}case"TensorArrayWriteV3":{const r=Iv("tensorArrayId",e,t,n),s=Iv("index",e,t,n),a=Iv("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(s,a),[i.idTensor]}case"TensorArrayReadV3":{const r=Iv("tensorArrayId",e,t,n),s=Iv("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=Iv("tensorArrayId",e,t,n),s=Iv("indices",e,t,n),a=Iv("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=Iv("tensorArrayId",e,t,n),s=Iv("indices",e,t,n),a=Iv("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(s,a),[i.idTensor]}case"TensorArrayConcatV3":{const r=Iv("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=Iv("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=Iv("tensorArrayId",e,t,n),s=Iv("tensor",e,t,n),a=Iv("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(a,s),[i.idTensor]}case"TensorArraySizeV3":{const r=Iv("tensorArrayId",e,t,n);return[Vi(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=Iv("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=Iv("tensorListId",e,t,n),s=Iv("index",e,t,n),a=Iv("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(s,a),[i.idTensor]}case"TensorListGetItem":{const r=Iv("tensorListId",e,t,n),s=Iv("index",e,t,n),a=Iv("elementShape",e,t,n),i=Iv("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Iv("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new yk([],n,e.dtype,r),i=jh(e,0);return t.forEach(((e,t)=>{a.setItem(e,i[t])})),a}(Iv("tensor",e,t,n),r,Iv("elementShape",e,t,n),Iv("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=Iv("elementShape",e,t,n),s=Iv("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=Iv(a,e,t,n),o=function(e,t,n,r){return new yk([],e,t,r)}(r,s,0,"TensorListReserve"===e.op?-1:i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=Iv("tensorListId",e,t,n),s=Iv("indices",e,t,n),a=Iv("elementShape",e,t,n),i=Iv("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,i,a)]}case"TensorListStack":{const r=Iv("tensorListId",e,t,n),s=Iv("elementShape",e,t,n),a=Iv("elementDType",e,t,n),i=Iv("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);pk(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=jh(e);return new yk(s,t,r)}(Iv("tensor",e,t,n),Iv("elementShape",e,t,n),Iv("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=Iv("tensorListId",e,t,n),s=n.getTensorList(r.id),a=Iv("dtype",e,t,n),i=Iv("elementShape",e,t,n);return[s.concat(a,i)]}case"TensorListPushBack":{const r=Iv("tensorListId",e,t,n),s=Iv("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=Iv("tensorListId",e,t,n),s=Iv("elementShape",e,t,n),a=Iv("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=Iv("tensor",e,t,n),s=Iv("elementShape",e,t,n),a=function(e,t,n){let r=0;const s=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const a=mk(e.shape.slice(1),n),i=0===r?0:e.size/r,o=Aa((()=>{const n=[];e=Cl(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:s[r-1],0],l=[1,t[r],i];n[r]=Cl(Ol(e,o,l),a)}return e.dispose(),n})),l=new yk([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(r,Iv("lengths",e,t,n),s);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=Iv("tensorListId",e,t,n);return[Vi(n.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{const r=Iv("tensorListId",e,t,n),s=Iv("size",e,t,n),a=n.getTensorList(r.id).resize(s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return s((()=>((e,t,n,r=A)=>{switch(e.op){case"Conv1D":{const s=Iv("stride",e,t,n),a=Iv("pad",e,t,n),i=Iv("dataFormat",e,t,n).toUpperCase(),o=Iv("dilation",e,t,n);return[r.conv1d(Iv("x",e,t,n),Iv("filter",e,t,n),s,a,i,o)]}case"Conv2D":{const s=Iv("strides",e,t,n),a=Tv(e,t,n),i=Iv("dataFormat",e,t,n).toUpperCase(),o=Iv("dilations",e,t,n);return[r.conv2d(Iv("x",e,t,n),Iv("filter",e,t,n),[s[1],s[2]],a,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=bk(e,t,n);return[r.fused.conv2d({x:Iv("x",e,t,n),filter:Iv("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:c,leakyreluAlpha:h}=bk(e,t,n);return[r.fused.depthwiseConv2d({x:Iv("x",e,t,n),filter:Iv("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:c,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=Iv("outputShape",e,t,n),a=Iv("strides",e,t,n),i=Tv(e,t,n);return[r.conv2dTranspose(Iv("x",e,t,n),Iv("filter",e,t,n),s,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=Iv("strides",e,t,n),a=Tv(e,t,n),i=Iv("dilations",e,t,n),o=Iv("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(Iv("input",e,t,n),Iv("filter",e,t,n),[s[1],s[2]],a,o,[i[1],i[2]])]}case"Conv3D":{const s=Iv("strides",e,t,n),a=Iv("pad",e,t,n),i=Iv("dataFormat",e,t,n).toUpperCase(),o=Iv("dilations",e,t,n);return[r.conv3d(Iv("x",e,t,n),Iv("filter",e,t,n),[s[1],s[2],s[3]],a,i,[o[1],o[2],o[3]])]}case"AvgPool":{const s=Iv("strides",e,t,n),a=Iv("pad",e,t,n),i=Iv("kernelSize",e,t,n);return[r.avgPool(Iv("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPool":{const s=Iv("strides",e,t,n),a=Iv("pad",e,t,n),i=Iv("kernelSize",e,t,n);return[r.maxPool(Iv("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPoolWithArgmax":{const s=Iv("strides",e,t,n),a=Iv("pad",e,t,n),i=Iv("kernelSize",e,t,n),o=Iv("includeBatchInIndex",e,t,n),{result:l,indexes:u}=r.maxPoolWithArgmax(Iv("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a,o);return[l,u]}case"AvgPool3D":{const s=Iv("strides",e,t,n),a=Iv("pad",e,t,n),i=Iv("kernelSize",e,t,n);return[r.avgPool3d(Iv("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"MaxPool3D":{const s=Iv("strides",e,t,n),a=Iv("pad",e,t,n),i=Iv("kernelSize",e,t,n);return[r.maxPool3d(Iv("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"Dilation2D":{const s=Iv("strides",e,t,n),a=Iv("pad",e,t,n),i=Iv("dilations",e,t,n),o=s[1],l=s[2],u=i[1],c=i[2];return[r.dilation2d(Iv("x",e,t,n),Iv("filter",e,t,n),[o,l],a,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return s((()=>((e,t,n,r=A)=>{switch(e.op){case"Fill":{const s=Iv("shape",e,t,n),a=Iv("dtype",e,t,n),i=Iv("value",e,t,n);return[r.fill(s,i,a)]}case"LinSpace":{const s=Iv("start",e,t,n),a=Iv("stop",e,t,n),i=Iv("num",e,t,n);return[r.linspace(s,a,i)]}case"Multinomial":{const s=Iv("logits",e,t,n),a=Iv("numSamples",e,t,n),i=Iv("seed",e,t,n);return[r.multinomial(s,a,i)]}case"OneHot":{const s=Iv("indices",e,t,n),a=Iv("depth",e,t,n),i=Iv("onValue",e,t,n),o=Iv("offValue",e,t,n),l=Iv("dtype",e,t,n);return[r.oneHot(s,a,i,o,l)]}case"Ones":return[r.ones(Iv("shape",e,t,n),Iv("dtype",e,t,n))];case"OnesLike":return[r.onesLike(Iv("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(Iv("shape",e,t,n),Iv("dtype",e,t,n),Iv("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(Iv("shape",e,t,n),Iv("minval",e,t,n),Iv("maxval",e,t,n),Iv("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(Iv("shape",e,t,n),Iv("minval",e,t,n),Iv("maxval",e,t,n),Iv("seed",e,t,n))];case"Range":{const s=Iv("start",e,t,n),a=Iv("stop",e,t,n),i=Iv("step",e,t,n);return[r.range(s,a,i,Iv("dtype",e,t,n))]}case"TruncatedNormal":{const s=Iv("shape",e,t,n),a=Iv("mean",e,t,n),i=Iv("stdDev",e,t,n),o=Iv("seed",e,t,n);return[r.truncatedNormal(s,a,i,Iv("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(Iv("shape",e,t,n),Iv("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(Iv("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n,r,s=A)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=xk(e,t,n),c=await s.image.nonMaxSuppressionWithScoreAsync(r,a,i,o,l,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=xk(e,t,n),u=Iv("padToMaxOutputSize",e,t,n),c=await s.image.nonMaxSuppressionPaddedAsync(r,a,i,o,l,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=xk(e,t,n);return[await s.image.nonMaxSuppressionAsync(r,a,i,o,l)]}case"Where":{const r=s.cast(Iv("condition",e,t,n),"bool"),a=[await s.whereAsync(r)];return r.dispose(),a}case"ListDiff":return s.setdiff1dAsync(Iv("x",e,t,n),Iv("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return s((()=>((e,t,n,r=A)=>{switch(e.op){case"LowerBound":{const s=Iv("sortedSequence",e,t,n),a=Iv("values",e,t,n);return[r.lowerBound(s,a)]}case"TopKV2":{const s=Iv("x",e,t,n),a=Iv("k",e,t,n),i=Iv("sorted",e,t,n),o=r.topk(s,a,i);return[o.values,o.indices]}case"UpperBound":{const s=Iv("sortedSequence",e,t,n),a=Iv("values",e,t,n);return[r.upperBound(s,a)]}case"Unique":{const s=Iv("x",e,t,n),a=r.unique(s);return[a.values,a.indices]}case"UniqueV2":{const s=Iv("x",e,t,n),a=Iv("axis",e,t,n),i=r.unique(s,a);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return s((()=>((e,t,n,r=A)=>{switch(e.op){case"ResizeBilinear":{const s=Iv("images",e,t,n),a=Iv("size",e,t,n),i=Iv("alignCorners",e,t,n),o=Iv("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(s,[a[0],a[1]],i,o)]}case"ResizeNearestNeighbor":{const s=Iv("images",e,t,n),a=Iv("size",e,t,n),i=Iv("alignCorners",e,t,n),o=Iv("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(s,[a[0],a[1]],i,o)]}case"CropAndResize":{const s=Iv("image",e,t,n),a=Iv("boxes",e,t,n),i=Iv("boxInd",e,t,n),o=Iv("cropSize",e,t,n),l=Iv("method",e,t,n),u=Iv("extrapolationValue",e,t,n);return[r.image.cropAndResize(s,a,i,o,l,u)]}case"ImageProjectiveTransformV3":{const s=Iv("images",e,t,n),a=Iv("transforms",e,t,n),i=Iv("outputShape",e,t,n),o=Iv("fillValue",e,t,n),l=Iv("interpolation",e,t,n),u=Iv("fillMode",e,t,n);return[r.image.transform(s,a,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return s((()=>((e,t,n,r=A)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=Iv("default",e,t,n);return[Nv(e.name,t,n)||s];case"Placeholder":return[Nv(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[$v(Iv("x",e,t,n))];case"IdentityN":return Iv("x",e,t,n).map((e=>$v(e)));case"Shape":return[r.tensor1d(Iv("x",e,t,n).shape,"int32")];case"ShapeN":return Iv("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(Iv("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(Iv("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=Iv("x",e,t,n),i=Iv("data",e,t,n),o=Iv("message",e,t,n),l=Iv("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return s((()=>((e,t,n,r=A)=>{switch(e.op){case"Equal":return[r.equal(Iv("a",e,t,n),Iv("b",e,t,n))];case"NotEqual":return[r.notEqual(Iv("a",e,t,n),Iv("b",e,t,n))];case"Greater":return[r.greater(Iv("a",e,t,n),Iv("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(Iv("a",e,t,n),Iv("b",e,t,n))];case"Less":return[r.less(Iv("a",e,t,n),Iv("b",e,t,n))];case"LessEqual":return[r.lessEqual(Iv("a",e,t,n),Iv("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(Iv("a",e,t,n),Iv("b",e,t,n))];case"LogicalNot":return[r.logicalNot(Iv("a",e,t,n))];case"LogicalOr":return[r.logicalOr(Iv("a",e,t,n),Iv("b",e,t,n))];case"Select":case"SelectV2":return[r.where(Iv("condition",e,t,n),Iv("a",e,t,n),Iv("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(Iv("a",e,t,n),Iv("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return s((()=>((e,t,n,r=A)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(Iv("a",e,t,n),Iv("b",e,t,n),Iv("transposeA",e,t,n),Iv("transposeB",e,t,n))];case"Einsum":return[r.einsum(Iv("equation",e,t,n),...Iv("tensors",e,t,n))];case"Transpose":return[r.transpose(Iv("x",e,t,n),Iv("perm",e,t,n))];case"_FusedMatMul":const[s,a]=Iv("fusedOps",e,t,n),i="biasadd"===s,o="prelu"===a,l=Iv("numArgs",e,t,n),u=Iv("leakyreluAlpha",e,t,n);if(i){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=Iv("args",e,t,n);return[r.fused.matMul({a:Iv("a",e,t,n),b:Iv("b",e,t,n),transposeA:Iv("transposeA",e,t,n),transposeB:Iv("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[r.linalg.bandPart(Iv("a",e,t,n),Iv("numLower",e,t,n),Iv("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return s((()=>((e,t,n,r=A)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(Iv("x",e,t,n),Iv("axis",e,t,n),Iv("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(Iv("x",e,t,n),Iv("mean",e,t,n),Iv("variance",e,t,n),Iv("offset",e,t,n),Iv("scale",e,t,n),Iv("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(Iv("x",e,t,n),Iv("radius",e,t,n),Iv("bias",e,t,n),Iv("alpha",e,t,n),Iv("beta",e,t,n))];case"Softmax":return[r.softmax(Iv("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(Iv("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"ragged":return s((()=>((e,t,n,r=A)=>{switch(e.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:a}=r.raggedGather(Iv("paramsNestedSplits",e,t,n),Iv("paramsDenseValues",e,t,n),Iv("indices",e,t,n),Iv("outputRaggedRank",e,t,n));return s.concat(a)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:a}=r.raggedRange(Iv("starts",e,t,n),Iv("limits",e,t,n),Iv("splits",e,t,n));return[s,a]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(Iv("shape",e,t,n),Iv("values",e,t,n),Iv("defaultValue",e,t,n),Iv("rowPartitionTensors",e,t,n),Iv("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return s((()=>((e,t,n,r=A)=>{switch(e.op){case"Max":{const s=Iv("axis",e,t,n),a=Iv("keepDims",e,t,n);return[r.max(Iv("x",e,t,n),s,a)]}case"Mean":{const s=Iv("axis",e,t,n),a=Iv("keepDims",e,t,n);return[r.mean(Iv("x",e,t,n),s,a)]}case"Min":{const s=Iv("axis",e,t,n),a=Iv("keepDims",e,t,n);return[r.min(Iv("x",e,t,n),s,a)]}case"Sum":{const s=Iv("axis",e,t,n),a=Iv("keepDims",e,t,n);return[r.sum(Iv("x",e,t,n),s,a)]}case"All":{const s=Iv("axis",e,t,n),a=Iv("keepDims",e,t,n);return[r.all(Iv("x",e,t,n),s,a)]}case"Any":{const s=Iv("axis",e,t,n),a=Iv("keepDims",e,t,n);return[r.any(Iv("x",e,t,n),s,a)]}case"ArgMax":{const s=Iv("axis",e,t,n);return[r.argMax(Iv("x",e,t,n),s)]}case"ArgMin":{const s=Iv("axis",e,t,n);return[r.argMin(Iv("x",e,t,n),s)]}case"Prod":{const s=Iv("axis",e,t,n),a=Iv("keepDims",e,t,n);return[r.prod(Iv("x",e,t,n),s,a)]}case"Cumprod":{const s=Iv("axis",e,t,n),a=Iv("exclusive",e,t,n),i=Iv("reverse",e,t,n);return[r.cumprod(Iv("x",e,t,n),s,a,i)]}case"Cumsum":{const s=Iv("axis",e,t,n),a=Iv("exclusive",e,t,n),i=Iv("reverse",e,t,n);return[r.cumsum(Iv("x",e,t,n),s,a,i)]}case"Bincount":const s=Iv("x",e,t,n),a=Iv("weights",e,t,n),i=Iv("size",e,t,n);return[r.bincount(s,a,i)];case"DenseBincount":{const s=Iv("x",e,t,n),a=Iv("weights",e,t,n),i=Iv("size",e,t,n),o=Iv("binaryOutput",e,t,n);return[r.denseBincount(s,a,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return s((()=>((e,t,n,r=A)=>{switch(e.op){case"ConcatV2":case"Concat":{const s=Iv("n",e,t,n),a=Iv("axis",e,t,n);let i=Iv("tensors",e,t,n);return i=i.slice(0,s),[r.concat(i,a)]}case"Gather":{const s=Iv("x",e,t,n),a=Iv("indices",e,t,n);return[r.gather(s,r.cast(a,"int32"),0)]}case"GatherV2":{const s=Iv("axis",e,t,n),a=Iv("batchDims",e,t,n),i=Iv("x",e,t,n),o=Iv("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),s,a)]}case"Reverse":{const s=Iv("dims",e,t,n),a=[];for(let e=0;e<s.length;e++)s[e]&&a.push(e);const i=Iv("x",e,t,n);return[r.reverse(i,a)]}case"ReverseV2":{const s=Iv("axis",e,t,n),a=Iv("x",e,t,n);return[r.reverse(a,s)]}case"Slice":{const s=Iv("begin",e,t,n),a=Iv("size",e,t,n);return[r.slice(Iv("x",e,t,n),s,a)]}case"StridedSlice":{const s=Iv("begin",e,t,n),a=Iv("end",e,t,n),i=Iv("strides",e,t,n),o=Iv("beginMask",e,t,n),l=Iv("endMask",e,t,n),u=Iv("ellipsisMask",e,t,n),c=Iv("newAxisMask",e,t,n),h=Iv("shrinkAxisMask",e,t,n),p=Iv("x",e,t,n);return[r.stridedSlice(p,s,a,i,o,l,u,c,h)]}case"Pack":return Aa((()=>{const s=Iv("axis",e,t,n),a=Iv("tensors",e,t,n),i=a[0].shape,o=r.squeeze(a[0]).shape,l=a.map((e=>{const t=ee(e.shape,i);if(!t&&!ee(r.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,i)}));return[r.stack(l,s)]}));case"Unpack":{const s=Iv("axis",e,t,n),a=Iv("tensor",e,t,n);return r.unstack(a,s)}case"Tile":{const s=Iv("reps",e,t,n);return[r.tile(Iv("x",e,t,n),s)]}case"Split":case"SplitV":{const s=Iv("axis",e,t,n),a=Iv("numOrSizeSplits",e,t,n),i=Iv("x",e,t,n);return r.split(i,a,s)}case"ScatterNd":{const s=Iv("indices",e,t,n),a=Iv("values",e,t,n),i=Iv("shape",e,t,n);return[r.scatterND(s,a,i)]}case"GatherNd":{const s=Iv("x",e,t,n),a=Iv("indices",e,t,n);return[r.gatherND(s,a)]}case"SparseToDense":{const s=Iv("sparseIndices",e,t,n),a=Iv("outputShape",e,t,n),i=Iv("sparseValues",e,t,n),o=Iv("defaultValue",e,t,n);return[r.sparseToDense(s,i,a,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}case"TensorScatterUpdate":{const s=Iv("indices",e,t,n),a=Iv("values",e,t,n),i=Iv("tensor",e,t,n);return[r.tensorScatterUpdate(i,s,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return s((()=>((e,t,n,r=A)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:a,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(Iv("indices",e,t,n),Iv("values",e,t,n),Iv("denseShape",e,t,n),Iv("defaultValue",e,t,n));return[s,a,i,o]}case"SparseReshape":{const{outputIndices:s,outputShape:a}=r.sparse.sparseReshape(Iv("inputIndices",e,t,n),Iv("inputShape",e,t,n),Iv("newShape",e,t,n));return[s,a]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(Iv("data",e,t,n),Iv("indices",e,t,n),Iv("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(Iv("data",e,t,n),Iv("indices",e,t,n),Iv("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return s((()=>((e,t,n,r=A)=>{switch(e.op){case"FFT":return[r.fft(Iv("x",e,t,n))];case"IFFT":return[r.ifft(Iv("x",e,t,n))];case"RFFT":return[r.rfft(Iv("x",e,t,n))];case"IRFFT":return[r.irfft(Iv("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return s((()=>((e,t,n,r=A)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(Iv("input",e,t,n),Iv("pattern",e,t,n),Iv("rewrite",e,t,n),Iv("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:s,nGramsSplits:a}=r.string.stringNGrams(Iv("data",e,t,n),Iv("dataSplits",e,t,n),Iv("separator",e,t,n),Iv("nGramWidths",e,t,n),Iv("leftPad",e,t,n),Iv("rightPad",e,t,n),Iv("padWidth",e,t,n),Iv("preserveShortSequences",e,t,n));return[s,a]}case"StringSplit":{const{indices:s,values:a,shape:i}=r.string.stringSplit(Iv("input",e,t,n),Iv("delimiter",e,t,n),Iv("skipEmpty",e,t,n));return[s,a,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(Iv("input",e,t,n),Iv("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return s((()=>((e,t,n,r=A)=>{switch(e.op){case"Cast":return[r.cast(Iv("x",e,t,n),Iv("dtype",e,t,n))];case"ExpandDims":{const s=Iv("axis",e,t,n);return[r.expandDims(Iv("x",e,t,n),s)]}case"Squeeze":{const s=Iv("axis",e,t,n);return[r.squeeze(Iv("x",e,t,n),s)]}case"Reshape":return[r.reshape(Iv("x",e,t,n),Iv("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(Iv("x",e,t,n),Iv("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(Iv("x",e,t,n),Iv("padding",e,t,n),Iv("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(Iv("x",e,t,n),Iv("padding",e,t,n),Iv("constantValue",e,t,n))];case"SpaceToBatchND":{const s=Iv("blockShape",e,t,n),a=Iv("paddings",e,t,n);return[r.spaceToBatchND(Iv("x",e,t,n),s,a)]}case"BatchToSpaceND":{const s=Iv("blockShape",e,t,n),a=Iv("crops",e,t,n);return[r.batchToSpaceND(Iv("x",e,t,n),s,a)]}case"DepthToSpace":{const s=Iv("blockSize",e,t,n),a=Iv("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(Iv("x",e,t,n),s,a)]}case"BroadcastTo":return[r.broadcastTo(Iv("x",e,t,n),Iv("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(Iv("s0",e,t,n),Iv("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(e.name);if(null!=s)return[s];{const s=Iv("keyDType",e,t,n),a=Iv("valueDType",e,t,n),i=new wk(s,a);return r.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=Iv("tableHandle",e,t,n,r),a=Iv("keys",e,t,n),i=Iv("values",e,t,n),o=r.getHashTableById(s.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const s=Iv("tableHandle",e,t,n,r),a=Iv("keys",e,t,n),i=Iv("defaultValue",e,t,n),o=r.getHashTableById(s.id);return[await o.find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=Iv("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=kv(e.op);if(a&&a.customExecutor)return a.customExecutor(new hk(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return Se(a)?a.then((e=>[].concat(e))):[].concat(a)}class kk{constructor(e={},t={},n={},r={},s){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Ik(e,t,n,r){const s=new Set,a=[];let i=null,o=null;const l=new Set,u=new Set(Object.keys(e).map((e=>Ev(e)[0])));r=r||[];const c=new Set(r.map((e=>Ev(e.name)[0]))),h=[...t];for(;h.length>0;){const e=h.pop();(Ek(e)||Tk(e)||$k(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>s.has(e)))),s.add(e.name),null==n[e.name]&&(u.has(e.name)||c.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),h.push(e))})):a.push(e.name)))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:i,syncInputs:o}}class Nk extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}const Ak=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Sk=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Ck=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Ek(e){return Ak.has(e.op)}function Tk(e){return Sk.has(e.op)}function $k(e){return Ck.has(e.op)}class _k{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new _k(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const n=Ik(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map((e=>e.name)),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}const i=function(e,t){const{usedNodes:n,inputs:r}=t,s=Object.keys(r).map((e=>Ev(e)[0])).map((t=>e.nodes[t])),a=e.initNodes||[],i=e=>n.has("string"==typeof e?e:e.name);function o(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const l=o([...s,...e.weights,...a]).filter(i),u=o([...l,...Object.values(e.nodes)]).filter(i),c=new Map(u.map((e=>[e.name,e]))),h={};for(const e of u){h[e.name]=h[e.name]||0;for(const t of e.children)i(t)||(h[t.name]=Number.POSITIVE_INFINITY),h[t.name]=(h[t.name]||0)+1}const p=Object.entries(h).filter((([,e])=>0===e)).map((([e])=>e)),d=[...p];for(;p.length>0;){const e=p.pop(),t=c.get(e);for(const e of t.children.filter(i))0==--h[e.name]&&(d.push(e.name),p.push(e.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),r=t.map((e=>e.name)),s=new Set(r);for(;r.length>0;){const e=r.pop(),t=n.get(e);for(const e of t.children)n.has(e.name)&&!s.has(e.name)&&(s.add(e.name),r.push(e.name))}return e.filter((e=>s.has(e.name)))}(d.map((e=>c.get(e))),l);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),r=new Set(t.map((e=>e.name))),s=e=>r.has("string"==typeof e?e:e.name),a=new Set(e.map((e=>e.name))),i=e=>a.has("string"==typeof e?e:e.name);for(const t of e){for(const e of t.children.filter(i)){if(!n.has(e.name))throw new Nk(`Child ${e.name} of node ${t.name} is unreachable.`);if(n.get(t.name)>n.get(e.name))throw new Nk(`Node ${t.name} is scheduled to run after its child ${e.name}.`)}if(!s(t))for(const e of t.inputs){if(!n.has(e.name))throw new Nk(`Input ${e.name} of node ${t.name} is unreachable.`);if(n.get(e.name)>n.get(t.name))throw new Nk(`Node ${t.name} is scheduled to run before its input ${e.name}.`)}}}(f,l),f}(this.graph,n),o=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,r=e.map(((e,t)=>Ek(e)?n:t)),s=e=>{const n=r[t.get(e.name)];return null==n?-1:n},a=e.map(((e,t)=>e.children.map(s).reduce(((e,t)=>Math.max(e,t)),r[t]))),i=new Map;for(let t=0;t<e.length;++t){const r=a[t];if(r===n)continue;const s=e[t],o=e[r];i.has(o.name)||i.set(o.name,[]),i.get(o.name).push(s)}return i}(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return Ca(t),t}cloneTensorList(e){if(!e)return null;const t=e.map((e=>this.cloneAndKeepTensor(e)));return t}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,this.cloneTensorList(t)])))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[Ev(e)[0]])),s=t.map((e=>Ev(e)[0])),a=new Set(s);let i=s.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const o=this.getCompilationKey(r,i);let l=this.compiledMap.get(o);null==l&&(l=this.compile(e,i),this.compiledMap.set(o,l));try{this.keepIntermediateTensors=$e().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const u={},c={};return Aa((()=>{const n=new kk(this.weightMap,u,c,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[s,a]=Ev(t,n),i=[];i[a]=e[t],r[s]=i,this.keepIntermediateTensors&&(this.clonedTensorsMap[s]=this.cloneTensorList(i))}));const s=this.getFrozenTensorIds(r),{orderedNodes:i,nodeLiveUntilMap:o}=l;for(const e of i){if(r[e.name])continue;const t=vk(e,r,n,this._resourceManager);if(Se(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,s,a,o.get(e.name))}return null==this.parent&&n.dispose(s),t.map((e=>Nv(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,i){if(!Ek(t)&&!a.has(e)){for(const r of n[e])null!=r&&(i[r.id]=(i[r.id]||0)+t.children.length);for(const e of t.inputs){if(Ek(e))continue;const t=Av(e.name,n,r);if(null!=t)for(const e of t){if(!e||e.kept||s.has(e.id))continue;const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,s,a){function i(e){return Ek(e)||s.has(e.name)}if(!Ek(e)&&null!=a)for(const e of a){if(i(e))continue;const s=Av(e.name,t,n);for(const e of s)!e||e.kept||r.has(e.id)||e.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,r={},s={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=$e().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}const a=new kk(this.weightMap,r,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,a,t,n),o=t.map((e=>Nv(e,i,a))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),c=new Set([...l,...u,...this.weightIds]);return Object.values(i).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),a=s.map((e=>this.graph.nodes[Ev(e)[0]])),i=n.map((e=>Ev(e)[0])),o=new Set(i);let l=i.map((e=>this.graph.nodes[e]));0===l.length&&(l=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:h,syncInputs:p}=Ik(e,l,this.weightMap,this._initNodes),d=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=Ev(t),s=[];s[r]=e[t],f[n]=s}));const m={},g=this.getFrozenTensorIds(f),y={};for(;d.length>0;){const e=this.processStack(a,d,t,f,y,g,o,m,u);await Promise.all(e)}null!=h||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=l.filter((e=>!Ek(e)&&!Nv(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${s}]. Consider providing the following inputs: [${c}]. ${e}`)}return f}processStack(e,t,n,r,s,a,i,o,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&Iv("isConstant",e.node,r,n)&&([c]=Sv(e.node.name,n)),null==r[e.node.name]){const h=vk(e.node,r,n,this._resourceManager);c||([c]=Sv(e.node.name,n));const p=n.currentContext;Se(h)?u.push(h.then((u=>(r[c]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(u)),n.currentContext=p,this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,l),u)))):(r[c]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(h)),this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,l))}else this.processChildNodes(e.node,t,n,r,s,l)}return u}processChildNodes(e,t,n,r,s,a){e.children.forEach((e=>{const[i]=Sv(e.name,n);!s[i]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!Nv(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!Nv(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=Ev(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value;Y(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&Y(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;const r={};for(const s in e){const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[s];null!=a?r[a.name]=e[s]:r[s]=e[s]}return r}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=Ev(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;const r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=Ev(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Rk{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class Ok{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t,n={},r=e){this.modelUrl=t,this.loadOptions=n,this.version="n/a",this.io=r,null==n&&(this.loadOptions={}),this.resourceManager=new Rk}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return Se(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await La(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let r=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(r=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=r,this.version=`${n.versions.producer}.${n.versions.minConsumer}`,this.executor=new _k(Yv.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=Yv.Instance.transformGraph(e.modelInitializer);this.initializer=new _k(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t={};return(e instanceof zs?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof zs||Array.isArray(e))){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce(((t,n)=>{var s,a,i;const o=null===(i=null===(a=null===(s=this.signature)||void 0===s?void 0:s.inputs)||void 0===a?void 0:a[n])||void 0===i?void 0:i.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[r++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){const s=t[n[r]];this.resourceIdToCapturedInput[s.resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Sa(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Fk(t,n={},r=e){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==n&&(n={}),n.fromTFHub&&"string"==typeof t&&(t=function(e){return e.endsWith("/")||(e+="/"),`${e}model.json?tfjs-format=file`}(t));const s=new Ok(t,n,r);return await s.load(),s}function Dk(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(zk(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=Dk(e[a],t,n,r);s[a]=i}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function Mk(e,t=Bk){return Lk(e,t)}function Lk(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(zk(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=Lk(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function Bk(e){return null===e?null:zk(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function zk(e){let t=!1;if($e().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(551);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof zs)&&!(e instanceof Promise)&&!t)}function Pk(e){return Dk(e,Wk)}function Wk(e){return e instanceof zs?{value:e.clone(),recurse:!1}:zk(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Vk{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Uk extends Vk{constructor(){super(Uk.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}Uk.INITIAL_CAPACITY=32;class Gk{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Qk(this,e)}filter(e){return new Zk(this,e)}map(e){return new Jk(this,e)}mapAsync(e){return new eI(this,e)}serialMapAsync(e){return new eI(this,e).serial()}flatmap(e){return new nI(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new Yk(this,e,t)}columnMajorBatch(e,t=!0,n=Bk){return this.rowMajorBatch(e,t).map((e=>Mk(e,n)))}concatenate(e,t){return new rI(new jk([this,e]),t)}take(e){return e<0||null==e?this:new Xk(this,e)}skip(e){return e<0||null==e?this:new Kk(this,e)}prefetch(e){return new iI(this,e)}shuffle(e,t){return new oI(this,e,t)}serial(){return new qk(this)}}class jk extends Gk{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:Pk(e),done:!1}}}class Hk extends Gk{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class qk extends Gk{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Kk extends Gk{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Sa(e.value)}return this.upstream.next()}}class Xk extends Gk{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Yk extends Gk{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Zk extends Gk{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Sa(e.value)}}}class Jk extends Gk{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=ea(e.value),n=this.transform(e.value),r=ea(n);for(const e of t)Qs(e,r)||e.dispose();return{value:n,done:!1}}}class Qk extends Gk{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class eI extends Gk{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=ea(e.value),n=await this.transform(e.value),r=ea(n);for(const e of t)Qs(e,r)||e.dispose();return{value:n,done:!1}}}class tI extends Gk{constructor(){super(),this.outputQueue=new Uk,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class nI extends tI{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=ea(e.value),n=this.transform(e.value),r=ea(n);this.outputQueue.pushAll(n);for(const e of t)Qs(e,r)||e.dispose();return!0}}class rI extends Gk{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var sI,aI;(aI=sI||(sI={}))[aI.FAIL=0]="FAIL",aI[aI.SHORTEST=1]="SHORTEST",aI[aI.LONGEST=2]="LONGEST";class iI extends Gk{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Vk(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class oI extends iI{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Uc.alea(n||xs().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class lI{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return Y(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),uI((async()=>(await n.iterator()).columnMajorBatch(e,t,cI)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,uI((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,uI((async()=>(await t.iterator()).filter((t=>Aa((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return uI((async()=>(await t.iterator()).map((t=>Aa((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return uI((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return uI((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,uI((async()=>{return n=(s=async()=>({value:await t.iterator(),done:!1}),new Hk(s)).take(e),new rI(n,r);var n,r,s}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,uI((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Uc.alea(t||xs().toString());return uI((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,uI((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function uI(e,t=null){return new class extends lI{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function cI(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof zs||ks(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof zs?Eh(e):wa(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function hI(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Y("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}lI.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const pI=Kh;class dI extends G{nextDataId(){return dI.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new U(this,Ia())}write(e,t,n){this.firstUse&&(this.firstUse=!1,$e().get("IS_NODE")&&Hr("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&pe(n[0])){const s=n.map((e=>ws(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?Wd(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>vs(e)));return $i(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return $i(e.shape,e.dtype,t)}makeOutput(e,t,n){return Ia().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=xs();return e(),{kernelMs:xs()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){hI([e],"where");const t=this.readSync(e.dataId);return pI(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function fI(e){return(t,n,r)=>{const s=ue(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}function mI(e,t,n){return gI(e,fI(t),n)}function gI(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;hI(i,e);const o=a,l=o.data.get(i.dataId).values;let u;if("string"===i.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=kf(l)}else u=l;const c=n||i.dtype,h=t(u,c,s);return o.makeTensorInfo(i.shape,c,h)}}dI.nextDataId=0,Ea("cpu",(()=>new dI),1);const yI=mI(Rt,(e=>e>=0?e:Math.exp(e)-1)),bI={kernelName:Rt,backendName:"cpu",kernelFunc:yI};function xI(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const wI={kernelName:Xt,backendName:"cpu",kernelFunc:xI};function vI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;hI([s],"leakyRelu");const i=Q(s.shape),o=n.data.get(s.dataId).values,l=le("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",l)}const kI={kernelName:tn,backendName:"cpu",kernelFunc:vI};function II(e){return(t,n,r,s,a)=>{const i=so(t,n),o=i.length,l=ye(i),u=le(a,Q(i)),c=t.length,h=n.length,p=ye(t),d=ye(n),f=no(t,i),m=no(n,i);if(f.length+m.length===0)for(let t=0;t<u.length;++t)u[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<u.length;++t){const n=Ae(t,o,l),a=n.slice(-c);f.forEach((e=>a[e]=0));const i=Ne(a,c,p),g=n.slice(-h);m.forEach((e=>g[e]=0));const y=Ne(g,h,d);u[t]=e(r[i],s[y])}return[u,i]}}const NI=II(((e,t)=>e<0?t*e:e));function AI(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;hI([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,l]=NI(r.shape,s.shape,a,i,"float32");return n.makeTensorInfo(l,"float32",o)}const SI={kernelName:Ln,backendName:"cpu",kernelFunc:AI},CI=mI(jn,(e=>Math.max(0,e))),EI={kernelName:jn,backendName:"cpu",kernelFunc:CI},TI=mI(Zn,(e=>Math.min(Math.max(0,e),6))),$I={kernelName:Zn,backendName:"cpu",kernelFunc:TI},_I=fI((e=>1/(1+Math.exp(-e)))),RI=mI(cr,(e=>1/(1+Math.exp(-e)))),OI={kernelName:cr,backendName:"cpu",kernelFunc:RI};function FI(e,t,n,r,s){if("linear"===n)return xI({inputs:{x:t},backend:e});if("relu"===n)return CI({inputs:{x:t},backend:e});if("elu"===n)return yI({inputs:{x:t},backend:e});if("relu6"===n)return TI({inputs:{x:t},backend:e});if("prelu"===n)return AI({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return vI({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return RI({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function DI(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const MI={kernelName:ot,backendName:"cpu",kernelFunc:DI};function LI(e,t,n="float32"){if("complex64"===n)return DI({inputs:{real:LI(e,t,"float32"),imag:LI(e,t,"float32")},backend:e});const r=ve(Q(t),n);return e.makeTensorInfo(t,n,r)}function BI(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const zI={kernelName:Un,backendName:"cpu",kernelFunc:BI};function PI(e,t,n,r){if("int32"===r)return[t,"int32",Int32Array.from(e)];if("bool"===r){const r=bs([0],n),[s,a]=II(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[a,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function WI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return xI({inputs:{x:s},backend:n});const e=LI(n,s.shape,s.dtype),t=WI({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=DI({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=BI({inputs:{input:s},backend:n}),t=WI({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!ce(s.dtype,a)){const e=xI({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}const i=n.data.get(s.dataId).values,[o,l,u]=PI(i,s.shape,s.dtype,a);return n.makeTensorInfo(o,l,u)}const VI={kernelName:st,backendName:"cpu",kernelFunc:WI};function UI(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a,b:i}=n,o=s;hI([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c="string"===a.dtype?kf(l):l,h="string"===a.dtype?kf(u):u,p=r||a.dtype,[d,f]=t(a.shape,i.shape,c,h,p);return o.makeTensorInfo(f,p,d)}:({inputs:e,backend:s})=>{const{a,b:i}=e,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const e=WI({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(s.dataId).values,c=WI({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(a.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),w=o.makeTensorInfo(b,"float32",y),v=DI({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[l,u]=t(a.shape,i.shape,e,n,s);return o.makeTensorInfo(u,s,l)}}}function GI(e){return(t,n,r,s,a,i)=>{const o=so(t,n),l=Q(o),u=o.length,c=ye(o),h=le("float32",l),p=le("float32",l),d=no(t,o),f=no(n,o),m=Wd(r,s),g=Wd(a,i),y=t.length,b=ye(t),x=n.length,w=ye(n);if(d.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,s=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=s.real,p[t]=s.imag}else for(let t=0;t<h.length;t++){const n=Ae(t,u,c),r=n.slice(-y);d.forEach((e=>r[e]=0));const s=Ne(r,y,b),a=n.slice(-x);f.forEach((e=>a[e]=0));const i=Ne(a,x,w),o=e(m[2*s],m[2*s+1],g[2*i],g[2*i+1]);h[t]=o.real,p[t]=o.imag}return[h,p,o]}}const jI=II(((e,t)=>e+t)),HI=GI(((e,t,n,r)=>({real:e+n,imag:t+r}))),qI=UI(Be,jI,HI),KI={kernelName:Be,backendName:"cpu",kernelFunc:qI};function XI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=Q(s.shape),o=ae(a,i),l=Q(o);Y(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const YI={kernelName:Hn,backendName:"cpu",kernelFunc:XI};function ZI(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;hI([s,a],"matMul");const l=s.shape.length,u=a.shape.length,c=i?s.shape[l-2]:s.shape[l-1],h=o?a.shape[u-1]:a.shape[u-2],p=i?s.shape[l-1]:s.shape[l-2],d=o?a.shape[u-2]:a.shape[u-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=Q(f),y=Q(m),b=so(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,d]);Y(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,d,h]:[y,h,d],w=XI({inputs:{x:s},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),v=XI({inputs:{x:a},backend:n,attrs:{shape:x}}),k=i?w.shape[1]:w.shape[2],I=i?w.shape[2]:w.shape[1],N=o?v.shape[1]:v.shape[2],A=Math.max(g,y),S=n.data.get(w.dataId).values,C=n.data.get(v.dataId).values,E=ye(w.shape),T=ye(v.shape),[$,_,R]=i?[E[0],1,E[1]]:[E[0],E[1],1],[O,F,D]=o?[1,T[1],T[0]]:[T[1],1,T[0]],M=I*N,L=$i([A,I,N],w.dtype),B=L.values,z=n.blockSize;for(let e=0;e<A;e++){const t=e%g,n=e%y;for(let r=0;r<I;r+=z){const s=Math.min(r+z,I);for(let a=0;a<N;a+=z){const i=Math.min(a+z,N);for(let o=0;o<k;o+=z){const l=Math.min(o+z,k);for(let u=r;u<s;u++)for(let r=a;r<i;r++){let s=0;for(let e=o;e<l;e++)s+=S[t*$+u*_+e*R]*C[e*O+r*F+n*D];B[e*M+(u*N+r)]+=s}}}}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(b,L.dtype,L.values)}const JI={kernelName:Qe,backendName:"cpu",kernelFunc:ZI},QI={kernelName:Ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let p,d,f;const m=[];p=ZI({inputs:{a:s,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(d=qI({inputs:{a:p,b:i},backend:n}),m.push(p),p=d),c&&(f=FI(n,p,c,o,h),m.push(p),p=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return p}};function eN(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const tN={kernelName:De,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;hI(t,"abs");let r=new Float32Array(Q(t.shape));return r=eN(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},nN=mI(Me,(e=>Math.acos(e))),rN={kernelName:Me,backendName:"cpu",kernelFunc:nN},sN=mI(Le,(e=>Math.acosh(e))),aN={kernelName:Le,backendName:"cpu",kernelFunc:sN},iN={kernelName:ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;hI(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=$i(r[0].shape,r[0].dtype),i=a.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function oN(e,t,n,r,s){const a=t.length,i=Q(t),o=ye(t),l=ye(s),u=le(n,Q(s));for(let t=0;t<i;++t){const n=Ae(t,a,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];u[Ne(s,a,l)]=e[t]}return u}function lN(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;hI(s,"transpose");const i=s.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=s.shape[a[e]];const l=oN(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const uN={kernelName:Dr,backendName:"cpu",kernelFunc:lN},cN={kernelName:Pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;hI(s,"all");const o=ie(a,s.shape);let l=o;const u=Su(l,s.shape.length);let c=s;null!=u&&(c=lN({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Eu(l.length,s.shape.length)),Au("all",l,c.shape.length);const[h,p]=Iu(c.shape,l),d=Q(p),f=ve(Q(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=XI({inputs:{x:g},backend:n,attrs:{shape:Nu(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},hN={kernelName:We,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;hI(s,"any");const o=ie(a,s.shape);let l=o;const u=Su(l,s.shape.length);let c=s;null!=u&&(c=lN({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Eu(l.length,s.shape.length)),Au("any",l,c.shape.length);const[h,p]=Iu(c.shape,l),d=Q(p),f=ve(Q(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=XI({inputs:{x:g},backend:n,attrs:{shape:Nu(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},pN={kernelName:Ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;hI(s,"argMax");let i=ie(a,s.shape);const o=Su(i,s.shape.length);let l=s;const u=[];null!=o&&(l=lN({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Eu(i.length,l.shape.length)),i=[i[0]],Au("argMax",i,l.shape.length);const[c,h]=Iu(l.shape,i),p=ve(Q(c),"int32"),d=Q(h),f=n.data.get(l.dataId).values;for(let e=0;e<p.length;++e){const t=e*d;let n=f[t],r=0;for(let e=0;e<d;++e){const s=f[t+e];s>n&&(n=s,r=e)}p[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},dN={kernelName:Ue,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;hI(s,"argMin");let i=ie(a,s.shape);const o=Su(i,s.shape.length);let l=s;const u=[];null!=o&&(l=lN({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Eu(i.length,l.shape.length)),i=[i[0]],Au("argMin",i,l.shape.length);const[c,h]=Iu(l.shape,i),p=ve(Q(c),"int32"),d=Q(h),f=n.data.get(l.dataId).values;for(let e=0;e<p.length;++e){const t=e*d;let n=f[t],r=0;for(let e=0;e<d;++e){const s=f[t+e];s<n&&(n=s,r=e)}p[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},fN=mI(Ge,(e=>Math.asin(e))),mN={kernelName:Ge,backendName:"cpu",kernelFunc:fN},gN=mI(je,(e=>Math.asinh(e))),yN={kernelName:je,backendName:"cpu",kernelFunc:gN},bN=mI(He,(e=>Math.atan(e))),xN={kernelName:He,backendName:"cpu",kernelFunc:bN},wN=II(((e,t)=>Math.atan2(e,t))),vN=UI(Ke,wN),kN={kernelName:Ke,backendName:"cpu",kernelFunc:vN},IN=mI(qe,(e=>Math.atanh(e))),NN={kernelName:qe,backendName:"cpu",kernelFunc:IN};function AN(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,d=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=$i(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<s.inChannels;++t)for(let y=0;y<s.outHeight;++y){const w=y*i-p,v=Math.max(0,w),k=Math.min(s.inHeight,c+w),I=n+y*b;for(let n=0;n<s.outWidth;++n){const i=n*o-d,c=Math.max(0,i),p=Math.min(s.inWidth,h+i);let y=f,b=0,w=0;for(let n=v;n<k;n+=l){const s=m+n*r[1];for(let n=c;n<p;n+=u){const i=e[s+n*r[2]+t];"max"===a&&i>y?y=i:"avg"===a&&(b+=i,w++)}if(isNaN(y))break}g[I+n*x+t]="avg"===a?b/w:y}}}return m}function SN(e,t,n,r,s=!1,a=!1){const i=$i(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=$i(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-d;let y=g;for(;y<0;)y+=u;const b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let d=h;for(;d<0;)d+=c;const x=Math.min(r.inWidth,p+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=u){const i=n-g;for(let o=d;o<x;o+=c){const l=o-h,u=m.get(e,n,o,t);u>w&&(w=u,v=s?a?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*p+l)}}i.set(v,e,n,o,t)}}return i}function CN(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,p=s.effectiveFilterDepth,d=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=$i(s.outShape,n),w=x.values,v=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],N=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*v,x=t*r[0];for(let t=0;t<s.inChannels;++t)for(let v=0;v<s.outDepth;++v){const A=v*i-m;let S=A;for(;S<0;)S+=u;const C=Math.min(s.inDepth,p+A),E=n+v*k;for(let n=0;n<s.outHeight;++n){const i=n*o-g;let p=i;for(;p<0;)p+=c;const m=Math.min(s.inHeight,d+i),v=E+n*I;for(let n=0;n<s.outWidth;++n){const i=n*l-y;let o=i;for(;o<0;)o+=h;const d=Math.min(s.inWidth,f+i),g=v+n*N;let k=b,I=0,A=0;for(let n=S;n<C;n+=u){const s=x+n*r[1];for(let n=p;n<m;n+=c){const i=s+n*r[2];for(let n=o;n<d;n+=h){const s=e[i+n*r[3]+t];if("max"===a&&s>k?k=s:"avg"===a&&(I+=s,A++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+t]="avg"===a?I/Math.max(A,1):k}}}}return x}const EN={kernelName:Xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;hI(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;Y(Il(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=dl(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&ee(u.inShape,u.outShape))c=xI({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=ye(s.shape),r=AN(e,s.shape,s.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},TN={kernelName:Ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;hI(s,"avgPool3d");const c=fl(s.shape,a,i,1,o,l,u),h=CN(n.data.get(s.dataId).values,s.shape,s.dtype,ye(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},$N={kernelName:Je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;hI([s,a],"avgPool3DGrad");const c=fl(a.shape,i,o,1,l,u),h=c.strideDepth,p=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=w-1-c.padInfo.front,N=k-1-c.padInfo.left,A=v-1-c.padInfo.top,S=$i(a.shape,"float32"),C=1/(f*m*g),E=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-I,i=r-A,o=s-N;let l=0;for(let n=0;n<w;n+=y){const r=(a+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<v;n+=b){const s=(i+n)/p;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<k;n+=x){const a=(o+n)/d;a<0||a>=c.outWidth||Math.floor(a)!==a||(l+=E.get(e,r,s,a,t))}}}S.set(l*C,e,n,r,s,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},_N={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;hI([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=dl(i.shape,o,l,1,u),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=$i(i.shape,"float32"),k=1/(d*f),I=n.data.get(s.dataId).values,N=$i(s.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-w,a=r-x;let i=0;for(let n=0;n<y;n+=m){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const s=(a+n)/p;s<0||s>=c.outWidth||Math.floor(s)!==s||(i+=N.get(e,r,s,t))}}v.set(i*k,e,n,r,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},RN={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:i,mean:o,variance:l}=t;Y(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Y(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Y(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),hI([s,o,l,a,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(l.dataId).values,d=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=p.length,x=h.length;let w=0,v=0,k=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[w++]+(c[e]-h[v++])*d[k++]/Math.sqrt(p[I++]+u),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};function ON(e,t,n,r,s){const a=Xo(r,t,n),i=Q(n),o=ye(r);if(a){const n=Yo(t,o);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const l=$i(r,s,"string"===s?kf(e):e),u=$i(n,s);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===s?If(u.values):u.values}function FN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;hI(s,"slice");const[o,l]=Zo(s,a,i);Lo(s,o,l);const u=ON(n.data.get(s.dataId).values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const DN={kernelName:ir,backendName:"cpu",kernelFunc:FN},MN={kernelName:et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;hI([s],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),l=Cd(s.shape,a,o),u=Ed(l.length,a.length),c=Td(s.shape,a,o),h=$d(i,a.length),p=_d(c,i,a.length),d=XI({inputs:{x:s},backend:n,attrs:{shape:l}}),f=lN({inputs:{x:d},backend:n,attrs:{perm:u}}),m=XI({inputs:{x:f},backend:n,attrs:{shape:c}}),g=FN({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function LN(e,t,n,r,s){const a=Q(r),i=ve(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(i[r]+=a>0?t[n]:1)}return i}function BN(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],i=$i([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,s),o,a):i.set(i.get(o,a)+1,o,a))}return i}const zN={kernelName:tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=LN(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}},PN=II(((e,t)=>e&t)),WN=UI(nt,PN),VN={kernelName:nt,backendName:"cpu",kernelFunc:WN},UN={kernelName:rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=so(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},GN=fI((e=>Math.ceil(e))),jN=gI(at,GN),HN={kernelName:at,backendName:"cpu",kernelFunc:jN},qN=mI(it,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),KN={kernelName:it,backendName:"cpu",kernelFunc:qN},XN={kernelName:lt,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(Q(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function YN(e,t,n,r){const s=ue(n,Q(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=Q(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?kf(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=a[i++]}r+=e.shape[1]}))}return s}function ZN(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const JN={kernelName:Zt,backendName:"cpu",kernelFunc:ZN};function QN(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=ie(s,t[0].shape)[0];yd(t.map((e=>e.shape)),a);let i=bd(t.map((e=>e.shape)),a);if(0===Q(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>Q(e.shape)>0));if(1===o.length)return xI({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const e=o.map((e=>BI({inputs:{input:e},backend:n}))),t=o.map((e=>ZN({inputs:{input:e},backend:n}))),r=QN({inputs:e,backend:n,attrs:{axis:a}}),s=QN({inputs:t,backend:n,attrs:{axis:a}}),i=DI({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const l=o.map((e=>{const t=Q(e.shape.slice(a));return XI({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=bd(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=YN(u,i,t[0].dtype,c),p=bd(o.map((e=>e.shape)),a),d=n.makeTensorInfo(p,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const eA={kernelName:ut,backendName:"cpu",kernelFunc:QN};function tA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;hI([s,a],"conv2d");const h=Al(l),p=ml(s.shape,a.shape,i,u,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new Ds(p.outShape,s.dtype),v=ye(s.shape),k=ye(a.shape),I=v[0],N=x?v[1]:v[2],A=x?v[2]:1,S=x?1:v[1],C=w.strides[0],E=x?w.strides[1]:w.strides[2],T=x?w.strides[2]:1,$=x?1:w.strides[1],_=n.data.get(s.dataId).values,R=n.data.get(a.dataId).values,O=w.values;for(let e=0;e<p.batchSize;++e){const t=e*I,n=e*C;for(let e=0;e<p.outHeight;++e){const r=n+e*E,s=e*p.strideHeight-b;for(let e=0;e<d;++e){const n=s+e*m;if(n<0||n>=p.inHeight)continue;const a=e*k[0],i=t+n*N;for(let e=0;e<p.outWidth;++e){const t=r+e*T,n=e*p.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=p.inWidth)continue;const s=i+r*A;let o=a+e*k[1];for(let e=0;e<p.inChannels;++e){const n=_[s+e*S];for(let e=0;e<p.outChannels;++e)O[t+e*$]+=n*R[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,O)}const nA={kernelName:ct,backendName:"cpu",kernelFunc:tA},rA={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;hI([s,a],"conv2dBackpropFilter");const h=Al(l),p=ml(s.shape,c,i,1,o,u,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new Ds(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,v=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=new Ds(s.shape,s.dtype,v),N=new Ds(a.shape,a.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((w-e)/d)),n=Math.min(p.outHeight,(p.inHeight+w-e)/d);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((x-r)/f)),a=Math.min(p.outWidth,(p.inWidth+x-r)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let l=0;for(let u=0;u<p.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-w;for(let e=s;e<a;++e){const n=r+e*f-x;l+=y?I.get(u,t,n,i)*N.get(u,c,e,o):I.get(u,i,t,n)*N.get(u,o,c,e)}}b.set(l,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},sA={kernelName:pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;hI([s,a],"conv2dBackpropInput");const h=ye(a.shape),p=ye(s.shape);let d=Al(u);const f=ml(i,a.shape,o,1,l,c,!1,d),m=new Ds(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[x,w,v]=h,{batchSize:k,filterHeight:I,filterWidth:N,inChannels:A,inHeight:S,inWidth:C,outChannels:E,outHeight:T,outWidth:$,strideHeight:_,strideWidth:R}=f;d=f.dataFormat;const O=I-1-f.padInfo.top,F=N-1-f.padInfo.left,D="channelsLast"===d,M=m.strides[0],L=D?m.strides[1]:m.strides[2],B=D?m.strides[2]:1,z=D?1:m.strides[1],P=p[0],W=D?p[1]:p[2],V=D?p[2]:1,U=D?1:p[1];for(let e=0;e<k;++e)for(let t=0;t<A;++t)for(let n=0;n<S;++n){const r=n-O,s=Math.max(0,Math.ceil(r/_)),a=Math.min(T,(I+r)/_);for(let i=0;i<C;++i){const o=i-F,l=Math.max(0,Math.ceil(o/R)),u=Math.min($,(N+o)/R);let c=0;for(let n=s;n<a;++n){const s=n*_-r;for(let r=l;r<u;++r){const a=P*e+W*n+V*r,i=x*(I-1-s)+w*(N-1-(r*R-o))+v*t;for(let e=0;e<E;++e)c+=y[a+U*e]*b[i+e]}}g[M*e+L*n+B*i+z*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},aA={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r;hI([s,a],"conv3d");const u=gl(s.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,w=new Ds(u.outShape,s.dtype),v=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=w.values,N=ye(s.shape),A=ye(a.shape);for(let e=0;e<u.batchSize;++e){const t=e*N[0],n=e*w.strides[0];for(let e=0;e<u.outDepth;++e){const r=n+e*w.strides[1],s=e*u.strideDepth-y;for(let e=0;e<c;++e){const n=s+e*d;if(n<0||n>=u.inDepth)continue;const a=e*A[0],i=t+n*N[1];for(let e=0;e<u.outHeight;++e){const t=r+e*w.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=u.inHeight)continue;const s=a+e*A[1],o=i+r*N[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,r=e*u.strideWidth-b;for(let e=0;e<p;++e){const t=r+e*m;if(t<0||t>=u.inWidth)continue;const a=s+e*A[2],i=o+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=v[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},iA={kernelName:ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r;hI([s,a],"conv3dBackpropFilterV2");const u=ye(s.shape),c=ye(a.shape),h=gl(s.shape,l,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Ds(h.filterShape,"float32"),x=b.values,[w,v,k,I]=b.strides,N=n.data.get(a.dataId).values,[A,S,C,E]=c,T=n.data.get(s.dataId).values,[$,_,R,O]=u,F=h.padInfo.front,D=h.padInfo.left,M=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((F-e)/p)),n=Math.min(h.outDepth,(h.inDepth+F-e)/p),r=e*w;for(let s=0;s<g;++s){const a=Math.max(0,Math.ceil((M-s)/d)),i=Math.min(h.outHeight,(h.inHeight+M-s)/d),o=s*v+r;for(let r=0;r<y;++r){const l=Math.max(0,Math.ceil((D-r)/f)),u=Math.min(h.outWidth,(h.inWidth+D-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*$,y=m*A;for(let m=t;m<n;++m){const t=(e+m*p-F)*_+h,n=m*S+y;for(let e=a;e<i;++e){const a=(s+e*d-M)*R+t,i=e*C+n;for(let e=l;e<u;++e){const t=e*E+i;g+=T[(r+e*f-D)*O+a+o]*N[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},oA={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r;hI([s],"conv3dBackpropInputV2");const u=ye(s.shape),c=ye(a.shape),h=gl(l,a.shape,o,1,i),p=new Ds(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(s.dataId).values,[x,w,v,k]=u,I=n.data.get(a.dataId).values,[N,A,S,C]=c,{batchSize:E,filterDepth:T,filterHeight:$,filterWidth:_,inChannels:R,inDepth:O,inHeight:F,inWidth:D,outChannels:M,outDepth:L,outHeight:B,outWidth:z,strideDepth:P,strideHeight:W,strideWidth:V}=h,U=T-1-h.padInfo.front,G=$-1-h.padInfo.top,j=_-1-h.padInfo.left;for(let e=0;e<E;++e)for(let t=0;t<R;++t)for(let n=0;n<O;++n){const r=n-U,s=Math.max(0,Math.ceil(r/P)),a=Math.min(L,(T+r)/P);for(let i=0;i<F;++i){const o=i-G,l=Math.max(0,Math.ceil(o/W)),u=Math.min(B,($+o)/W);for(let c=0;c<D;++c){const h=c-j,p=Math.max(0,Math.ceil(h/V)),E=Math.min(z,(_+h)/V);let R=0;for(let n=s;n<a;++n){const s=n*P-r;for(let r=l;r<u;++r){const a=r*W-o;for(let i=p;i<E;++i){const o=x*e+w*n+v*r+k*i,l=N*(T-1-s)+A*($-1-a)+S*(_-1-(i*V-h))+C*t;for(let e=0;e<M;++e)R+=b[o+e]*I[l+e]}}}d[f*e+m*n+g*i+y*c+t]=R}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},lA=mI(gt,(e=>Math.cos(e))),uA={kernelName:gt,backendName:"cpu",kernelFunc:lA},cA=mI(yt,(e=>Math.cosh(e))),hA={kernelName:yt,backendName:"cpu",kernelFunc:cA},pA={kernelName:wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[c,h,p,d]=s.shape,f=a.shape[0],[m,g]=o,y=$i([f,m,g,d],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(s.dataId).values,v=ye(s.shape),k=ye(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],s=b[t+2],a=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(s-n)*(h-1)/(m-1):0,f=g>1?(a-r)*(p-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<d;r++){const s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=u}else if("bilinear"===l){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?r*(p-1)+l*f:.5*(r+a)*(p-1);if(c<0||c>p-1){for(let n=0;n<d;n++){const r=n+l*k[2]+t*k[1]+e*k[0];y.values[r]=u}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let r=0;r<d;r++){let a=r+h*v[2]+n*v[1]+i*v[0];const u=w[a];a=r+m*v[2]+n*v[1]+i*v[0];const c=w[a];a=r+h*v[2]+s*v[1]+i*v[0];const p=w[a];a=r+m*v[2]+s*v[1]+i*v[0];const d=u+(c-u)*b,f=p+(w[a]-p)*b;a=r+l*k[2]+t*k[1]+e*k[0],y.values[a]=d+(f-d)*o}}}else for(let n=0;n<g;++n){const s=g>1?r*(p-1)+n*f:.5*(r+a)*(p-1);if(s<0||s>p-1){for(let r=0;r<d;r++){const s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=u}continue}const o=Math.round(s),l=Math.round(c);for(let r=0;r<d;r++){const s=r+o*v[2]+l*v[1]+i*v[0],a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=w[s]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},dA={kernelName:bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;hI(s,"cumprod");const l=Su([a],s.shape.length);let u=s;null!=l&&(u=lN({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=Eu(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Ks(u.dtype,"int32"),p=we(Q(u.shape),h),d=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<d.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)p[n]=i?1:d[n];else{const r=m(e,t-1);p[n]=i?d[r]*p[r]:d[n]*p[r]}}const g=n.makeTensorInfo(u.shape,h,p);if(null!=l){const e=lN({inputs:{x:g},backend:n,attrs:{perm:Cu(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},fA={kernelName:xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;hI(s,"cumsum");const l=Su([a],s.shape.length);let u=s;null!=l&&(u=lN({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=Eu(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Ks(u.dtype,"int32"),p=ve(Q(u.shape),h),d=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<d.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)p[n]=i?0:d[n];else{const r=m(e,t-1);p[n]=i?d[r]+p[r]:d[n]+p[r]}}const g=n.makeTensorInfo(u.shape,h,p);if(null!=l){const e=lN({inputs:{x:g},backend:n,attrs:{perm:Cu(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},mA={kernelName:vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=LN(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=BN(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},gA={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;Y("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],h=l*a,p=u*a,d=c/(a*a),f=n.data.get(s.dataId).values,m=new Float32Array(o*h*p*d);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),r=t%a;for(let t=0;t<p;++t){const s=Math.floor(t/a),i=(r*a+t%a)*d;for(let t=0;t<d;++t){const r=t+i+c*(s+u*(n+l*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,p,d],s.dtype,m)}};function yA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;hI([s,a],"depthwiseConv2DNative");const c=ye(s.shape),h=ye(a.shape);let p=l;null==p&&(p=[1,1]),Y(Il(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const d=ml(s.shape,a.shape,i,p,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,w=b.top,v=d.outChannels/d.inChannels,k=new Ds(d.outShape,s.dtype),I=n.data.get(s.dataId).values,N=n.data.get(a.dataId).values,A=k.values;for(let e=0;e<d.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<d.outHeight;++e){const r=n+e*k.strides[1],s=e*d.strideHeight-w;for(let e=0;e<f;++e){const n=s+e*g;if(n<0||n>=d.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<d.outWidth;++e){const t=r+e*k.strides[2],n=e*d.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=d.inWidth)continue;const s=a+e*h[1],o=i+r*d.inChannels;let l=t,u=s;for(let e=0;e<d.inChannels;++e){const t=I[o+e];for(let e=0;e<v;++e)A[l+e]+=t*N[u+e];l+=v,u+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const bA={kernelName:It,backendName:"cpu",kernelFunc:yA},xA={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;hI([s,a],"depthwiseConv2dNativeBackpropFilter");const h=ml(s.shape,c,i,o,l,u,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new Ds(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(s.dataId).values,v=new Ds(s.shape,s.dtype,w),k=n.data.get(a.dataId).values,I=new Ds(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/p)),n=Math.min(h.outHeight,(h.inHeight+b-e)/p);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((y-r)/d)),a=Math.min(h.outWidth,(h.inWidth+y-r)/d);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),l=i%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-b;for(let e=s;e<a;++e){const n=r+e*d-y;u+=v.get(l,t,n,o)*I.get(l,c,e,i)}}g.set(u,e,r,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},wA={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;hI([s,a],"depthwiseConv2DNativeBackpropInput");const h=ye(s.shape),p=ye(a.shape),d=ml(c,a.shape,i,o,l,u,!0),f=new Ds(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(s.dataId).values,[w,v,k]=h,I=n.data.get(a.dataId).values,[N,A,S]=p,{batchSize:C,filterHeight:E,filterWidth:T,inChannels:$,inHeight:_,inWidth:R,outChannels:O,outHeight:F,outWidth:D,strideHeight:M,strideWidth:L}=d,B=E-1-d.padInfo.top,z=T-1-d.padInfo.left,P=O/$;for(let e=0;e<C;++e)for(let t=0;t<$;++t)for(let n=0;n<_;++n){const r=n-B,s=Math.max(0,Math.ceil(r/M)),a=Math.min(F,(E+r)/M);for(let i=0;i<R;++i){const o=i-z,l=Math.max(0,Math.ceil(o/L)),u=Math.min(D,(T+o)/L);let c=0;for(let n=s;n<a;++n){const s=n*M-r;for(let r=l;r<u;++r){const a=w*e+v*n+k*r,i=N*(E-1-s)+A*(T-1-(r*L-o))+S*t;for(let e=0;e<P;++e)c+=x[a+(t*P+e)]*I[i+e]}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},vA={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=Q(r.shape),a=n.data.get(r.dataId).values,i=$i([s,s],r.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*s+e]=a[e];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},kA={kernelName:Ct,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(s.dataId).values,p=s.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:A,outShape:S}=pl(r.shape,s.shape,a,i,"NHWC",o),C=Q(S),E=S.length,T=ue(r.dtype,C);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*w-x.top;for(let a=0;a<b;++a){const i=a*v-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const a=n+t*N;if(a>=0&&a<f)for(let n=0;n<I;++n){const d=i+n*A;if(d>=0&&d<m){const i=Ne([e,a,d,o],c,ye(r.shape)),f=Ne([t,n,o],p,ye(s.shape)),m=u[i]+h[f];m>l&&(l=m)}}}T[Ne([e,t,a,o],E,ye(S))]=l}}}return{dataId:l.write(bs(T,r.dtype),S,r.dtype),shape:S,dtype:r.dtype}}},IA={kernelName:Tt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=xe(r.shape,u.data.get(r.dataId).values),h=xe(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:A}=pl(r.shape,s.shape,i,o,"NHWC",l);Y(a.rank===A.length,(()=>`Error in ${Tt}, dy must have the same rank as output ${A.length}, but got ${a.rank}`));const S=xe(A,u.data.get(a.dataId).values),C=ke(s.shape,s.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const s=r*w-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<v;++t){const r=n+t*I;if(r>=0&&r<d)for(let n=0;n<k;++n){const u=s+n*N;if(u>=0&&u<f){const s=c[e][r][u][a]+h[t][n][a];s>i&&(i=s,o=t,l=n)}}}C[o][l][a]+=S[e][t][r][a]}}}return{dataId:u.write(bs(C,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},NA={kernelName:Et,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=xe(r.shape,u.data.get(r.dataId).values),h=xe(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:A}=pl(r.shape,s.shape,i,o,"NHWC",l);Y(a.rank===A.length,(()=>`Error in ${Et}, dy must have the same rank as output ${A.length}, but got ${a.rank}`));const S=xe(A,u.data.get(a.dataId).values),C=ke(r.shape,r.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const s=r*w-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=s<0?0:s;for(let t=0;t<v;++t){const r=n+t*I;if(r>=0&&r<d)for(let n=0;n<k;++n){const u=s+n*N;if(u>=0&&u<f){const s=c[e][r][u][a]+h[t][n][a];s>i&&(i=s,o=r,l=u)}}}C[e][o][l][a]+=S[e][t][r][a]}}}return{dataId:u.write(bs(C,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},AA={kernelName:"Draw",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s}=t,{canvas:a,options:i}=r,{contextOptions:o,imageOptions:l}=i||{},u=(null==l?void 0:l.alpha)||1,c=(null==o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=a.getContext(c,(null==o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[p,d]=s.shape.slice(0,2),f=2===s.shape.length?1:s.shape[2],m=n.data.get(s.dataId).values,g="float32"===s.dtype?255:1,y=new Uint8ClampedArray(d*p*4);for(let e=0;e<p*d;++e){const t=[0,0,0,255*u];for(let n=0;n<f;n++){const r=m[e*f+n];if("float32"===s.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===s.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===f?(t[0]=r*g,t[1]=r*g,t[2]=r*g):t[n]=r*g}const n=4*e;y[n+0]=Math.round(t[0]),y[n+1]=Math.round(t[1]),y[n+2]=Math.round(t[2]),y[n+3]=Math.round(t[3])}a.width=d,a.height=p;const b=new ImageData(y,d,p);return h.putImageData(b,0,0),s}},SA=II(((e,t)=>e*t)),CA=GI(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),EA=UI(Sn,SA,CA),TA={kernelName:Sn,backendName:"cpu",kernelFunc:EA};function $A(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;let o;hI(s,"sum"),o="bool"===s.dtype?WI({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):xI({inputs:{x:s},backend:n});const l=o.shape.length,u=ie(a,o.shape),c=Su(u,l);let h=u,p=o;null!=c&&(p=lN({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Eu(h.length,l)),Au("sum",h,p.shape.length);const[d,f]=Iu(p.shape,h);let m=LI(n,d,Ks(p.dtype,"int32"));const g=Q(f),y=n.data.get(m.dataId).values,b=n.data.get(p.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=XI({inputs:{x:m},backend:n,attrs:{shape:Nu(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(p),m}const _A={kernelName:dr,backendName:"cpu",kernelFunc:$A},RA={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:l}=Qd(s,a.length);tf(i.length,l,a);const{path:u,steps:c}=nf(o,l),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=ef(d,l[t]);let s;rf(e)?s=a[t]:(s=lN({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);ee(s.shape,i)||(s=XI({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===p?p=s:(p=EA({inputs:{a:s,b:p},backend:n}),f.push(p))}e<h-1&&(u[e]>=0&&(p=$A({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},OA={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;hI([r,s],"eluGrad");const a=new Float32Array(Q(s.shape)),i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=0?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",a)}},FA=II(((e,t)=>e===t?1:0)),DA=UI(Dt,FA,null,"bool"),MA={kernelName:Dt,backendName:"cpu",kernelFunc:DA},LA=Dd,BA=Md,zA=Ld,PA=Bd,WA=zd,VA=Pd,UA=mI(Ft,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+LA*n);return t*(1-((((VA*r+WA)*r+PA)*r+zA)*r+BA)*r*Math.exp(-n*n))})),GA={kernelName:Ft,backendName:"cpu",kernelFunc:UA},jA=fI((e=>Math.exp(e))),HA=gI(Mt,jA,"float32"),qA={kernelName:Mt,backendName:"cpu",kernelFunc:HA};function KA(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,i=s.shape.length,o=s.shape.slice();let l=a;return a<0&&(Y(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),XI({inputs:{x:s},backend:n,attrs:{shape:o}})}const XA={kernelName:Lt,backendName:"cpu",kernelFunc:KA},YA=fI((e=>Math.expm1(e))),ZA=gI(Bt,YA),JA={kernelName:Bt,backendName:"cpu",kernelFunc:ZA},QA=II(((e,t)=>e/t)),eS=UI($t,QA),tS={kernelName:$t,backendName:"cpu",kernelFunc:eS},nS=II(((e,t)=>e-t)),rS=GI(((e,t,n,r)=>({real:e-n,imag:t-r}))),sS=UI(Tr,nS,rS),aS={kernelName:Tr,backendName:"cpu",kernelFunc:sS};function iS(e,t,n){const r=e.shape,s=r[0],a=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[s,a],c=Q(u),h=le("float32",c),p=le("float32",c);for(let e=0;e<s;e++){const r=FN({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),s=FN({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=DI({inputs:{real:r,imag:s},backend:n}),{real:u,imag:c}=oS(i,t,n),d=Wd(u,c);for(let t=0;t<a;t++){const n=jd(d,t);h[e*a+t]=n.real,p[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const d=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",p),m=DI({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function oS(e,t,n){const r=Q(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if((o=r)&o-1){const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=Kd(s*r,t,n),l=jd(e,r);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),Hd(r,a,i,s)}return r}(Wd(a,i),r,t);return Vd(e)}{const s=lS(a,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),a=n.makeTensorInfo([],"float32",ys(r,"float32")),i=xI({inputs:{x:a},backend:n}),l=tS.kernelFunc({inputs:{a:e,b:a},backend:n}),u=tS.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return s}var o}function lS(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=Wd(e,t),i=n/2,o=Ud(a),l=o.real,u=o.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),p=s.makeTensorInfo(c,"float32",u),d=DI({inputs:{real:h,imag:p},backend:s}),f=Gd(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",g),w=DI({inputs:{real:b,imag:x},backend:s}),v=lS(l,u,i,r,s),k=v.real,I=v.imag,N=[k.length],A=s.makeTensorInfo(N,"float32",k),S=s.makeTensorInfo(N,"float32",I),C=DI({inputs:{real:A,imag:S},backend:s}),E=lS(m,g,i,r,s),T=E.real,$=E.imag,_=[T.length],R=s.makeTensorInfo(_,"float32",T),O=s.makeTensorInfo(_,"float32",$),F=DI({inputs:{real:R,imag:O},backend:s}),D=qd(n,r),M=[D.real.length],L=s.makeTensorInfo(M,"float32",D.real),B=s.makeTensorInfo(M,"float32",D.imag),z=DI({inputs:{real:L,imag:B},backend:s}),P=EA({inputs:{a:z,b:F},backend:s}),W=qI({inputs:{a:C,b:P},backend:s}),V=sS({inputs:{a:C,b:P},backend:s}),U=BI({inputs:{input:W},backend:s}),G=BI({inputs:{input:V},backend:s}),j=ZN({inputs:{input:W},backend:s}),H=ZN({inputs:{input:V},backend:s}),q=QN({inputs:[U,G],backend:s,attrs:{axis:0}}),K=QN({inputs:[j,H],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(A),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(R),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const uS={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=Q(r.shape),a=r.shape[r.shape.length-1],i=XI({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=iS(i,!1,n),l=XI({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function cS(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,i=a||fe(s),o=ue(i,Q(r));return function(e,t,n){e.fill(t)}(o,s),t.makeTensorInfo(r,i,o)}const hS={kernelName:Pt,backendName:"cpu",kernelFunc:cS},pS={kernelName:Wt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=le(r.dtype,Q(r.shape)),[i,o,l,u]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let e=0;e<l;e++){const r=e*u;for(let s=0;s<u;s++){const i=Math.round(l-e-1),o=t+n+r+s;let h=c[o];i>=0&&i<l&&(h=c[t+n+i*u+s]),a[o]=h}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},dS=fI((e=>Math.floor(e))),fS=gI(Vt,dS),mS={kernelName:Vt,backendName:"cpu",kernelFunc:fS},gS=II(((e,t)=>Math.floor(e/t))),yS=UI(Ut,gS,null,"int32"),bS={kernelName:Ut,backendName:"cpu",kernelFunc:yS},xS={kernelName:Gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=tA({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=XI({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=qI({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=qI({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(d){const e=m;if("NCHW"===c&&"prelu"===d&&1===o.shape.length&&1!==o.shape[0]){const e=XI({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=FI(n,m,d,e,f),n.disposeIntermediateTensorInfo(e)}else m=FI(n,m,d,o,f);n.disposeIntermediateTensorInfo(e)}return m}},wS={kernelName:jr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=yA({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=qI({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=FI(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function vS(e,t,n,r,s,a,i,o,l){const u=$i([r,a],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<s;t++){const a=e[n*s+t];c+=a*i[t],r.push(a)}if(c<0||c>=l/a)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<a;e++)u.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return u}const kS={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=Q(r.shape),i=s.shape,o=i[i.length-1],[l,u,c,h]=Rd(r,s);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const p=vS(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,u,o,c,h,r.shape,a);return n.makeTensorInfo(l,r.dtype,p.values)}};function IS(e,t,n){const r=$i(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],i=s[2],o=t.locToIndex([a,i]);s[2]=t.values[o];const l=e.locToIndex(s);0<=l&&l<e.values.length&&(r.values[n]=e.values[l])}return r}const NS={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r;hI([s,a],"gatherV2");const l=ie(i,s.shape)[0],u=n.data.get(a.dataId).values,c=s.shape[l];for(let e=0;e<u.length;++e){const t=u[e];Y(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const p=Q(a.shape),d=vf(s,a,l,h),f=XI({inputs:{x:s},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=XI({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,p/d.batchSize]}}),g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],y=n.bufferSync(m),b=IS(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(d.outputShape,b.dtype,b.values)}},AS=II(((e,t)=>e>t?1:0)),SS=UI(qt,AS,null,"bool"),CS={kernelName:qt,backendName:"cpu",kernelFunc:SS},ES=II(((e,t)=>e>=t?1:0)),TS=UI(Kt,ES,null,"bool"),$S={kernelName:Kt,backendName:"cpu",kernelFunc:TS},_S={kernelName:Yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=Q(r.shape),a=r.shape[r.shape.length-1],i=XI({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=iS(i,!0,n),l=XI({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},RS=mI(Jt,(e=>Number.isFinite(e)?1:0),"bool"),OS={kernelName:Jt,backendName:"cpu",kernelFunc:RS},FS=mI(Qt,(e=>Math.abs(e)===1/0?1:0),"bool"),DS={kernelName:Qt,backendName:"cpu",kernelFunc:FS},MS=mI(en,(e=>Number.isNaN(e)?1:0),"bool"),LS={kernelName:en,backendName:"cpu",kernelFunc:MS},BS=II(((e,t)=>e<t?1:0)),zS=UI(nn,BS,null,"bool"),PS={kernelName:nn,backendName:"cpu",kernelFunc:zS},WS=II(((e,t)=>e<=t?1:0)),VS=UI(rn,WS,null,"bool"),US={kernelName:rn,backendName:"cpu",kernelFunc:VS};function GS(e,t,n){const r=(t-e)/(n-1),s=ve(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const jS={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=GS(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},HS=fI((e=>Math.log(e))),qS=gI(an,HS),KS={kernelName:an,backendName:"cpu",kernelFunc:qS},XS=mI(on,(e=>Math.log1p(e))),YS={kernelName:on,backendName:"cpu",kernelFunc:XS},ZS=II(((e,t)=>e&&t)),JS=UI(ln,ZS,null,"bool"),QS={kernelName:ln,backendName:"cpu",kernelFunc:JS},eC=mI(un,(e=>e?0:1),"bool"),tC={kernelName:un,backendName:"cpu",kernelFunc:eC},nC=II(((e,t)=>e||t)),rC=UI(cn,nC,null,"bool"),sC={kernelName:cn,backendName:"cpu",kernelFunc:rC},aC={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r;hI(s,"LRN");const u=s.shape[3],c=u-1,h=n.data.get(s.dataId).values,p=Q(s.shape),d=new Float32Array(p);function f(e){const t=e%u;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let e=0;e<p;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-l);d[e]=n}return n.makeTensorInfo(s.shape,s.dtype,d)}},iC={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r;hI(i,"LRNGrad");const h=Q(i.shape),p=i.shape[3],d=n.data.get(i.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%p,n=e-t+Math.max(0,t-o),r=e-t+Math.min(p,t+o+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(f[e],2);s=u*s+l;for(let t=n;t<r;t++){let n=-2*u*c*f[t]*m[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=d[e],g[t]+=n}}return n.makeTensorInfo(i.shape,s.dtype,g)}};function oC(e,t,n,r){const s=le(r,Q(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s}function lC(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=n;let l=s.shape;const u=l.length,c=ie(a,l);let h=c;const p=Su(h,u);let d=o.data.get(s.dataId).values;if(null!=p){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[p[t]];d=oN(d,l,s.dtype,p,e),h=Eu(h.length,u),l=e}hI(s,"max"),Au("max",h,u);const[f,m]=Iu(l,h),g=oC(d,Q(m),f,s.dtype),y=o.write(g,f,s.dtype);let b=f;return i&&(b=Nu(f,c)),{dataId:y,shape:b,dtype:s.dtype}}const uC={kernelName:dn,backendName:"cpu",kernelFunc:lC},cC=II(((e,t)=>Math.max(e,t))),hC=UI(fn,cC),pC={kernelName:fn,backendName:"cpu",kernelFunc:hC},dC={kernelName:mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;hI(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;Y(Il(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=dl(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&ee(u.inShape,u.outShape))c=xI({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=ye(s.shape),r=AN(e,s.shape,s.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},fC={kernelName:yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;hI(s,"maxPool3d");const c=fl(s.shape,a,i,1,o,l,u),h=CN(n.data.get(s.dataId).values,s.shape,s.dtype,ye(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},mC={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;hI([s,a],"maxPool3DGrad");const c=fl(a.shape,i,o,1,l,u),h=function(e,t){const n=$i(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-p;let x=b;for(;x<0;)x+=i;const w=Math.min(t.inDepth,u+b);for(let r=0;r<t.outHeight;++r){const u=r*s-d;let p=u;for(;p<0;)p+=o;const v=Math.min(t.inHeight,c+u);for(let s=0;s<t.outWidth;++s){const d=s*a-f;let k=d;for(;k<0;)k+=l;const I=Math.min(t.inWidth,h+d);let N=Number.NEGATIVE_INFINITY,A=-1;for(let t=x;t<w;t+=i){const n=t-b;for(let r=p;r<v;r+=o){const s=r-u;for(let a=k;a<I;a+=l){const i=a-d,o=e.get(m,t,r,a,g);o>=N&&(N=o,A=n*c*h+s*c+i)}}}n.set(A,m,y,r,s,g)}}}return n}(n.bufferSync(a),c),p=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=b-1-c.padInfo.front,k=w-1-c.padInfo.left,I=x-1-c.padInfo.top,N=$i(a.shape,"float32"),A=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-v,i=r-I,o=s-k;let l=0;for(let n=0;n<b;n+=m){const r=(a+n)/p;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let s=0;s<x;s+=g){const a=(i+s)/d;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<w;i+=y){const u=(o+i)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const p=b*x*w-1-h.get(e,r,a,u,t)===n*x*w+s*w+i?1:0;0!==p&&(l+=A.get(e,r,a,u,t)*p)}}}N.set(l,e,n,r,s,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},gC={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;hI([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,p=dl(o.shape,l,u,1,c,h),d=n.data.get(o.dataId).values,f=$i(p.outShape,o.dtype,SN(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,v=w-1-p.padInfo.left,k=x-1-p.padInfo.top,I=$i(o.shape,"float32"),N=n.data.get(s.dataId).values,A=$i(s.shape,"float32",N);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){const s=n-k,a=r-v;let i=0;for(let n=0;n<x;n+=y){const r=(s+n)/m;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let s=0;s<w;s+=b){const o=(a+s)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const l=x*w-1-f.get(e,r,o,t)===n*w+s?1:0;0!==l&&(i+=A.get(e,r,o,t)*l)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},yC={kernelName:xn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;hI(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=dl(r.shape,s,a,[1,1],i),[h,p]=function(e,t,n,r,s){const a=AN(e,0,n,ye(t),s,"max"),i=SN(e,t,n,s,!0,r);return[a.values,i.values]}(u,r.shape,r.dtype,o,c),d=l.write(h,c.outShape,r.dtype),f=l.write(p,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},bC={kernelName:wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=ie(a,s.shape),l=Q(Iu(s.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=WI({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});u.push(h);const p=eS({inputs:{a:h,b:c},backend:n});u.push(p);const d=$A({inputs:{x:p},backend:n,attrs:{axis:a,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},xC={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;hI(s,"min");const o=ie(a,s.shape);let l=o;const u=Su(l,s.shape.length);let c=s;null!=u&&(c=lN({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Eu(l.length,s.shape.length)),Au("min",l,c.shape.length);const[h,p]=Iu(c.shape,l),d=Q(p),f=ve(Q(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=XI({inputs:{x:g},backend:n,attrs:{shape:Nu(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},wC=II(((e,t)=>Math.min(e,t))),vC=UI(kn,wC),kC={kernelName:kn,backendName:"cpu",kernelFunc:vC},IC={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:i}=r;hI(s,"mirrorPad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,p=s.shape.length,d=ye(s.shape),f=Q(o),m=o.length,g=ye(o),y=le(s.dtype,f);for(let e=0;e<f;e++){let t=Ae(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=Ne(t,p,d);y[e]=h[n]}return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},NC=II(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),AC=UI(Nn,NC),SC={kernelName:Nn,backendName:"cpu",kernelFunc:AC};function CC(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=s.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=ie([o],s.shape),u=lC({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Nu(u.shape,l),h=XI({inputs:{x:u},backend:n,attrs:{shape:c}}),p=sS({inputs:{a:s,b:h},backend:n}),d=HA({inputs:{x:p},backend:n}),f=$A({inputs:{x:d},backend:n,attrs:{axis:l,keepDims:!1}}),m=XI({inputs:{x:f},backend:n,attrs:{shape:c}}),g=eS({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const EC={kernelName:gr,backendName:"cpu",kernelFunc:CC},TC={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r;hI(s,"multinomial");const l=o?s:CC({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,p=[u,a],d=ve(Q(p),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=Uc.alea(i.toString()),s=e*a;for(let e=0;e<a;++e){const t=r();d[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){d[s+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",d)}};function $C(e,t,n){const r=ys(-1,n);return SA([],t,r,e,n)}const _C={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;hI(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=$C(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},RC=Tp,OC={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;hI(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=RC(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},FC=$p,DC={kernelName:$n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;hI(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:d}=FC(c,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},MC=_p,LC={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;hI(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,p=i,d=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=MC(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},BC=II(((e,t)=>e!==t?1:0)),zC=UI(En,BC,null,"bool"),PC={kernelName:En,backendName:"cpu",kernelFunc:zC},WC={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:l}=r;hI(s,"oneHot");const u=Q(s.shape),c=new Float32Array(u*i);c.fill(l);const h=n.data.get(s.dataId).values;for(let e=0;e<u;++e)h[e]>=0&&h[e]<i&&(c[e*i+h[e]]=o);return n.makeTensorInfo([...s.shape,i],a,c)}};function VC(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=BI({inputs:{input:r},backend:n}),t=VC({inputs:{x:e},backend:n}),s=ZN({inputs:{input:r},backend:n}),a=VC({inputs:{x:s},backend:n}),i=DI({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return cS({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const UC={kernelName:zr,backendName:"cpu",kernelFunc:VC},GC={kernelName:Rn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=BI({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=ZN({inputs:{input:s},backend:r}),i=VC({inputs:{x:a},backend:r}),o=DI({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return cS({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function jC(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return KA({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{Z(a,e.shape,"All tensors passed to stack must have matching shapes"),Y(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=QN({inputs:t.map((e=>{const t=KA({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const HC={kernelName:Fn,backendName:"cpu",kernelFunc:jC},qC={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;hI(s,"pad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(s.dataId).values,c=Q(s.shape),h=s.shape.length,p=ye(s.shape),d=Q(o),f=o.length,m=ye(o),g=le(s.dtype,d);0!==i&&g.fill(i);for(let e=0;e<c;e++)g[Ne(Ae(e,h,p).map(((e,t)=>e+l[t])),f,m)]=u[e];return{dataId:n.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},KC=II(((e,t)=>Math.pow(e,t))),XC=UI(Mn,KC),YC={kernelName:Mn,backendName:"cpu",kernelFunc:XC};function ZC(e,t,n,r){const[s,a]=Iu(e,r),i=Ks(t,"int32"),o=ve(Q(s),i),l=Q(a);for(let e=0;e<o.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:s,outDtype:i}}const JC={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;hI(s,"prod");const o=s.shape.length,l=ie(a,s.shape),u=Su(l,o);let c=l,h=s;const p=[];null!=u&&(h=lN({inputs:{x:s},backend:n,attrs:{perm:u}}),p.push(h),c=Eu(c.length,o));const d=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=ZC(h.shape,h.dtype,d,c);let y=m;return i&&(y=Nu(m,l)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function QC(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function eE(e,t,n,r,s,a,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const s=Ae(r,t.length,ye(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}}))}(a,i,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const l=r[0],{outSplits:u,valueSlices:c,numValues:h}=function(e,t,n,r){const s=[];let a=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let l=1;for(let e=0;e<t.length-1;++e){l*=t[e];const n=t[e+1];for(let t=1;t<l+1;++t)o[e].push(t*n)}for(let r=0;r<e.length;++r){let i=e[r],l=e[r]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=o[s],t=e[e.length-1]-r[i];for(let e=i;e<l;++e)o[s].push(r[e+1]+t)}i=r[i],l=r[l]}l!==i&&(s.push([i,l]),a+=l-i)}return{outSplits:o,valueSlices:s,numValues:a}}(a,i,e,l),p=function(e){const t=[];for(let n=0;n<e.length;++n){const r=ue("int32",e[n].length);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(u),d=function(e,t,n,r,s){const a=t.slice();a[0]=s;const i=ue(n,Q(a)),o=e.length;return function(e,t,n,r,s,a){const i=QC(t,2)[1],o=QC(a,2)[1];let l=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)s[l*o+t]=e[n*i+t];++l}}(e,t,r,0===o?0:o/t[0],i,a),[i,a]}(n,r,s,c,h);return[p,d[0],d[1]]}const tE={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,l=s.map((e=>n.data.get(e.dataId).values)),u=s.map((e=>e.shape)),c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,[p,d,f]=eE(l,u,c,a.shape,a.dtype,h,i.shape),m=p.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,d);return m.concat([g])}},nE=2147483647;function rE(e,t,n,r,s,a,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,l=0===s.length,u=0===i.length,c=[];o||c.push(t[0]),l||c.push(s[0]),u||c.push(i[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],p=ue("int32",h+1);p[0]=0;for(let t=0;t<h;++t){const n=o?e[0]:e[t],s=l?r[0]:r[t],i=u?a[0]:a[t];if(0===i)throw new Error("Requires delta != 0");let c;if(i>0&&s<n||i<0&&s>n)c=0;else if(c=Math.ceil(Math.abs((s-n)/i)),c>nE)throw new Error(`Requires ((limit - start) / delta) <= ${nE}`);p[t+1]=p[t]+c}const d=ue(n,p[h]);let f=0;for(let t=0;t<h;++t){const n=p[t+1]-p[t];let r=o?e[0]:e[t];const s=u?a[0]:a[t];for(let e=0;e<n;++e)d[f++]=r,r+=s}return[p,d]}const sE={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=rE(i,r.shape,r.dtype,o,s.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}};var aE=xd;class iE{constructor(e,t,n,r,s,a,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=vd(u),this.raggedRank=kd(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===aE.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===aE.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case aE.VALUE_ROWIDS:return iE.getMaxWidthValueRowID(t);case aE.ROW_SPLITS:return iE.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${aE[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let a=1;a<t;++a){const t=e[a];t!==r&&(r=t,s=Math.max(a-n,s),n=a)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return lE(e,n)}calculateOutputSize(e){const t=this.valuesShape;Id(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=wd(this.raggedRank,n,t);r[0]<0&&(r[0]=e);for(let e=1;e<=this.raggedRank;++e)r[e]<0&&(r[e]=this.getMaxWidth(e));return r}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let a=0;for(let e=0;e<r;++e,a+=t)s.push(a);for(let t=r;t<e;++t)s.push(-1);return Y(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,a=[];for(let i=0;i<s-1;++i){const s=e[i+1]-e[i];let o=Math.min(r,s),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)a.push(l),l+=n;for(let e=0;e<s-o;++e)a.push(-1)}if(s>0&&a.length!==e[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,a=[];if(0===s)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];a.push(l);for(let u=1;u<s;++u){const s=e[u];if(s===o)l>=0&&(++i,i<r?l+=n:l=-1);else{if(i=0,o=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);l=t[s]}a.push(l)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,r){const s=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case aE.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,r);case aE.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,r);default:throw new Error(`Unsupported partition type: ${aE[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case aE.FIRST_DIM_SIZE:return e[0];case aE.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case aE.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${aE[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=lE(t,!1),s=ue(this.valuesDType,Q(r));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)a=this.calculateOutputIndex(e-1,a,n[e],t[e]);this.setOutput(this.raggedRank,a,s,r)}return[r,s]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,a=n;let i=r.slice();i=i.slice(e+1);const o=Q(i),l=t.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const e=this.defaultValueShape;Aa((()=>{const t=Cl(u,e),n=Gl(t,i);u=n.dataSync()}))}let c=0,h=0,p=0;for(let e=0;e<=l;++e){let r=e<l?t[e]:-1;if(r!==p){if(h<p){const e=s.subarray(c*o);oE(a.subarray(h*o),e,(p-h)*o)}if(e>=l){const e=n.length;r=Math.floor(e/o)}if(r>p)if(1===this.defaultValue.length)a.subarray(p*o,r*o).fill(this.defaultValue[0]),p=r;else for(;r>p;)oE(a.slice(p*o),u,o),++p;r<0?(c=e+1,h=p):(c=e,h=p,p=h+1)}else++p}}}function oE(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function lE(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function uE(e,t,n,r,s,a,i,o,l,u){return new iE(e,t,n,r,s,a,i,o,l,u).compute()}const cE={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,p=o.map((e=>n.data.get(e.dataId).values)),d=o.map((e=>e.shape)),[f,m]=uE(u,s.shape,c,a.shape,a.dtype,h,i.shape,p,d,l);return n.makeTensorInfo(f,a.dtype,m)}};function hE(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return ve(0,r);const s=ve(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const pE={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=hE(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},dE=mI(Gn,(e=>1/e)),fE={kernelName:Gn,backendName:"cpu",kernelFunc:dE},mE={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;hI(s,"resizeBilinear");const l=ye(s.shape),[u,c]=o,[h,p,d,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(Q([h,u,c,f])),y=[a&&u>1?p-1:p,a&&c>1?d-1:d],b=[a&&u>1?u-1:u,a&&c>1?c-1:c];let x=0;const w=y[0]/b[0],v=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),s=n-r,a=Math.min(p-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+a*l[1];for(let e=0;e<c;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(d-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],p=o+a*l[2],y=u+a*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],a=t+(m[p+e]-t)*r,i=a+(n+(m[y+e]-n)*r-a)*s;g[x++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},gE={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;hI([a,s],"resizeBilinearGrad");const o=ye(s.shape),[l,u,c,h]=s.shape,[,p,d]=a.shape,f=new Float32Array(l*u*c*h),m=[i&&p>1?u-1:u,i&&d>1?c-1:c],g=[i&&p>1?p-1:p,i&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let w=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<p;e++){const n=e*y,r=Math.floor(n),s=Math.min(Math.ceil(n),u-1),a=t+r*o[1],i=t+s*o[1],l=n-r,p=1-l;for(let e=0;e<d;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,u=1-s,d=a+n*o[2],m=a+r*o[2],g=i+n*o[2],y=i+r*o[2],v=p*u,k=p*s,I=l*u,N=l*s;for(let e=0;e<h;e++){const t=x[w++];f[d+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*N}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},yE={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;hI(s,"resizeNearestNeighbor");const l=ye(s.shape),[u,c]=o,[h,p,d,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(h*u*c*f),y=[a&&u>1?p-1:p,a&&c>1?d-1:d],b=[a&&u>1?u-1:u,a&&c>1?c-1:c],x=y[0]/b[0],w=y[1]/b[1];let v=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=i?x*(e+.5):x*e;let r=Math.min(p-1,a?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const s=t+r*l[1];for(let e=0;e<c;e++){const t=i?w*(e+.5):w*e;let n=Math.min(d-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=s+n*l[2];for(let e=0;e<f;e++){const t=m[r+e];g[v++]=t}}}}return n.makeTensorInfo([h,u,c,f],s.dtype,g)}},bE={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;hI([a,s],"resizeNearestNeighborGrad");const o=ye(s.shape),l=ye(a.shape),[u,c,h,p]=s.shape,[,d,f]=a.shape,m=new Float32Array(u*c*h*p),g=n.data.get(a.dataId).values,y=[i&&d>1?c-1:c,i&&f>1?h-1:h],b=[i&&d>1?d-1:d,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,I=2*Math.ceil(v)+2,N=2*Math.ceil(k)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*v),s=Math.floor(r-I/2);for(let r=0;r<h;r++){const a=n+r*o[2],u=Math.floor(r*k),y=Math.floor(u-N/2);for(let n=0;n<p;n++){let o=0;for(let a=0;a<I;a++){const u=a+s;if(u<0||u>=d)continue;const p=t+u*l[1],m=u*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<N;e++){const t=e+y;if(t<0||t>=f)continue;const s=p+t*l[2],a=t*w;r===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[s+n])}}m[a+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}},xE={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;hI(s,"reverse");const i=s.shape.length,o=ie(a,s.shape);if(0===i)return xI({inputs:{x:s},backend:n});const l=new Ds(s.shape,s.dtype),u=n.bufferSync(s);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=s.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},wE={kernelName:Vr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,l=le(r.dtype,Q(r.shape)),[u,c,h,p]=r.shape,[d,f]=Sd(i,c,h),m=Math.sin(s),g=Math.cos(s),y=o.data.get(r.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*p;for(let e=0;e<c;e++){const n=e*(h*p);for(let r=0;r<h;r++){const s=r*p;for(let i=0;i<p;i++){const o=[u,e,r,i],b=o[2],x=o[1];let w=(b-d)*g-(x-f)*m,v=(b-d)*m+(x-f)*g;w=Math.round(w+d),v=Math.round(v+f);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),w>=0&&w<h&&v>=0&&v<c&&(k=y[t+v*(h*p)+w*p+i]),l[t+n+s+i]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},vE=mI(Qn,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),kE={kernelName:Qn,backendName:"cpu",kernelFunc:vE},IE=fI((e=>1/Math.sqrt(e))),NE=gI(er,IE),AE={kernelName:er,backendName:"cpu",kernelFunc:NE};function SE(e,t,n,r,s,a,i,o,l,u){const c=[r/s,s],h=e.values,p=t.values;if(0===r)return $i(n,t.dtype);const d=l instanceof Ds?l:$i(c,t.dtype);"string"==typeof l||"number"==typeof l?d.values.fill(l):"boolean"==typeof l&&d.values.fill(+l);for(let e=0;e<a;e++){const a=[];let l=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),l+=n*o[t]}if(l<0||l>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)u?d.values[l*s+n]+=p[e*s+n]:d.values[l*s+n]=0===t.rank?p[0]:p[e*s+n]}return d}const CE={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=zh(0,s,i),p=SE(n.bufferSync(s),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}};function EE(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function TE(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}const $E={kernelName:rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=function(e,t,n,r,s,a){const i=ue("int32",n*s);for(let o=0;o<n;++o){const n=e.slice(o*r,(o+1)*r),l=o*s;for(let e=0;e<s;++e)i[l+e]="left"===a?EE(n,t[e+l]):TE(n,t[e+l])}return i}(n.data.get(s.dataId).values,n.data.get(a.dataId).values,s.shape[0],s.shape[1],a.shape[1],i);return n.makeTensorInfo(a.shape,"int32",o)}},_E={kernelName:sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;hI([r,s,a],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=Ks(s.dtype,a.dtype),h=ve(Q(s.shape),c);let p=0;const d=0===i||i>1||1===s.shape.length?1:Q(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<d;t++)1===o[e]?h[p++]=l[e]:h[p++]=u[e];return n.makeTensorInfo(s.shape,c,h)}},RE=Od,OE=Fd,FE=mI(ar,(e=>e>=0?OE*e:RE*(Math.exp(e)-1))),DE={kernelName:ar,backendName:"cpu",kernelFunc:FE},ME=mI(ur,(e=>e<0?-1:e>0?1:0)),LE={kernelName:ur,backendName:"cpu",kernelFunc:ME},BE=mI(or,(e=>Math.sin(e))),zE={kernelName:or,backendName:"cpu",kernelFunc:BE},PE=mI(lr,(e=>Math.sinh(e))),WE={kernelName:lr,backendName:"cpu",kernelFunc:PE},VE=Math.log(1.1920928955078125e-7)+2,UE=mI(hr,(e=>{const t=e>-VE,n=e<VE,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),GE={kernelName:hr,backendName:"cpu",kernelFunc:UE},jE={kernelName:fr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;hI([s],"spaceToBatchND");const o=Q(a),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<s.shape.length;++e)l.push([0,0]);const u=qC.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=Cd(u.shape,a,o,!1),h=Ed(c.length,a.length,!1),p=Td(u.shape,a,o,!1),d=XI({inputs:{x:u},backend:n,attrs:{shape:c}}),f=lN({inputs:{x:d},backend:n,attrs:{perm:h}}),m=XI({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};function HE(e,t,n,r,s,a,i){const o=t[0],l=a[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(of(o));return[ue(n,0),[0,h],ue(s,0),u,c]}let p=!0,d=0;const f=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(lf(t,n));if(n>=l)throw new Error(uf(t,n,l));++f[n],p=p&&n>=d,d=n}let m=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&p){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],a=ue(n,t*h),p=ue(s,t),d=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h],s=d[n],i=(0===n?0:f[n-1])+s;d[n]++;for(let n=0;n<h;++n)a[i*h+n]=e[t*h+n];p[i]=r[t],c[t]=i}for(let e=0;e<l;++e)if(0===d[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;p[t]=i}return[a,[t,h],p,u,c]}}const qE={kernelName:yr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,p,d,f,m]=HE(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],s.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function KE(e,t,n,r,s){const a=Q(r),i=t[0],o=s.length,l=[];let u=1,c=-1;for(let e=0;e<o;++e){const t=s[e];if(-1===t){if(-1!==c)throw new Error(cf(c,e));c=e,l.push(1)}else{if(t<0)throw new Error(hf(e,t));u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/u);if(u*e!==a)throw new Error(df(r,l));l[c]=e}if(Q(l)!==a)throw new Error(ff(r,l));const h=r.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}const d=[];if(o>0){d[o-1]=1;for(let e=o-2;e>=0;--e)d[e]=d[e+1]*l[e+1]}const f=ue(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*p[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/d[e]),n%=d[e]}return[f,[i,o],l]}const XE={kernelName:br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,h]=KE(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};function YE(e,t,n,r,s,a=!1,i=0){const o=r.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?s[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const p=ue(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&p.fill(i),[p,h];if(c<=0)throw new Error("segment ids must be >= 0");let d=0,f=1,m=0,g=s[d];for(;;){let t=0;if(f<o){if(t=s[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(yf(g,c));g>m&&p.fill(i,m*u,g*u);for(let t=d;t<f;++t){const n=r[t];if(n<0||n>=l[0])throw new Error(bf(t,r[t],l[0]));for(let t=0;t<u;t++)p[g*u+t]+=e[n*u+t]}if(a)for(let e=0;e<u;e++)p[g*u+e]/=f-d;if(d=f,++f,m=g+1,g=t,f>o)break}return m<c&&p.fill(i,m*u,c*u),[p,h]}const ZE={kernelName:xr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=YE(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},JE={kernelName:wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=YE(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},QE={kernelName:vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:p}=zh(0,s,o),d=!1,f=n.bufferSync(s);let m;switch(a.dtype){case"bool":m=SE(f,n.bufferSync(a),o,p,c,u,l,h,Boolean(n.data.get(i.dataId).values[0]),d);break;case"float32":case"int32":m=SE(f,n.bufferSync(a),o,p,c,u,l,h,n.data.get(i.dataId).values[0],d);break;case"string":m=SE(f,n.bufferSync(a),o,p,c,u,l,h,vs(n.data.get(i.dataId).values[0]),d);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}},eT={kernelName:mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=ie(i,s.shape)[0],l=af(s,a,o),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const r=FN({inputs:{x:s},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},tT=fI((e=>Math.sqrt(e))),nT=mI(pr,(e=>Math.sqrt(e))),rT={kernelName:pr,backendName:"cpu",kernelFunc:nT},sT={kernelName:Ir,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;hI(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];a[e]=t*t}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},aT=II(((e,t)=>{const n=e-t;return n*n})),iT=UI(kr,aT),oT={kernelName:kr,backendName:"cpu",kernelFunc:iT},lT=fI(((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:s}=t;return e.replace(new RegExp(n,r?"g":""),s)})),uT=gI(Nr,lT),cT={kernelName:Nr,backendName:"cpu",kernelFunc:uT},hT=mI(Pr,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),pT={kernelName:Pr,backendName:"cpu",kernelFunc:hT};function dT(e,t,n,r){const s=$i(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+r[e];s.set(t.get(...i),...a)}return s}const fT={kernelName:Ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r;hI(s,"stridedSlice");const{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=Jo(s.shape,a,i,o,l,u,c,h,p);let v;if(m)v=XI({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){Y(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=zo(b,x,w),t=FN({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});v=XI({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=dT(d,n.bufferSync(s),w,b);v=n.makeTensorInfo(f,e.dtype,e.values)}return v}};class mT{constructor(e,t,n,r,s,a){this.separator=ws(e),this.nGramWidths=t,this.leftPad=ws(n),this.rightPad=ws(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let i=0;i<s;++i){const o=this.getPadWidth(a),l=Math.max(0,o-i),u=Math.max(0,o-(s-(i+1))),c=a-(l+u),h=t+(l>0?0:i-o);let p=0;p+=l*this.leftPad.length;for(let t=0;t<c;++t)p+=e[h+t].length;p+=u*this.rightPad.length,p+=(l+u+c-1)*this.separator.length,n[r+i]=new Uint8Array(p);const d=n[r+i];let f=0;const m=e=>e.forEach((e=>d[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,a=ue("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=s;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),a[e]=a[e-1]+r}const i=new Array(a[s]);for(let n=0;n<s;++n){const r=t[n];let s=a[n];if(this.nGramWidths.forEach((a=>{const o=t[n+1]-t[n],l=this.getNumNGrams(o,a);this.createNGrams(e,r,i,s,l,a),s+=l})),this.preserveShort&&s===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const o=a+2*this.padWidth,l=1;this.createNGrams(e,r,i,s,l,o)}}return[i,a]}}function gT(e,t,n,r,s,a,i,o){return new mT(n,r,s,a,i,o).compute(e,t)}const yT={kernelName:Sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,p=n.data.get(c.dataId).values,d=n.data.get(h.dataId).values,[f,m]=gT(p,d,s,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function bT(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||r.push(t),a=(e=e.subarray(a+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}}function xT(e,t,n){const r=e.length,s=[];let a=0,i=0;const o=new Array(r);for(let l=0;l<r;++l){const r=s.length;bT(e[l],t,n,s);const u=s.length-r;o[l]=u,a+=u,i=Math.max(i,u)}const l=ue("int32",2*a),u=new Array(a),c=[r,i];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=s[h],++h;return[l,u,c]}const wT={kernelName:Cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,h]=xT(o,l,s),p=c.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function vT(e,t){const n=ue("int32",e.length);for(let r=0;r<e.length;++r)n[r]=gs(e[r]).modulo(t).getLowBitsUnsigned();return n}const kT={kernelName:Er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=vT(n.data.get(a.dataId).values,s);return n.makeTensorInfo(a.shape,"int32",i)}},IT=mI($r,(e=>Math.tan(e))),NT={kernelName:$r,backendName:"cpu",kernelFunc:IT},AT=mI(_r,(e=>Math.tanh(e))),ST={kernelName:nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:r,indices:s,updates:a}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:c}=zh(0,s,r.shape),h=n.bufferSync(s),p=n.bufferSync(a),d=n.bufferSync(r),f=SE(h,p,r.shape,c,l,o,i,u,d,!1);return n.makeTensorInfo(r.shape,f.dtype,f.values)}};function CT(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=$i(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}const ET={kernelName:Rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;hI(s,"tile");const i=CT(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},TT=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function $T(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,a=t-n+1,i=Math.log(s),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(s-o)/s)*Math.sign(a-s/2);$T(e,t,Math.max(n,Math.floor(t-a*o/s+l)),Math.min(r,Math.floor(t+(s-a)*o/s+l)))}const s=e[t];let a=n,i=r;for(X(e,n,t),TT(e[r],s)>0&&X(e,n,r);a<i;){for(X(e,a,i),a++,i--;TT(e[a],s)<0;)a+=1;for(;TT(e[i],s)>0;)i-=1}0===TT(e[n],s)?X(e,n,i):(i+=1,X(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function _T(e,t,n,r,s){const a=t[t.length-1],[i,o]=[e.length/a,a],l=le(n,i*r),u=le("int32",i*r);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o);let i=new Array(a.length);a.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&($T(i,r),i=i.slice(0,r)),s&&i.sort(TT);const c=t*r,h=l.subarray(c,c+r),p=u.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=i[e].value,p[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[$i(c,n,l),$i(c,"int32",u)]}const RT={kernelName:Or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;hI(s,"topk");const o=n.data.get(s.dataId).values,[l,u]=_T(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},OT={kernelName:Fr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,p,d]=s.shape,[f,m]=null!=u?u:[h,p],g=[c,f,m,d],y=ye(s.shape),b=y[0],x=y[1],w=y[2],v=ye(g),k=v[0],I=v[1],N=v[2],A=le(s.dtype,Q(g));A.fill(l);const S=r.data.get(s.dataId).values,C=r.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?C:C.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let s=0;s<d;++s){let a;const u=t[6]*r+t[7]*n+1;if(0===u)continue;const c=(t[0]*r+t[1]*n+t[2])/u,d=(t[3]*r+t[4]*n+t[5])/u,f=FT(c,p,o),m=FT(d,h,o);switch(i){case"nearest":a=MT(S,h,p,b,x,w,e,m,f,s,l);break;case"bilinear":a=LT(S,h,p,b,x,w,e,m,f,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}A[e*k+n*I+r*N+s]=a}return r.makeTensorInfo(g,s.dtype,A)}return{dataId:r.write(A,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function FT(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return q(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return q(0,n,t-1)}(e,t);case"nearest":return function(e,t){return q(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function DT(e,t,n,r,s,a,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*s+l*a+u]:c}function MT(e,t,n,r,s,a,i,o,l,u,c){return DT(e,t,n,r,s,a,i,Math.round(o),Math.round(l),u,c)}function LT(e,t,n,r,s,a,i,o,l,u,c){const h=Math.floor(o),p=Math.floor(l),d=h+1,f=p+1;return(d-o)*((f-l)*DT(e,t,n,r,s,a,i,h,p,u,c)+(l-p)*DT(e,t,n,r,s,a,i,h,f,u,c))+(o-h)*((f-l)*DT(e,t,n,r,s,a,i,d,p,u,c)+(l-p)*DT(e,t,n,r,s,a,i,d,f,u,c))}function BT(e,t,n,r){const s=ie(t,n)[0],a=[1,n[0],1];for(let e=0;e<s;e++)a[0]*=n[e];a[1]=n[s];for(let e=s+1;e<n.length;e++)a[2]*=n[e];const i=new Map,o=new Int32Array(n[s]),l=new Ds(a,r,e),u=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(l.get(n,t,r));n=e.join(",")}const r=i.get(n);if(null!=r)o[t]=r;else{const e=i.size;i.set(n,e),o[t]=e,u.push(t)}}const h=a.slice();h[1]=i.size;const p=new Ds(h,r);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)p.set(l.get(n,e,r),n,t,r)}));const d=n.slice();return d[s]=h[1],{outputValues:p.values,outputShape:d,indices:o}}const zT={kernelName:Mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;hI(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=BT(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},PT={kernelName:Lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],l=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==a&&(l[u++]=s.shape[e]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const p=new Array(o);for(let e=0;e<p.length;e++){c[a]=e;const t=FN({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});p[e]=XI({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return p}},WT={kernelName:Br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r;hI(s,"unsortedSegmentSum");const o=[],l=[],u=s.shape.length-a.shape.length;let c=a;for(let e=0;e<u;++e){const t=KA({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<i;++e){const t=ys(e,"int32"),r=n.makeTensorInfo([],"int32",t),a=DA({inputs:{a:r,b:c},backend:n}),i=WI({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=EA({inputs:{a:i,b:s},backend:n}),h=$A({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(r),l.push(a),l.push(i),l.push(u),l.push(h)}const h=jC({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},VT=[QI,tN,rN,aN,KI,iN,cN,hN,pN,dN,mN,yN,xN,kN,NN,EN,TN,$N,_N,JI,RN,MN,zN,VN,UN,VI,HN,KN,MI,XN,eA,nA,rA,sA,aA,iA,oA,uA,hA,pA,dA,fA,mA,gA,bA,xA,wA,vA,kA,IA,NA,AA,RA,bI,OA,MA,GA,qA,XA,JA,uS,hS,pS,mS,bS,xS,wS,kS,NS,CS,$S,wI,_S,JN,OS,DS,LS,kI,PS,US,jS,KS,YS,QS,tC,sC,aC,iC,uC,pC,dC,fC,mC,gC,yC,bC,xC,kC,IC,SC,TC,TA,_C,OC,DC,LC,PC,WC,GC,HC,qC,YC,SI,JC,tE,sE,cE,pE,zI,tS,fE,EI,$I,YI,mE,gE,yE,bE,xE,wE,kE,AE,CE,$E,_E,DE,OI,LE,zE,WE,DN,EC,GE,jE,qE,XE,ZE,JE,QE,eT,rT,sT,oT,cT,pT,fT,yT,wT,kT,aS,_A,NT,{kernelName:_r,backendName:"cpu",kernelFunc:AT},ST,ET,RT,OT,uN,zT,PT,WT,UC];for(const e of VT)Qr(e);const UT={},GT={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function jT(e,t){if(!(e in UT)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if($e().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==e){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete UT[e]}),!1),$e().getBool("SOFTWARE_WEBGL_ENABLED")&&(GT.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",GT)||n.getContext("experimental-webgl",GT):n.getContext("webgl2",GT)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;UT[e]=n}const n=UT[e];return null==n||n.isContextLost()?(delete UT[e],jT(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),UT[e])}var HT,qT,KT;function XT(e,t){return[t,e]}function YT(e){const t=Q(e);return ne(Math.ceil(t/4))}function ZT(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function JT(e,t){const n=e;let r,s,a,i,o,l,u,c,h,p;return 2===$e().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function QT(e,t){const n=t();return $e().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function e$(e){return!!($e().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function t$(e,t){return c$(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(HT||(HT={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(qT||(qT={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(KT||(KT={}));const n$=/ERROR: [0-9]+:([0-9]+):/g;function r$(e,t){const n=n$.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,i=s.map(((e,t)=>re((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const l=i.slice(0,r-1),u=i.slice(r-1,r),c=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${re(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function s$(e,t){if(QT(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function a$(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(QT(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),QT(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i))),QT(e,(()=>e.enableVertexAttribArray(o))),!0)}function i$(e,t,n,r){QT(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),QT(e,(()=>e.activeTexture(e.TEXTURE0+n))),QT(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),QT(e,(()=>e.uniform1i(n,r)))}function o$(e,t,n){QT(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),QT(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function l$(e,t){QT(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),QT(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function u$(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function c$(e,t,n){const r=QT(e,(()=>t()));if(null==r)throw new Error(n);return r}function h$(e,t=2){return Q(e.slice(0,e.length-t))}function p$(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function d$(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[h$(e),...p$(e)]),t}function f$(e){return e%2==0}function m$(e,t){if(ee(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(f$(n)&&f$(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&f$(e[0])&&f$(t[0])}let g$,y$;function b$(e,t){return null!=e.getExtension(t)}function x$(e){try{if(null!=jT(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function w$(e){const t=JT(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function v$(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&Y("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const k$=$e();function I$(){let e,t,n,r,s,a,i,o,l,u;return 2===$e().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o=$e().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function N$(e,t,n="index"){const r=ye(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function A$(e,t,n="index"){const r=ye(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / outShapeStrides[${s}]; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`)).join("")}function S$(e){const t=ye(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}k$.registerFlag("HAS_WEBGL",(()=>k$.getNumber("WEBGL_VERSION")>0)),k$.registerFlag("WEBGL_VERSION",(()=>x$(2)?2:x$(1)?1:0)),k$.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),k$.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===k$.get("WEBGL_VERSION"))),k$.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),k$.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),k$.registerFlag("WEBGL_PACK",(()=>k$.getBool("HAS_WEBGL"))),k$.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>k$.getBool("WEBGL_PACK"))),k$.registerFlag("WEBGL_PACK_CLIP",(()=>k$.getBool("WEBGL_PACK"))),k$.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>k$.getBool("WEBGL_PACK"))),k$.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>k$.getBool("WEBGL_PACK"))),k$.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>k$.getBool("WEBGL_PACK"))),k$.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>k$.getBool("WEBGL_PACK"))),k$.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>k$.getBool("WEBGL_PACK"))),k$.registerFlag("WEBGL_PACK_REDUCE",(()=>k$.getBool("WEBGL_PACK"))),k$.registerFlag("WEBGL_LAZILY_UNPACK",(()=>k$.getBool("WEBGL_PACK"))),k$.registerFlag("WEBGL_CONV_IM2COL",(()=>k$.getBool("WEBGL_PACK"))),k$.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>k$.getBool("WEBGL_PACK"))),k$.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==g$){const t=jT(e);g$=t.getParameter(t.MAX_TEXTURE_SIZE)}return g$}(k$.getNumber("WEBGL_VERSION")))),k$.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==y$){const t=jT(e);y$=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,y$)}(k$.getNumber("WEBGL_VERSION")))),k$.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=k$.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=jT(e);return t=b$(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:b$(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),k$.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>k$.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!la())),k$.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=jT(e);if(1===e){if(!b$(t,"OES_texture_float"))return!1}else if(!b$(t,"EXT_color_buffer_float"))return!1;return w$(t)}(k$.getNumber("WEBGL_VERSION")))),k$.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!k$.getBool("WEBGL_FORCE_F16_TEXTURES")&&k$.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),k$.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=jT(e);if(1!==e){if(b$(t,"EXT_color_buffer_float"))return w$(t);const e="EXT_color_buffer_half_float";if(b$(t,e)){const n=t.getExtension(e);return function(e,t){const n=JT(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!!b$(t,"OES_texture_float")&&!!b$(t,"WEBGL_color_buffer_float")&&w$(t)}(k$.getNumber("WEBGL_VERSION")))),k$.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=k$.getNumber("WEBGL_VERSION"))&&null!=jT(e).fenceSync;var e})),k$.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>k$.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),k$.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),k$.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>la()?1:-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),k$.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),k$.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),k$.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),k$.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),k$.registerFlag("WEBGL_EXP_CONV",(()=>!1)),k$.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>k$.getBool("IS_TEST"))),k$.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),k$.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),k$.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),k$.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const C$="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:E$}=a;function T$(e,t,n){const r=[];if(e.forEach((e=>{const t=Q(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=z$(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),a=e.map((e=>function(e,t,n=!1,r){let s="";s+=n?_$(e,r):$$(e,r);const a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=E$(e.shapeInfo.logicalShape,t.logicalShape),l=B$(i),u=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let p="";p=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let d="return outputValue;";const f=1===Q(e.shapeInfo.logicalShape),m=1===Q(t.logicalShape);if(1!==a||f||m){if(f&&!m)d=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?d="return vec4(outputValue.x);":o.indexOf(e)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${p});\n      ${d}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&ee(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=B$(l),c=E$(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${d[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+h]}`)).join(", "),`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${p}\n      return get${r}(${f});\n    }\n  `}(e,t)),s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=I$(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${R$}\n    ${O$}\n    ${F$}\n  `}(o);return t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(ee(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),a=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),a=s*Math.ceil(e[e.length-2]/2);let i=a,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return ee(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${A$(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=N$(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${A$(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=N$(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=N$(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=N$(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=D$),[h,l,c,s,u,a,n.userCode].join("\n")}function $$(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,a]=e.shapeInfo.texShape;if(1===s&&1===a)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=M$(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${L$(e)}\n      }\n    `;const s=e.shapeInfo.texShape,a=s[0],i=s[1];if(1===i&&1===a)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=M$(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===a?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape;if(null!=a&&ee(n,a)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=a[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=oe(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${$$(P$(e,l),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${W$(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${L$(e)}\n      }\n    `;const u=a[0],c=a[1],h=M$(r);return 1===c?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=oe(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${$$(P$(e,u),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${W$(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${L$(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],p=c[1],d=e.shapeInfo.flatOffset;if(p===a&&null==d)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(p===i&&null==d)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=M$(r);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:l,keptDims:u}=oe(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${$$(P$(e,l),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${W$(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${L$(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(d===o&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(d===a&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=M$(r);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${d}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=oe(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${$$(P$(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${W$(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${L$(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${M$(n)};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=oe(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${$$(P$(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${W$(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${L$(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${M$(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function _$(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${I$().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=I$();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],l=I$();if(null!=a&&ee(n,a))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const r=[1,2],a=["b","row","col"];return`\n        ${_$(P$(e,n.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${W$(a,r)});\n        }\n      `}const o=I$();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=I$();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(a[i-1]/2);let p=h*Math.ceil(a[i-2]/2),d="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)d=`int b${e}, `+d,p*=a[i-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${r}(${d}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const R$="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",O$="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",F$="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",D$="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function M$(e){return`offset${e}`}function L$(e){const t=e.name,n=Q(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function B$(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function z$(e,t,n){const{newShape:r,keptDims:s}=oe(t),a=t.length,i=e&&3===a&&1===t[0],o=i?t.slice(1):r,l=!e&&a>1&&!ee(t,n)&&r.length<a||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:s}}function P$(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function W$(e,t){return t.map((t=>e[t])).join(", ")}function V$(e,t,n){const r=[],s=[];let a,i,o,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===$e().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const s of t.variableNames){const a={name:s,uniform:e.getUniformLocation(n,s,c),offset:e.getUniformLocation(n,`offset${s}`,c)};t.enableShapeUniforms&&(a.shape=e.getUniformLocation(n,`${s}Shape`,c),a.texShape=e.getUniformLocation(n,`${s}TexShape`,c)),r.push(a)}if(t.enableShapeUniforms&&(a=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),i=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const r of t.customUniforms)s.push(e.getUniformLocation(n,r.name,c));return{variablesLocations:r,customUniformLocations:s,infLoc:l,nanLoc:u,outShapeLocation:a,outShapeStridesLocation:o,outTexShapeLocation:i}}function U$(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!ee(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!ee(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function G$(e){return $e().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class j${constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=HT.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=I$();this.outputShape=e,this.enableShapeUniforms=G$(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?A$(["r","c","d"],e):N$(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class H${constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=HT.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=I$();this.outputShape=e,this.enableShapeUniforms=G$(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?A$(["r","c","d"],e):N$(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class q${constructor(e){this.variableNames=["A"],this.outTexUsage=qT.DOWNLOAD;const t=I$();this.outputShape=e,this.userCode=`\n      ${C$}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class K${constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=qT.DOWNLOAD;const t=I$();this.outputShape=e,this.userCode=`\n      ${C$}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const X$={R:0,G:1,B:2,A:3};class Y${constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=I$();this.outputShape=e,this.enableShapeUniforms=G$(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let a="";for(let e=0;e<n.length;e++){const t=n[e];a+=`\n          if(offset == ${e}) {\n            result = values[${X$[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":S$(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${a}\n        }\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class Z${constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=I$();this.outputShape=e,this.enableShapeUniforms=G$(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let s=0;s<=1;s++){const a=2*t+s;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${s} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${s};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":S$(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function J$(e,t,n,r,s,a){!function(e,t){const n=$e().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return c$(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return QT(e,(()=>e.bindTexture(o,i))),QT(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),QT(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),QT(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),QT(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===$e().getNumber("WEBGL_VERSION")?QT(e,(()=>e.texImage2D(o,0,r,t,n,0,s,a,null))):QT(e,(()=>e.texStorage2D(o,1,r,t,n))),QT(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function Q$(e){return e.internalFormatFloat}function e_(e){return e.internalFormatHalfFloat}function t_(e){return e.downloadTextureFormat}function n_(e){return e.internalFormatPackedFloat}function r_(e){return e.internalFormatPackedHalfFloat}class s_{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=$e().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){UT[e]=t}(t,e)):this.gl=jT(t),e=this.gl,2===$e().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>QT(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>QT(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>QT(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>QT(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>QT(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>QT(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>QT(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>QT(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===$e().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=t$(this.gl,e),b$(this.gl,t))this.textureHalfFloatExtension=t$(this.gl,t);else if($e().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),b$(this.gl,r))this.colorBufferHalfFloatExtension=t$(this.gl,r);else if($e().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",b$(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!b$(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=c$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return QT(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),QT(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=c$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return QT(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),QT(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return c$(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=JT(this.gl,this.textureHalfFloatExtension)}get debug(){return $e().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;QT(e,(()=>e.finish())),QT(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),QT(e,(()=>e.deleteFramebuffer(this.framebuffer))),QT(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),QT(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),QT(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=XT(t,n);return J$(e,s,a,Q$(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=XT(t,n);return J$(e,s,a,e_(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=XT(t,n);return J$(e,s,a,t_(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){QT(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===$e().getNumber("WEBGL_VERSION")?QT(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):QT(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===$e().getNumber("WEBGL_VERSION")?QT(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):QT(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),QT(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let i,o,l;QT(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(s),2===$e().getNumber("WEBGL_VERSION")?QT(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):QT(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),QT(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=ZT(t,n);return J$(e,s,a,r_(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=ZT(t,n);return J$(e,s,a,n_(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(l$(this.gl,this.framebuffer),this.outputTexture=null),QT(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,a]=XT(t,n),i=new Uint8Array(t*n*4);return QT(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return function(e,t,n,r,s,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=ZT(e,t);return n*r*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const s=e.createBuffer();QT(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=16*t*n;return QT(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),QT(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),QT(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if($e().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else $e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,$e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return QT(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=I$();return function(e,t){const n=c$(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(QT(e,(()=>e.shaderSource(n,t))),QT(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return c$(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);QT(t,(()=>t.attachShader(n,this.vertexShader))),QT(t,(()=>t.attachShader(n,e))),function(e,t){if(QT(e,(()=>e.linkProgram(t))),!$e().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&s$(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;QT(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){QT(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),a$(e,t,"clipSpacePos",n,3,20,0)&&a$(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(QT(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&s$(this.gl,this.program),QT(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return c$(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),QT(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),i$(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=ZT(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&s$(this.gl,this.program),u$(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}QT(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),QT(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=t$(this.gl,2===$e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===$e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===$e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await se((()=>this.disposed||this.isQueryAvailable(e,$e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,$e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in $e().platform&&(n=$e().platform.setTimeoutCustom.bind($e().platform)),se((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),o$(this.gl,e,this.framebuffer),this.debug&&u$(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(o$(this.gl,this.outputTexture,this.framebuffer),this.debug&&u$(this.gl)):l$(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;o$(r,e,this.framebuffer),this.debug&&u$(r),this.outputTexture=e,QT(r,(()=>r.viewport(0,0,t,n))),QT(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),QT(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:a_,bincountImpl:i_,bincountReduceImpl:o_,bitwiseAndImpl:l_,castImpl:u_,ceilImpl:c_,concatImpl:h_,equalImpl:p_,expImpl:d_,expm1Impl:f_,floorImpl:m_,gatherNdImpl:g_,gatherV2Impl:y_,greaterImpl:b_,greaterEqualImpl:x_,lessImpl:w_,lessEqualImpl:v_,linSpaceImpl:k_,logImpl:I_,maxImpl:N_,maximumImpl:A_,minimumImpl:S_,multiplyImpl:C_,negImpl:E_,notEqualImpl:T_,prodImpl:$_,raggedGatherImpl:__,raggedRangeImpl:R_,raggedTensorToTensorImpl:O_,rangeImpl:F_,rsqrtImpl:D_,scatterImpl:M_,sigmoidImpl:L_,simpleAbsImpl:B_,sliceImpl:z_,sparseFillEmptyRowsImpl:P_,sparseReshapeImpl:W_,sparseSegmentReductionImpl:V_,sqrtImpl:U_,staticRegexReplaceImpl:G_,stridedSliceImpl:j_,stringNGramsImpl:H_,stringSplitImpl:q_,stringToHashBucketFastImpl:K_,subImpl:X_,tileImpl:Y_,topKImpl:Z_,transposeImpl:J_,uniqueImpl:Q_}=S;function eR(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function tR(e,t){return 1===t?[e]:eR(e,t)}class nR{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=G$(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=tR("rc",this.rank),t=B$(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class rR{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=G$(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let e=n-3;e>=0;--e)s[e]=`(${s[e+1]} * ${r[e+1]})`;return s}(e.map(((e,t)=>t)),t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${r[s]}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`)).join("")}(["r","c","d"],"inputShape"):N$(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":S$(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class sR{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=iR(t,n),s=oR(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=aR(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}let i;return r===KT.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===KT.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===KT.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===KT.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===KT.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=iR(n,r),a=oR(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=aR(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=$e().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function aR(e,t,n,r,s){const a=function(e,t){switch(e){case KT.PACKED_2X2_FLOAT32:return n_(t);case KT.PACKED_2X2_FLOAT16:return r_(t);case KT.UNPACKED_FLOAT32:return Q$(t);case KT.UNPACKED_FLOAT16:return e_(t);case KT.PACKED_4X1_UNSIGNED_BYTE:return t_(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=ZT(e[0],e[1]);i=t*n}else{const[t,n]=XT(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function iR(e,t){if(e===qT.UPLOAD)return KT.PACKED_2X2_FLOAT32;if(e===qT.RENDER||null==e)return function(e){return $e().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?KT.PACKED_2X2_FLOAT32:KT.UNPACKED_FLOAT32:e?KT.PACKED_2X2_FLOAT16:KT.UNPACKED_FLOAT16}(t);if(e===qT.DOWNLOAD||e===qT.PIXELS)return KT.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function oR(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class lR{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=G$(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const uR="if (isnan(x)) return x;",cR="return x;",hR="return abs(x);",pR="return (x >= 0.0) ? x : (exp(x) - 1.0);",dR=uR+"\n  return (x < 0.0) ? 0.0 : x;\n",fR=uR+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",mR="return x;",gR="return 1.0 / (1.0 + exp(-1.0 * x));",yR="return x;",bR="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",xR="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",wR="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",vR="return 1.0 / (1.0 + exp(-1.0 * x));";class kR{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=G$(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class IR{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=G$(this.outputShape.length);const t=e.length,n=tR("rc",t),r=B$(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const NR=Kh,AR={},SR=$e().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class CR extends G{nextDataId(){return CR.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!$e().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof s_)t=e;else{const n=jT($e().getNumber("WEBGL_VERSION"),e);t=new s_(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=jT($e().getNumber("WEBGL_VERSION"));t=new s_(e),this.binaryCache=((n=$e().getNumber("WEBGL_VERSION"))in AR||(AR[n]={}),AR[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new sR(this.gpgpu),this.numMBBeforeWarning=null==$e().global.screen?1024:$e().global.screen.height*$e().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new U(this,Ia())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,s,a){const i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,s]},o.texShape=[r,s];const l=d$(t),u=new Y$(l,!1,a),c=this.runWebGLProgram(u,[i],n,[[r,s]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,n){if(($e().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||$e().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:qT.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if($e().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:qT.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new kR(i,mR):new lR(i,mR);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=xs()),c="complex64"===r?Wd(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=xs()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=s){let t;t=o?new kR(r,mR):new lR(r,mR);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if($e().getBool("DEBUG")&&!$e().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===$e().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&$e().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...YT(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=Wd(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=Q(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;QT(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Ia().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:a,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new kR(s,mR):new lR(s,mR);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:i}],i),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=Ia().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>vs(e)));return $i(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return $i(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!e$(n)){if($e().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=Q(t);if($e().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...YT(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=$e().getBool("WEBGL_PACK")&&!0===r,i=a?d$(t):t,o=a?new K$(i):new q$(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return $e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=Is(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=Is(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if($e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return $e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:xs(),endMs:null}}endTimer(e){return $e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=xs(),e)}async getQueryTime(e){if($e().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=SR){return $e().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&Q(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){Hr("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return NR(e.shape,t)}packedUnaryOp(e,t,n){const r=new kR(e.shape,t),s=this.compileAndRun(r,[e],n);return Ia().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=B_(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if($e().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,hR,e.dtype);const t=new lR(e.shape,hR),n=this.compileAndRun(t,[e]);return Ia().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&pe(n[0])){const s=n.map((e=>ws(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return Ia().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new IR(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new nR(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[h$(e.shape),...p$(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[h$(t),...p$(t)],a=new rR(s,n),i=[n],o=this.runWebGLProgram(a,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:a}=n;null!=t&&Y(Q(s)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const i=d$(s);let o;o=r?new H$(i):new j$(i);const l=[null!=t?t:YT(i)];return{dtype:a,shape:s,dataId:this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,l,!0,t).dataId}}runWebGLProgram(e,t,n,r,s=!1,a){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===HT.DENSE){const t=null!=a?a:YT(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===Q(i.shape))return o.values=le(i.dtype,0),i;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&Q(t.shape)<=$e().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!m$(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=z$(e.packedInputs,t.shape,a);let u="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=ye(o);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const p=t.shape.length,d=2===o.length&&ee(t.shape,a),f=1===Q(t.shape),m=no(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&ee(a,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;r+=`${p}_${g}_${i?l:""}_${o.length}_${f}_${m}_${d}_${u}_${c}_${h}_${y}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s+`${$e().getNumber("WEBGL_VERSION")}`,a}(e,u,c),p=this.getAndSaveBinary(h,(()=>function(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),a=s.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=T$(s,i,t),l=function(e,t){const n=c$(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(QT(e,(()=>e.shaderSource(n,t))),QT(e,(()=>e.compileShader(n))),$e().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw r$(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),u=e.createProgram(l);return $e().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i},V$(e,t,u)))}(this.gpgpu,e,u,c))),d=null!=this.activeTimers;let f;d&&(f=this.startTimer()),$e().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,s){t.program.enableShapeUniforms||(U$(t.inShapeInfos,n),U$([t.outShapeInfo],[r]));const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===$e().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let r=0;r<n.length;++r){const s=n[r],{uniform:a,offset:i,shape:o,texShape:l}=t.variablesLocations[r];if(o){const{uniformShape:n}=z$(t.program.packedInputs,s.shape,s.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(l&&e.gl.uniform2i(l,s.texData.texShape[0],s.texData.texShape[1]),null!=a)if(s.isUniform)if(Q(s.shape)<2)e.gl.uniform1f(a,s.uniformValues[0]);else{let t=s.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=s.texData.slice&&null!=i&&e.gl.uniform1i(i,s.texData.slice.flatOffset),e.setInputMatrixTexture(s.texData.texture.texture,a,r)}const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=ye(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s)for(let n=0;n<t.program.customUniforms.length;++n){const r=t.program.customUniforms[n],a=t.customUniformLocations[n],i=s[n];if("float"===r.type)e.gl.uniform1fv(a,i);else if("vec2"===r.type)e.gl.uniform2fv(a,i);else if("vec3"===r.type)e.gl.uniform3fv(a,i);else if("vec4"===r.type)e.gl.uniform4fv(a,i);else if("int"===r.type)e.gl.uniform1iv(a,i);else if("ivec2"===r.type)e.gl.uniform2iv(a,i);else if("ivec3"===r.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==r.type)throw Error(`uniform type ${r.type} is not supported yet.`);e.gl.uniform4iv(a,i)}}e.executeProgram()}(this.gpgpu,p,u,c,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=$e().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=xs();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!$e().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||($e().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Aa((()=>{if(!$e().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=$e().getBool("DEBUG");$e().set("DEBUG",!1);const t=this.abs(Vi(1e-8)).dataSync()[0];if($e().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=xs());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=$e().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=$e().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&$e().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map(((t,n)=>n>=e.length-2?K(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=oe(e);e=t.newShape}let s=Q(e),a=null;e.length<=1&&s<=n?a=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?a=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?a=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?a=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?a=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(a=[e[0],e[1]*e[2]*e[3]]);const i=null!=a&&Math.max(...a)>r&&Math.min(...a)<=(t?2:1)&&Math.min(...a)>0;if(null==a||i)if(t){const t=h$(e);let n=2,r=2;e.length&&([n,r]=p$(e)),s=t*(n/2)*(r/2),a=ne(s).map((e=>2*e))}else a=ne(s);return a}(n,o),t.texShape=c),null!=s){const e=d$(n);let a,i=c[1],h=c[0];const p=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!o&&p||([i,h]=ZT(c[0],c[1])),a=o?new Z$(e,p):new Y$(e,p);const d=p?[h,i]:c,f=this.makeTensorInfo(d,r),m=this.texData.get(f.dataId);m.usage=p?qT.PIXELS:qT.UPLOAD,m.texShape=d,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,s);const g=[[h,i]],y=!0,b=this.runWebGLProgram(a,[f],r,g,y),x=this.texData.get(b.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,$e().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=xs()-u)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*he(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await gd(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw r$(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:o}=V$(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:s,width:a,channels:i}=e,o=Ia().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=o.writeTexture(r,t,n,s,a,i);return Ia().makeTensorFromDataId(l,t,n,o)}}CR.nextDataId=0,ua()&&Ea("webgl",(()=>new CR),2);const ER="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class TR{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=so(t,n),this.enableShapeUniforms=G$(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const $R="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class _R{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=so(t,n);const s=this.outputShape.length;this.enableShapeUniforms=G$(s);let a="";if(r)if(0===s||1===Q(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${B$(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=tR("coords",s);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function RR(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const OR={kernelName:Xt,backendName:"webgl",kernelFunc:RR};function FR(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=RR({inputs:{x:r},backend:n}),l=RR({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const DR={kernelName:ot,backendName:"webgl",kernelFunc:FR},MR="return (a < 0.) ? b * a : a;",LR="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",BR={kernelName:tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,i=n.makeTensorInfo([],"float32",ys(a,"float32")),o=$e().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _R(LR,s.shape,i.shape):new TR(MR,s.shape,i.shape),l=n.runWebGLProgram(o,[s,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},zR="return (a < 0.) ? b * a : a;",PR="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",WR={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=$e().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _R(PR,r.shape,s.shape):new TR(zR,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],"float32")}},VR="if (isnan(x)) return x;";function UR({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,o=a,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=$e().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new kR(i.shape,t):new lR(i.shape,e),o.runWebGLProgram(u,[i],l)}}function GR({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(r&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new TR(e,l.shape,u.shape);return c.runWebGLProgram(i,[s,a],Ks(n.dtype,r.dtype))})),a=FR({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||Ks(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=s){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?kf(e):e,r="string"===l.dtype?kf(t):t,[a,i]=s(l.shape,u.shape,n,r,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=a,o}let p;return p=$e().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new _R(t,l.shape,u.shape,n):new TR(e,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function jR(e,t=!1){if("linear"===e)return t?yR:cR;if("relu"===e)return t?xR:dR;if("elu"===e)return t?bR:pR;if("relu6"===e)return t?wR:fR;if("prelu"===e)return t?PR:zR;if("leakyrelu"===e)return t?LR:MR;if("sigmoid"===e)return t?vR:gR;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class HR{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=G$(this.outputShape.length);const u=r?e[1]:e[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=s?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${b};\n        int batchB = ${x};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}const qR={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class KR{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=so(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const XR="return a * b;";function YR(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=Ks(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new KR(qR.REAL,r.shape,s.shape),i=new KR(qR.IMAG,r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=FR({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=C_(r.shape,s.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=$e().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _R(XR,r.shape,s.shape):new TR(XR,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const ZR={kernelName:Sn,backendName:"webgl",kernelFunc:YR};function JR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=n,o=Q(s.shape),l=ae(a,o),u=Q(l);Y(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(s.dataId);return!c.isPacked||m$(s.shape,l)||null!==c.texture&&m$(c.shape,l)?(i.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const r=[h$(e.shape),...p$(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[h$(t),...p$(t)],i=new rR(a,r),o=[r],l=n.runWebGLProgram(i,[s],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(s,l,i)}const QR={kernelName:Hn,backendName:"webgl",kernelFunc:JR};class eO{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${te(e)?e.toPrecision(2):e}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class tO{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function nO(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Ad(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:l,outSize:u}=s[i];let c,h;c="mean"===n?0===i?new eO({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new eO({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new tO({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class rO{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=B$(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class sO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=B$(this.rank),s=eR("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=s[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function aO(e,t,n){const r=$e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sO(e.shape,t):new rO(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function iO(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;return function(e,t,n,r){const s=t,a=e.shape.length,i=ie(s,e.shape);let o=i;const l=Su(o,a),u=null!=l;let c=e;u&&(c=aO(e,l,r),o=Eu(o.length,a)),Au("sum",o,a);const[h,p]=Iu(c.shape,o);let d=h;n&&(d=Nu(h,i));const f=Q(p),m=JR({inputs:{x:c},attrs:{shape:[Q(e.shape)/f,f]},backend:r}),g=nO(m,Xs(e.dtype),"sum",r),y=JR({inputs:{x:g},attrs:{shape:d},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),u&&r.disposeIntermediateTensorInfo(c),y}(s,a,i,n)}const oO={kernelName:dr,backendName:"webgl",kernelFunc:iO};function lO(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=s.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=s.shape[a[e]];let u;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=J_(e,s.shape,s.dtype,a,l);u=i.makeTensorInfo(l,s.dtype),i.texData.get(u.dataId).values=t}else u=aO(s,a,i);return u}const uO={kernelName:Dr,backendName:"webgl",kernelFunc:lO},cO=1e3;function hO({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],p=r?t.shape[c-1]:t.shape[c-2],d=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=Q(m),b=Q(g),x=so(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([d,f]);Y(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=n?[y,h,d]:[y,d,h],v=r?[b,f,p]:[b,p,f],k=JR({inputs:{x:e},backend:s,attrs:{shape:w}}),I=JR({inputs:{x:t},backend:s,attrs:{shape:v}}),N=[k,I],A=Math.max(y,b),S=n?k.shape[1]:k.shape[2],C=null!=a,E=null!=i,T="leakyrelu"===l,$=null!=l?jR(l,!0):null;let _;if((1===d||1===f)&&S>cO&&!1===(C||E||T||null!=$)){let e=k,t=I;n&&(e=lO({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=lO({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),N.push(t));const a=1===f;let i=e;1!==f&&(i=JR({inputs:{x:e},backend:s,attrs:{shape:[A,S,1]}}),N.push(i));const o=1===f?2:1;let l=t;a&&(l=JR({inputs:{x:t},backend:s,attrs:{shape:[A,1,S]}}),N.push(l));const u=YR({inputs:{a:i,b:l},backend:s});_=iO({inputs:{x:u},backend:s,attrs:{axis:o,keepDims:!0}}),N.push(u)}else{const l=Ks(e.dtype,t.dtype),u=new HR(w,v,[A,d,f],n,r,C,$,E,T),c=[k,I];if(null!=a&&c.push(a),E&&c.push(i),T){const e=s.makeTensorInfo([],"float32",ys(o,"float32"));c.push(e),N.push(e)}_=s.runWebGLProgram(u,c,l)}const R=JR({inputs:{x:_},backend:s,attrs:{shape:x}});N.push(_);for(const e of N)s.disposeIntermediateTensorInfo(e);return R}const pO={kernelName:Ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return hO({a:s,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},dO="return abs(x);",fO={kernelName:De,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=B_(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=$e().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new kR(r.shape,dO):new lR(r.shape,dO),n.runWebGLProgram(s,[r],r.dtype)}},mO=UR({opSnippet:uR+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),gO={kernelName:Me,backendName:"webgl",kernelFunc:mO},yO=UR({opSnippet:uR+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),bO={kernelName:Le,backendName:"webgl",kernelFunc:yO},xO="return a + b;",wO=GR({opSnippet:xO,packedOpSnippet:xO,supportsComplex:!0,cpuKernelImpl:a_}),vO={kernelName:Be,backendName:"webgl",kernelFunc:wO};class kO{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class IO{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const NO={kernelName:ze,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return RR({inputs:{x:s[0]},backend:r});if(s.length>$e().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>Ks(e,t))),i=s.map((e=>e.shape)),o=$e().getBool("WEBGL_PACK")?new IO(s[0].shape,i):new kO(s[0].shape,i);return r.runWebGLProgram(o,s,a)}},AO={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=ie(a,s.shape);let u=l;const c=Su(u,o);let h=s;null!=c&&(h=lO({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Eu(u.length,o)),Au("all",u,o);const[p,d]=Iu(h.shape,u),f=JR({inputs:{x:h},backend:n,attrs:{shape:[-1,Q(d)]}}),m=nO(f,f.dtype,"all",n);let g;return g=JR(i?{inputs:{x:m},backend:n,attrs:{shape:Nu(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},SO={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=ie(a,s.shape);let u=l;const c=Su(u,o);let h=s;null!=c&&(h=lO({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Eu(u.length,o)),Au("any",u,o);const[p,d]=Iu(h.shape,u),f=JR({inputs:{x:h},backend:n,attrs:{shape:[-1,Q(d)]}}),m=nO(f,f.dtype,"any",n);let g;return g=JR(i?{inputs:{x:m},backend:n,attrs:{shape:Nu(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class CO{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class EO{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,Y(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=B$(o),u=tR("coords",o);let c,h;if(1===a){h=o+1;const e=B$(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((e=>"int "+e)),m=tR("sourceLocR",h-1).concat("inIdx.r"),g=tR("sourceLocG",h-1).concat("inIdx.g"),y=tR("sourceLocB",h-1).concat("inIdx.b"),b=tR("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function TO(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=Ad(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},l=new CO(o,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=TO(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function $O(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=Ad(s[s.length-1]),i=new EO(s,a,n,null==r),o=null==r?[t]:[t,r],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const r=$O(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function _O(e,t,n,r){const s=[n];if(Au("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!$e().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,l]=Iu(i.shape,s),u=Q(l),c=JR({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(c);const h=TO(e,c,r);n.push(h);const p=JR({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return $O(e,t,r)}const RO={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=ie(a,s.shape);const o=Su(i,s.shape.length);let l=s;const u=[];null!=o&&(l=lO({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Eu(i.length,l.shape.length)),Au("argMax",[i[0]],l.shape.length);const c=_O(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},OO={kernelName:Ue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=ie(a,s.shape);const o=Su(i,s.shape.length);let l=s;const u=[];null!=o&&(l=lO({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Eu(i.length,l.shape.length)),Au("argMin",[i[0]],l.shape.length);const c=_O(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},FO=UR({opSnippet:uR+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),DO={kernelName:Ge,backendName:"webgl",kernelFunc:FO},MO=UR({opSnippet:uR+"return log(x + sqrt(x * x + 1.0));"}),LO={kernelName:je,backendName:"webgl",kernelFunc:MO},BO=UR({opSnippet:uR+"\n  return atan(x);\n"}),zO={kernelName:He,backendName:"webgl",kernelFunc:BO},PO=GR({opSnippet:ER+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+$R+"\n  return result;\n"}),WO={kernelName:Ke,backendName:"webgl",kernelFunc:PO},VO=UR({opSnippet:uR+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),UO={kernelName:qe,backendName:"webgl",kernelFunc:VO};class GO{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / max(count, 1.0)");const x=4*Math.floor(a/4),w=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class jO{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / max(count, 1.0)");const v=4*Math.floor(a/4),k=a%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n        }\n        setOutput(${w});\n      }\n    `}}const HO={kernelName:Xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;v$(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;Y(Il(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=dl(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ee(u.inShape,u.outShape))return RR({inputs:{x:s},backend:n});const c=new GO(u,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},qO={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=fl(s.shape,a,i,[1,1,1],o,l,u),h=new jO(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class KO{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class XO{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const YO={kernelName:Je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=fl(i.shape,o,l,[1,1,1],u,c),p=new XO(h);return n.runWebGLProgram(p,[s],i.dtype)}},ZO={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;v$([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=dl(i.shape,o,l,1,u),h=new KO(c);return n.runWebGLProgram(h,[s],i.dtype)}},JO={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return hO({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class QO{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],so(e,t),so(e,n);let i="0.0";null!=r&&(so(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(so(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class eF{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],so(e,t),so(e,n);let i="vec4(0.0)";null!=r&&(so(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(so(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const tF={kernelName:Gt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=e;Y(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),Y(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),Y(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,s,a];let c=null;null!=i&&(c=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));const p=$e().getBool("WEBGL_PACK_NORMALIZATION")?new eF(r.shape,s.shape,a.shape,c,h,l):new QO(r.shape,s.shape,a.shape,c,h,l);return t.runWebGLProgram(p,u,u[0].dtype)}};class nF{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=B$(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return rF.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${rF[t]} = start[${t}] + coords.${rF[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const rF=["x","y","z","w","u","v"];class sF{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=B$(this.rank),n=tR("coords",this.rank),r=tR("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function aF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r,[o,l]=Zo(s,a,i);if(Lo(s,o,l),0===Q(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=z_(e.values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:u}=n.texData.get(s.dataId),c=Xo(s.shape,o,l);if(u||!c){const e=$e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sF(l):new nF(l),t=[o];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),i=r.texData.get(a.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Yo(t,ye(e.shape));s.slice&&(o+=s.slice.flatOffset),i.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),a}(s,o,l,n)}const iF={kernelName:ir,backendName:"webgl",kernelFunc:aF},oF={kernelName:et,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;Y(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=Cd(s.shape,a,o),u=Ed(l.length,a.length),c=Td(s.shape,a,o),h=$d(i,a.length),p=_d(c,i,a.length),d=[],f=JR({inputs:{x:s},backend:n,attrs:{shape:l}}),m=lO({inputs:{x:f},backend:n,attrs:{perm:u}}),g=JR({inputs:{x:m},backend:n,attrs:{shape:c}}),y=aF({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return d.push(f),d.push(m),d.push(g),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},lF={kernelName:tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),l=n.readSync(a.dataId),u=i_(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},uF={kernelName:nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=$e().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=$e().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,s])||1===i){const e=n.texData.get(r.dataId).values,t=n.texData.get(s.dataId).values,[a,i]=l_(r.shape,s.shape,e,t,r.dtype),o=n.makeTensorInfo(i,r.dtype);return n.texData.get(o.dataId).values=a,o}let o;return o=a?new _R("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,s.shape,!1):new TR("\n  return float(int(a.r) & int(b.r));\n",r.shape,s.shape),n.runWebGLProgram(o,[r,s],r.dtype)}},cF={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.readSync(r.dataId),i=n.readSync(s.dataId),o=so(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},hF=GR({opSnippet:"return float(a != b);",cpuKernelImpl:T_,dtype:"bool"}),pF={kernelName:En,backendName:"webgl",kernelFunc:hF};function dF(e){const{inputs:t,backend:n}=e,{input:r}=t;return RR({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const fF={kernelName:Un,backendName:"webgl",kernelFunc:dF},mF={kernelName:st,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return RR({inputs:{x:a},backend:r});const t=yc(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=FR({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=dF({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!ce(a.dtype,i)){const e=RR({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(r.shouldExecuteOnCPU([a])){const e=r.texData.get(a.dataId).values,[t,n,s]=u_(e,a.shape,a.dtype,i);return r.makeTensorInfo(t,n,s)}if("int32"===i)return function(e,t){const n=new lR(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",le("bool",1)),t=hF({inputs:{a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},gF="return ceil(x);",yF=UR({opSnippet:gF,packedOpSnippet:gF,cpuKernelImpl:c_}),bF={kernelName:at,backendName:"webgl",kernelFunc:yF};class xF{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class wF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const vF={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;o=$e().getBool("WEBGL_PACK_CLIP")?new wF(s.shape):new xF(s.shape);const l=[[a],[i]];return n.runWebGLProgram(o,[s],s.dtype,l)}};class kF{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function IF(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const NF={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new kF(r.shape),i=[IF(r,s.complexTensorInfos.real),IF(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class AF{constructor(e){this.outputShape=[],this.outputShape=bd(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class SF{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=bd(e,t);const n=this.outputShape,r=n.length,s=B$(r),a=tR("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${CF(i,l,t)}),\n            vec2(${CF(u,l,t)}));\n        }`}const p=o.length,d=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${CF(i,l,d)}),\n          vec2(${CF(u,l,d)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function CF(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function EF(e){const{inputs:t,backend:n}=e,{input:r}=t;return RR({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const TF={kernelName:Zt,backendName:"webgl",kernelFunc:EF};function $F(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>dF({inputs:{input:e},backend:n}))),s=e.map((e=>EF({inputs:{input:e},backend:n}))),a=$F(r,t,n),i=$F(s,t,n),o=FR({inputs:{real:a,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=Q(e.shape.slice(t));return JR({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),a=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=bd(s.map((e=>e.shape)),1),o=1===s[0].shape[0],l=h_(a,i,r,o),u=bd(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,r,l);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const a=e.filter((e=>Q(e.shape)>0)),i=$e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(1===a.length){const t=i?new lR(e[0].shape,mR):new kR(e[0].shape,mR);return n.runWebGLProgram(t,e,r)}const o=$e().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>o){const e=[];for(let r=0;r<a.length;r+=o){const s=a.slice(r,r+o);e.push($F(s,t,n))}const r=$F(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(i){const e=new SF(a.map((e=>e.shape)),t);return n.runWebGLProgram(e,a,r)}const{tensors2D:l,outShape:u}=function(e,t,n){const r=bd(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>JR({inputs:{x:e},attrs:{shape:[-1,Q(e.shape.slice(t))]},backend:n}))),outShape:r}}(a,t,n),c=new AF(l.map((e=>e.shape))),h=n.runWebGLProgram(c,l,r);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const p=JR({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),p}function _F(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=ie(s,t[0].shape)[0];yd(t.map((e=>e.shape)),a);const i=bd(t.map((e=>e.shape)),a);if(0===Q(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>Q(e.shape)>0));return 1===o.length?RR({inputs:{x:o[0]},backend:n}):$F(o,a,n)}const RF={kernelName:ut,backendName:"webgl",kernelFunc:_F};class OF{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class FF{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class DF{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=G$(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,c=u;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<u;e++)h+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<u;e++)h+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(c+1)/2;t++){const n=2*t;if(h+=`\n           xC = xCCorner + ${n*o};\n           `,1===i){if(n<u&&(a%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,h+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<u)){const e=a%2==0?K(o):o;o%2==0&&a%2==1||o%2!=0&&a%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):h+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<u&&(a%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<u&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<u&&(h+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<u&&(h+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<u&&(h+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let p="",d="";n&&(p=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,d="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${d}\n         setOutput(result);\n       }\n     `}}class MF{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=G$(this.outputShape.length);const{dataFormat:n}=t,r=I$(),s="channelsLast"===n,a=s?1:2,i=s?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}function LF(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function BF({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=r.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],p=n.outChannels,d="channelsLast"===n.dataFormat,f=!1;let m;const g=[];if(null!=a){const e=LF(a.shape,d);null!=e&&(a=JR({inputs:{x:a},backend:r,attrs:{shape:e}}),g.push(a))}if(null!=s){const e=LF(s.shape,d);null!=e&&(s=JR({inputs:{x:s},backend:r,attrs:{shape:e}}),g.push(s))}if((1!==h&&1!==p||!(c>cO))&&u.isPacked&&d&&null!=u.texture&&l[2]%2!=0&&ee(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},p=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,Y(m$(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const d=JR({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(d);const y=hO({a:h,b:d,backend:r,transposeA:!1,transposeB:f,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),b=r.texData.get(y.dataId);Y(b.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=p,b.shape=n.outShape,m=RR({inputs:{x:y},backend:r}),m.shape=n.outShape,g.push(y)}else{const l=n.outHeight*n.outWidth,u=JR({inputs:{x:e},backend:r,attrs:{shape:d?[n.batchSize,l,n.inChannels]:[n.batchSize,n.inChannels,l]}}),c=JR({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=hO({a:d?u:c,b:d?c:u,transposeA:!d,transposeB:f,backend:r,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i});m=JR({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),g.push(u),g.push(c),g.push(h)}for(const e of g)r.disposeIntermediateTensorInfo(e);return m}function zF({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:p,dataFormat:d}=n,f="channelsLast"===d,m=l*u*c,g=p*h,y=[n.batchSize,m,g],b=[];if(null!=a){const e=LF(a.shape,f);null!=e&&(a=JR({inputs:{x:a},backend:r,attrs:{shape:e}}),b.push(a))}if(null!=s){const e=LF(s.shape,f);null!=e&&(s=JR({inputs:{x:s},backend:r,attrs:{shape:e}}),b.push(s))}const x=JR({inputs:{x:t},backend:r,attrs:{shape:[1,m,Q(t.shape)/m]}});b.push(x);const w=new MF(y,n),v=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=r.runWebGLProgram(w,[e],"float32",v),I=JR({inputs:{x:k},backend:r,attrs:{shape:y}});b.push(k),b.push(I);const N=null!=s,A=null!=a,S="leakyrelu"===o,C=o?jR(o,!0):null,E=new HR(f?I.shape:x.shape,f?x.shape:I.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,N,C,A,S),T=f?[I,x]:[x,I];if(s&&T.push(s),A&&T.push(a),S){const e=r.makeTensorInfo([],"float32",ys(i,"float32"));T.push(e),b.push(e)}const $=r.runWebGLProgram(E,T,"float32"),_=JR({inputs:{x:$},backend:r,attrs:{shape:n.outShape}});b.push($);for(const e of b)r.disposeIntermediateTensorInfo(e);return _}const PF={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=Al(l),p=ml(s.shape,a.shape,i,u,o,c,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===h&&$e().getBool("WEBGL_EXP_CONV")){const e=new DF(p),t=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];d=n.runWebGLProgram(e,[s,a],"float32",t)}else if($e().getBool("WEBGL_CONV_IM2COL"))d=zF({x:s,filter:a,convInfo:p,backend:n});else{const e=new OF(p);d=n.runWebGLProgram(e,[s,a],"float32")}else d=BF({x:s,filter:a,convInfo:p,backend:n});const f=JR({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),f}};class WF{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${a?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class VF{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class UF{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class GF{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const jF={kernelName:ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=Al(l),p=ml(s.shape,c,i,1,o,u,!1,h),d=new WF(p);return n.runWebGLProgram(d,[s,a],"float32")}};class HF{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=G$(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,s=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const qF={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=Al(u),p=ml(i,a.shape,o,1,l,c,!1,h);if($e().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[p.strideHeight,p.strideWidth]],t=new HF(p);return n.runWebGLProgram(t,[s,a],"float32",e)}{const e=new VF(p);return n.runWebGLProgram(e,[s,a],"float32")}}},KF={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=gl(s.shape,a.shape,i,l,o),c=new FF(u);return n.runWebGLProgram(c,[s,a],"float32")}},XF={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r,u=gl(s.shape,l,i,1,o),c=new UF(u);return n.runWebGLProgram(c,[s,a],"float32")}},YF={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r,u=gl(l,a.shape,o,1,i),c=new GF(u);return n.runWebGLProgram(c,[s,a],"float32")}},ZF=UR({opSnippet:VR+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${$R}\n  return result;\n`}),JF={kernelName:gt,backendName:"webgl",kernelFunc:ZF},QF=UR({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),eD={kernelName:yt,backendName:"webgl",kernelFunc:QF};class tD{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const p="bilinear"===r?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const nD={kernelName:wt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new tD(s.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[s,a,i],"float32")}};var rD;!function(e){e.Prod="*",e.Sum="+"}(rD||(rD={}));class sD{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,a=this.op===rD.Prod?"1.0":"0.0",i=n?a:`getX(${aD(s,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${B$(s)} coords = getOutputCoords();\n        int end = ${iD(s,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${iD(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${aD(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function aD(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function iD(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function oD(e,t,n,r,s,a){const i=t.shape.length,o=Su([r],i);let l=t;null!=o&&(l=lO({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=Eu(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=l.shape[u];let h=RR({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const r=new sD(e,l.shape,!1,a),s=[[t]],i=h;h=n.runWebGLProgram(r,[h],h.dtype,s),n.disposeIntermediateTensorInfo(i)}if(s){const t=new sD(e,l.shape,s,a),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const e=lO({inputs:{x:h},backend:n,attrs:{perm:Cu(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const lD={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return oD(rD.Prod,s,n,a,i,o)}},uD={kernelName:xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return oD(rD.Sum,s,n,a,i,o)}},cD={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=i_(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=o_(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class hD{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const pD={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r,o=s.shape[0],l=("NHWC"===i?s.shape[1]:s.shape[2])*a,u=("NHWC"===i?s.shape[2]:s.shape[3])*a,c=("NHWC"===i?s.shape[3]:s.shape[1])/(a*a),h=new hD("NHWC"===i?[o,l,u,c]:[o,c,l,u],a,i);return n.runWebGLProgram(h,[s],s.dtype)}};class dD{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=G$(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class fD{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=G$(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)p+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;p+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<c;e++)p+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(p+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,p+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?K(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,p+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):p+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(p+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(p+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let d="",f="";n&&(d=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${d}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const mD={kernelName:It,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),Y(Il(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=ml(s.shape,a.shape,i,c,o,u,!0);let p;p=$e().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new fD(h):new dD(h);const d=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[s,a],"float32",d)}};class gD{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class yD{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const bD={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=ml(s.shape,c,i,o,l,u,!0),p=new gD(h);return n.runWebGLProgram(p,[s,a],"float32")}},xD={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=ml(c,a.shape,i,o,l,u,!0),p=new yD(h);return n.runWebGLProgram(p,[s,a],"float32")}};class wD{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const vD={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=Q(r.shape),i=JR({inputs:{x:r},backend:n,attrs:{shape:[a]}}),o=new wD(a),l=n.runWebGLProgram(o,[i],i.dtype),u=JR({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class kD{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const ID={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=pl(s.shape,a.shape,i,o,"NHWC",l);let c;const h=new kD(u);c=n.runWebGLProgram(h,[s,a],"float32");const p=JR({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),p}},ND={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:l}=Qd(s,a.length);tf(i.length,l,a);const{path:u,steps:c}=nf(o,l),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=ef(d,l[t]);let s;rf(e)?s=a[t]:(s=lO({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);ee(s.shape,i)||(s=JR({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===p?p=s:(p=YR({inputs:{a:s,b:p},backend:n}),f.push(p))}e<h-1&&(u[e]>=0&&(p=iO({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},AD=UR({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),SD={kernelName:Rt,backendName:"webgl",kernelFunc:AD},CD={kernelName:Ot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=$e().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new _R("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new TR("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},ED=GR({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:p_}),TD={kernelName:Dt,backendName:"webgl",kernelFunc:ED},$D=UR({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Dd};\n  float a1 = ${Md};\n  float a2 = ${Ld};\n  float a3 = ${Bd};\n  float a4 = ${zd};\n  float a5 = ${Pd};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),_D={kernelName:Ft,backendName:"webgl",kernelFunc:$D},RD=UR({opSnippet:VR+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:d_,dtype:"float32"}),OD={kernelName:Mt,backendName:"webgl",kernelFunc:RD};function FD(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let l=s;return s<0&&(Y(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),JR({inputs:{x:a},backend:r,attrs:{shape:o}})}const DD={kernelName:Lt,backendName:"webgl",kernelFunc:FD},MD="return exp(x) - 1.0;",LD=UR({opSnippet:MD,packedOpSnippet:MD,cpuKernelImpl:f_}),BD={kernelName:Bt,backendName:"webgl",kernelFunc:LD};class zD{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function PD(e,t,n){const r=n.texData.get(e.dataId),s=Q(e.shape),a=e.shape[e.shape.length-1],i=JR({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),o=i.shape,l=new zD("real",o,t),u=new zD("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),p=n.runWebGLProgram(u,c,"float32"),d=FR({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=JR({inputs:{x:d},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(d),f}const WD={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return PD(r,!1,n)}};class VD{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function UD(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||fe(s),"string"===a){const e=ue(a,Q(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new VD(r,s),n=[[s]];return t.runWebGLProgram(e,[],a,n)}}const GD={kernelName:Pt,backendName:"webgl",kernelFunc:UD};class jD{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const HD={kernelName:Wt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new jD(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},qD="return floor(x);",KD=UR({opSnippet:qD,packedOpSnippet:qD,cpuKernelImpl:m_}),XD={kernelName:Vt,backendName:"webgl",kernelFunc:KD},YD=GR({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),ZD={kernelName:Ut,backendName:"webgl",kernelFunc:YD};class JD{constructor(e){this.variableNames=["A"];const t=I$(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class QD{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=I$(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const eM={kernelName:Wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],h=[u,l,a];if(o||i){const e=$e().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=tM&&e===nM||(nM=e,tM=document.createElement("canvas").getContext("2d",{willReadFrequently:nM})),tM.canvas.width=l,tM.canvas.height=u,tM.drawImage(s,0,0,l,u),s=tM.canvas}const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=qT.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const d=$e().getBool("WEBGL_PACK")?new QD(h):new JD(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let tM,nM=$e().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const rM={kernelName:Gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r,m=Al(c),g=ml(s.shape,a.shape,l,h,u,p,!1,m);let y;const b=[],x=null!=i,w=null!=o,v="leakyrelu"===d,k=()=>{const e=[s,a],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=JR({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(x&&e.push(t(i,c)),w&&e.push(t(o,c)),v){const t=n.makeTensorInfo([],"float32",ys(f,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&$e().getBool("WEBGL_EXP_CONV")){const e=d?jR(d,!0):null,t=new DF(g,x,e,w,v),r=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],s=k();y=n.runWebGLProgram(t,s,"float32",r)}else if($e().getBool("WEBGL_CONV_IM2COL"))y=zF({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});else{const e=d?jR(d,!1):null,t=new OF(g,x,e,w,v),r=k();y=n.runWebGLProgram(t,r,"float32")}else y=BF({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});const I=JR({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}},sM={kernelName:jr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=r,f=[];let m=c;null==m&&(m=[1,1]),Y(Il(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=ml(s.shape,a.shape,l,m,u,h,!0),y=$e().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=p?jR(p,y):null,x=[s,a],w=null!=i,v=null!=o,k="leakyrelu"===p;if(w&&x.push(i),v&&x.push(o),k){const e=n.makeTensorInfo([],"float32",ys(d,"float32"));x.push(e),f.push(e)}let I;I=y?new fD(g,w,b,v,k):new dD(g,w,b,v,k);const N=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],A=n.runWebGLProgram(I,x,"float32",N);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),A}};class aM{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=B$(n.length);let a="\n    int index;";for(let e=0;e<this.sliceDim;e++)a+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${a}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const iM={kernelName:Ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],o=Q(r.shape),[l,u,c,h]=Rd(r,s),p=JR({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),d=JR({inputs:{x:r},backend:n,attrs:{shape:[Q(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=g_(e,t,r.dtype,u,i,c,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,a.values)}const f=new aM(i,h,[u,c],r.shape),m=n.runWebGLProgram(f,[d,p],d.dtype),g=JR({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),g}};class oM{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=B$(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function lM(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r,l=ie(i,s.shape)[0];if($e().get("DEBUG")){const e=n.readSync(a.dataId),t=s.shape[l];for(let n=0;n<e.length;++n){const r=e[n];Y(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const u=vf(s,a,l,o),c=Q(a.shape),h=[],p=JR({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),d=JR({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(p),h.push(d);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(d),t=n.bufferSync(p),r=y_(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const m=new oM(p.shape,f),g=n.runWebGLProgram(m,[p,d],p.dtype);h.push(g);const y=JR({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const uM={kernelName:jt,backendName:"webgl",kernelFunc:lM},cM=GR({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:b_,dtype:"bool"}),hM={kernelName:qt,backendName:"webgl",kernelFunc:cM},pM=GR({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:x_}),dM={kernelName:Kt,backendName:"webgl",kernelFunc:pM},fM={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return PD(r,!0,n)}},mM=UR({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),gM={kernelName:Jt,backendName:"webgl",kernelFunc:mM},yM=UR({opSnippet:"return float(isinf(x));",dtype:"bool"}),bM={kernelName:Qt,backendName:"webgl",kernelFunc:yM},xM=UR({opSnippet:"return float(isnan(x));",dtype:"bool"}),wM={kernelName:en,backendName:"webgl",kernelFunc:xM},vM=GR({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:w_,dtype:"bool"}),kM={kernelName:nn,backendName:"webgl",kernelFunc:vM},IM=GR({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:v_,dtype:"bool"}),NM={kernelName:rn,backendName:"webgl",kernelFunc:IM},AM={kernelName:sn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=k_(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},SM=UR({opSnippet:VR+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:I_}),CM={kernelName:an,backendName:"webgl",kernelFunc:SM},EM=UR({opSnippet:VR+"\n  return log(1.0 + x);\n"}),TM={kernelName:on,backendName:"webgl",kernelFunc:EM},$M=GR({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),_M={kernelName:ln,backendName:"webgl",kernelFunc:$M},RM=UR({opSnippet:"return float(!(x >= 1.0));"}),OM={kernelName:un,backendName:"webgl",kernelFunc:RM},FM=GR({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),DM={kernelName:cn,backendName:"webgl",kernelFunc:FM};class MM{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class LM{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const BM={kernelName:hn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r,u=$e().getBool("WEBGL_PACK_NORMALIZATION")?new LM(s.shape,a,i,o,l):new MM(s.shape,a,i,o,l);return n.runWebGLProgram(u,[s],s.dtype)}};class zM{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const PM={kernelName:pn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new zM(s.shape,o,l,u,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function WM(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=s.shape.length,l=ie(a,s.shape);let u=l;const c=Su(u,o),h=null!=c,p=n.shouldExecuteOnCPU([s]);let d=s;if(h){if(p){const e=n.texData.get(d.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=J_(e,s.shape,s.dtype,c,t);d=n.makeTensorInfo(t,s.dtype),n.texData.get(d.dataId).values=r}else d=aO(s,c,n);u=Eu(u.length,o)}Au("max",u,o);const[f,m]=Iu(d.shape,u);let g,y=f;if(i&&(y=Nu(f,l)),p){const e=n.texData.get(d.dataId).values,t=N_(e,Q(m),y,s.dtype);g=n.makeTensorInfo(y,s.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const s=Q(t),a=JR({inputs:{x:e},attrs:{shape:[Q(e.shape)/s,s]},backend:r}),i=nO(a,e.dtype,"max",r),o=JR({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(d,m,y,n);return h&&n.disposeIntermediateTensorInfo(d),g}const VM={kernelName:dn,backendName:"webgl",kernelFunc:WM},UM=GR({opSnippet:ER+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+$R+"\n  return result;\n",cpuKernelImpl:A_}),GM={kernelName:fn,backendName:"webgl",kernelFunc:UM},jM={kernelName:mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;v$(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;Y(Il(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=dl(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ee(u.inShape,u.outShape))return RR({inputs:{x:s},backend:n});const c=new GO(u,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},HM={kernelName:yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=fl(s.shape,a,i,[1,1,1],o,u,l),h=new jO(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class qM{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,l=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class KM{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,p=u-1-e.padInfo.left,d=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const XM={kernelName:bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=fl(i.shape,o,l,[1,1,1],u,c),p=new jO(h,"max",!0),d=n.runWebGLProgram(p,[i],i.dtype),f=new KM(h),m=n.runWebGLProgram(f,[s,d],i.dtype);return n.disposeIntermediateTensorInfo(d),m}},YM={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;v$([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,p=dl(o.shape,l,u,1,c,h),d=new GO(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new qM(p),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},ZM={kernelName:xn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;Y(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];Y(Il(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=dl(r.shape,s,a,u,i),[h,p]=function(e,t,n,r){let s=new GO(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new GO(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,o,c,l);return[h,p]}},JM={kernelName:wn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,i=n,o=r.shape.length,l=ie(a,r.shape);let u=l;const c=Su(u,o),h=null!=c,p=i.shouldExecuteOnCPU([r]),d=[];let f=r;if(h){if(p){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=J_(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=aO(r,c,i);d.push(f),u=Eu(u.length,o)}Au("sum",u,o);const[m,g]=Iu(f.shape,u);let y=m;s&&(y=Nu(m,l));const b=function(e,t,n,r){const s=Q(t),a=JR({inputs:{x:e},attrs:{shape:[Q(e.shape)/s,s]},backend:r}),i=nO(a,"float32","mean",r),o=JR({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of d)i.disposeIntermediateTensorInfo(e);return b}},QM={kernelName:vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=ie(a,s.shape);let u=l;const c=Su(u,o);let h=s;null!=c&&(h=lO({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Eu(u.length,s.shape.length)),Au("min",u,o);const[p,d]=Iu(h.shape,u),f=JR({inputs:{x:h},backend:n,attrs:{shape:[-1,Q(d)]}}),m=nO(f,f.dtype,"min",n);let g;return g=JR(i?{inputs:{x:m},backend:n,attrs:{shape:Nu(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},eL=GR({opSnippet:ER+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+$R+"\n  return result;\n",cpuKernelImpl:S_}),tL={kernelName:kn,backendName:"webgl",kernelFunc:eL};class nL{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=B$(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class rL{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=B$(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=tR("rc",r),l=tR("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const sL={kernelName:In,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,i=$e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rL(r.shape,s,a):new nL(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},aL=GR({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+$R+"\n  return result;\n"}),iL={kernelName:Nn,backendName:"webgl",kernelFunc:aL};class oL{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const lL=GR({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),uL={kernelName:$t,backendName:"webgl",kernelFunc:lL},cL="return a - b;",hL=GR({opSnippet:cL,packedOpSnippet:cL,supportsComplex:!0,cpuKernelImpl:X_}),pL={kernelName:Tr,backendName:"webgl",kernelFunc:hL};function dL(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=ie([a],s.shape),o=WM({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=Nu(o.shape,i),u=JR({inputs:{x:o},backend:n,attrs:{shape:l}}),c=hL({inputs:{a:s,b:u},backend:n}),h=RD({inputs:{x:c},backend:n}),p=iO({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),d=JR({inputs:{x:p},backend:n,attrs:{shape:l}}),f=lL({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),f}const fL={kernelName:gr,backendName:"webgl",kernelFunc:dL},mL={kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,l=o?s:dL({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new oL(u,c,a),p=[[i]],d=n.runWebGLProgram(h,[l],"int32",p);return o||n.disposeIntermediateTensorInfo(l),d}},gL=uR+"\n  return -x;\n",yL={kernelName:Cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=E_(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=$e().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new kR(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new lR(r.shape,gL),n.runWebGLProgram(s,[r],r.dtype)}},bL=Tp,xL={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){Hr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=bL(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},wL=$p,vL={kernelName:$n,backendName:"webgl",kernelFunc:function(e){Hr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:p,validOutputs:d}=wL(c,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},kL=_p,IL={kernelName:_n,backendName:"webgl",kernelFunc:function(e){Hr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),p=i,d=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=kL(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class NL{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const AL={kernelName:On,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:l}=r,u=Q(s.shape),c=new NL(u,i,o,l),h=JR({inputs:{x:s},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(c,[h],a);n.disposeIntermediateTensorInfo(h);const d=JR({inputs:{x:p},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(p),d}};function SL(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=dF({inputs:{input:r},backend:n}),t=SL({inputs:{x:e},backend:n}),s=EF({inputs:{input:r},backend:n}),a=SL({inputs:{x:s},backend:n}),i=FR({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return UD({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const CL={kernelName:zr,backendName:"webgl",kernelFunc:SL},EL={kernelName:Rn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=dF({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=EF({inputs:{input:s},backend:r}),i=SL({inputs:{x:a},backend:r}),o=FR({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return UD({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},TL={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return FD({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{Z(a,e.shape,"All tensors passed to stack must have matching shapes"),Y(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=_F({inputs:t.map((e=>{const t=FD({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class $L{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=B$(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class _L{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=B$(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=tR("rc",r),l=tR("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===r?2:4;e<t;e++)d+=`\n        ${h[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const RL=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;if(0===Q(s.shape)){const e=a.map(((e,t)=>e[0]+s.shape[t]+e[1]));return UD({backend:n,attrs:{shape:e,value:i,dtype:s.dtype}})}const o=$e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _L(s.shape,a,i):new $L(s.shape,a,i),l=[[i]];return n.runWebGLProgram(o,[s],s.dtype,l)},OL={kernelName:Dn,backendName:"webgl",kernelFunc:RL},FL=GR({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+$R+"\n  return result;\n"}),DL={kernelName:Mn,backendName:"webgl",kernelFunc:FL},ML={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=[],u=ie(a,s.shape);let c=u;const h=Su(c,o);let p,d=s;if(null!=h&&(d=lO({inputs:{x:s},backend:n,attrs:{perm:h}}),c=Eu(c.length,o),l.push(d)),Au("prod",c,o),n.shouldExecuteOnCPU([d])){const e=n.texData.get(d.dataId).values,{outVals:t,outShape:r,outDtype:s}=$_(d.shape,d.dtype,e,c);p=n.makeTensorInfo(r,s,t)}else{const[e,t]=Iu(d.shape,c),r=Q(t),a=JR({inputs:{x:d},backend:n,attrs:{shape:[-1,r]}}),i=nO(a,Xs(s.dtype),"prod",n);p=JR({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(a),l.push(i)}if(i){l.push(p);const e=Nu(p.shape,u);p=JR({inputs:{x:p},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},LL={kernelName:zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,l=s.map((e=>n.readSync(e.dataId))),u=s.map((e=>e.shape)),c=n.readSync(a.dataId),h=n.readSync(i.dataId),[p,d,f]=__(l,u,c,a.shape,a.dtype,h,i.shape,o),m=p.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,d);return m.concat([g])}},BL={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=R_(i,r.shape,r.dtype,o,s.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}},zL={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),h=n.readSync(i.dataId),p=o.map((e=>n.readSync(e.dataId))),d=o.map((e=>e.shape)),[f,m]=O_(u,s.shape,c,a.shape,a.dtype,h,i.shape,p,d,l);return n.makeTensorInfo(f,a.dtype,m)}},PL=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=F_(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},WL={kernelName:Vn,backendName:"webgl",kernelFunc:PL},VL=UR({opSnippet:"return 1.0 / x;"}),UL={kernelName:Gn,backendName:"webgl",kernelFunc:VL},GL=UR({opSnippet:uR+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),jL={kernelName:jn,backendName:"webgl",kernelFunc:GL},HL=UR({opSnippet:uR+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),qL={kernelName:Zn,backendName:"webgl",kernelFunc:HL};class KL{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class XL{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const YL={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=$e().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new XL(s.shape,l,u,a,i):new KL(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],"float32")}};class ZL{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const JL={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new ZL(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class QL{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class eB{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const tB={kernelName:qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=$e().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new eB(s.shape,l,u,a,i):new QL(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],s.dtype)}};class nB{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const rB={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new nB(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class sB{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=B$(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class aB{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=tR("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=B$(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const iB={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,i=s.shape.length,o=ie(a,s.shape);if(0===i)return RR({inputs:{x:s},backend:n});const l=$e().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new aB(s.shape,o):new sB(s.shape,o);return n.runWebGLProgram(l,[s],s.dtype)}};class oB{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const lB={kernelName:Vr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,l=new oB(r.shape,a),[u,c]=Sd(i,r.shape[1],r.shape[2]),h=[[u,c,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(l,[r],r.dtype,h)}},uB=UR({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),cB={kernelName:Qn,backendName:"webgl",kernelFunc:uB},hB=UR({opSnippet:"return inversesqrt(x);",cpuKernelImpl:D_}),pB={kernelName:er,backendName:"webgl",kernelFunc:hB};class dB{constructor(e,t,n,r,s,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const l=B$(s.length),u=B$(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let p="";1===r?p="i":2===r&&(p="i, coords[1]");const d=`getUpdates(${p})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides";this.userCode=`\n        ${l} strides = ${l}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${g};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(${m}, sum, float(found)));\n        }\n      `}}class fB{constructor(e,t,n,r,s,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const l=B$(s.length),u=B$(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let p="";1===r?p="i":2===r&&(p="i, coords[1]");const d=`getUpdates(${p})`;let f="";o&&(f="coords[0], coords[1]");const m=`getDefaultValue(${f})`,g=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${l} strides = ${l}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${h});\n              flattenedIndex += index.xz * ${g};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${y};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${d};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${m}, sum, found));\n        }\n      `}}const mB={kernelName:tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=zh(0,s,i),p=[h/u,u];if(0===h)return n.makeTensorInfo(i,s.dtype);const d=JR({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=JR({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=$e().getBool("WEBGL_PACK")?new fB(l,o,d.shape.length,f.shape.length,c,p):new dB(l,o,d.shape.length,f.shape.length,c,p);const y=n.runWebGLProgram(g,[f,d,m],f.dtype),b=JR({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class gB{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===$e().getNumber("WEBGL_VERSION")?"while (left < right) {":s,i="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const yB={kernelName:rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=new gB(s.shape[0],s.shape[1],a.shape[1],i),l=[[s.shape[1]]];return n.runWebGLProgram(o,[s,a],"int32",l)}};class bB{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=B$(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const xB={kernelName:sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new bB(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],Ks(s.dtype,a.dtype))}},wB=UR({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Od};\n  float scale = ${Fd};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),vB={kernelName:ar,backendName:"webgl",kernelFunc:wB},kB=UR({opSnippet:VR+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:L_}),IB={kernelName:cr,backendName:"webgl",kernelFunc:kB},NB=UR({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),AB={kernelName:ur,backendName:"webgl",kernelFunc:NB},SB=UR({opSnippet:VR+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${$R}\n  return result;\n`}),CB={kernelName:or,backendName:"webgl",kernelFunc:SB},EB=UR({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),TB={kernelName:lr,backendName:"webgl",kernelFunc:EB},$B=UR({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),_B={kernelName:hr,backendName:"webgl",kernelFunc:$B},RB={kernelName:fr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;Y(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<s.shape.length;++e)l.push([0,0]);const u=[],c=RL({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=Cd(c.shape,a,o,!1),p=Ed(h.length,a.length,!1),d=Td(c.shape,a,o,!1),f=JR({inputs:{x:c},backend:n,attrs:{shape:h}}),m=lO({inputs:{x:f},backend:n,attrs:{perm:p}}),g=JR({inputs:{x:m},backend:n,attrs:{shape:d}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},OB={kernelName:yr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,p,d,f,m]=P_(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],s.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},FB={kernelName:br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=W_(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},DB={kernelName:xr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=V_(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},MB={kernelName:wr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=V_(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},LB={kernelName:vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:p}=zh(0,s,o),d=!1;if("string"===a.dtype){const e=n.bufferSync(s),t=n.bufferSync(a),r=vs(n.readSync(i.dataId)[0]),f=M_(e,t,o,p,c,u,l,h,r,d);return n.makeTensorInfo(o,f.dtype,f.values)}const f=new dB(u,l,s.shape.length,a.shape.length,h,[p,1],d),m=n.runWebGLProgram(f,[a,s,i],a.dtype),g=JR({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),g}},BB={kernelName:mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=ie(i,s.shape)[0],l=af(s,a,o),u=s.shape.length,c=new Array(u).fill(0),h=s.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const r=aF({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},zB="return sqrt(x);",PB=UR({opSnippet:zB,packedOpSnippet:zB,cpuKernelImpl:U_}),WB={kernelName:pr,backendName:"webgl",kernelFunc:PB},VB={kernelName:Ir,backendName:"webgl",kernelFunc:UR({opSnippet:"return x * x;"})},UB="return (a - b) * (a - b);",GB=GR({opSnippet:UB,packedOpSnippet:UB}),jB={kernelName:kr,backendName:"webgl",kernelFunc:GB},HB={kernelName:Nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const a=kf(n.readSync(s.dataId)),i=G_(a,"string",r);return n.makeTensorInfo(s.shape,"string",i)}},qB={kernelName:Pr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=uR+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new lR(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class KB{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=B$(n.length),a=B$(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const XB={kernelName:Ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=Jo(s.shape,a,i,o,l,u,c,h,p);let v;if(m)v=JR({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){Y(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=zo(b,x,w),t=aF({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});v=JR({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=$i(s.shape,s.dtype,e),r=j_(d,t,w,b);v=n.makeTensorInfo(f,s.dtype,r.values)}else{const e=new KB(b,w,d);v=n.runWebGLProgram(e,[s],s.dtype)}const k=JR({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),k}},YB={kernelName:Sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,p=n.readSync(c.dataId),d=n.readSync(h.dataId),[f,m]=H_(p,d,s,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},ZB={kernelName:Cr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),l=n.readSync(i.dataId)[0],[u,c,h]=q_(o,l,s),p=c.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},JB={kernelName:Er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=K_(i,s);return n.makeTensorInfo(a.shape,"int32",o)}},QB=UR({opSnippet:"return tan(x);"}),ez={kernelName:$r,backendName:"webgl",kernelFunc:QB},tz=UR({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),nz={kernelName:_r,backendName:"webgl",kernelFunc:tz},rz={kernelName:nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:s,indices:a,updates:i}=t,{}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=zh(0,a,s.shape),p=[h/u,u];if(0===h)return n.makeTensorInfo(s.shape,a.dtype);const d=JR({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=JR({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=JR({inputs:{x:s},backend:n,attrs:{shape:p}}),g=new dB(l,o,d.shape.length,f.shape.length,c,p,!1,!0),y=n.runWebGLProgram(g,[f,d,m],m.dtype),b=JR({inputs:{x:y},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}};class sz{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=B$(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function az(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>vs(e))):e,r=$i(s.shape,s.dtype,t),i=Y_(r,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new sz(s.shape,a);return n.runWebGLProgram(i,[s],s.dtype)}const iz={kernelName:Rr,backendName:"webgl",kernelFunc:az};class oz{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class lz{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function uz(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function cz(e){let t=1;for(;t<e;)t*=2;return t}const hz={kernelName:Or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,o=$e().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=$e().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=s.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([s])||c<o||a>l){const e=n.readSync(s.dataId),[t,r]=Z_(e,u,s.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===a)return u[u.length-1]=0,[n.makeTensorInfo(u,s.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[s,UD({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),p=null!==h&&h.isPacked,d=p?n.unpackTensor(s):s,f=Q(u)/c,m=JR({inputs:{x:d},attrs:{shape:[f,c]},backend:n});p&&uz(n,d);const g=cz(a),y=cz(c);let b=null;const x=()=>null===b?[m,m]:[m,b],w=(e,t,r)=>{const s=x(),a=new oz(r),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(a,s,"int32",i),uz(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=x(),r=new lz([f,e/2]),s=[[c],[null===b?1:0],[g]],a=b;b=n.runWebGLProgram(r,t,"int32",s),uz(n,a);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,b.shape)}let v=b;b=aF({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,a]}}),uz(n,v);let k=lM({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});uz(n,m);const I=u.slice(0,-1);I.push(a),v=b,b=JR({inputs:{x:b},attrs:{shape:I},backend:n}),uz(n,v);const N=k;return k=JR({inputs:{x:k},attrs:{shape:I},backend:n}),uz(n,N),[k,b]}};class pz{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const dz={kernelName:Fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,p,d]=s.shape,[f,m]=null!=u?u:[h,p],g=new pz(h,p,i,o,l,[c,f,m,d]);return n.runWebGLProgram(g,[s,a],"float32")}},fz={kernelName:Mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;v$(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=Q_(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},mz={kernelName:Lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,l=s.shape[a],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(u[c++]=i.shape[e]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[a]=1;const f=new Array(l);for(let e=0;e<f.length;e++){p[a]=e;const t=aF({inputs:{x:i},backend:n,attrs:{begin:p,size:d}}),r=JR({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class gz{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const yz={kernelName:Br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r,o=s.shape.length,l=[];let u=0;const c=Su([u],o);let h=s;null!=c&&(h=lO({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(h),u=Eu(1,o)[0]);const p=wf(h.shape,u,i),d=Q([h.shape[u]]),f=JR({inputs:{x:h},backend:n,attrs:{shape:[-1,d]}});l.push(f);const m=Xs(s.dtype),g=(e,t,r,s,a)=>{const i=e.shape[0],o=e.shape[1],u=xf(o,a),c=new gz({windowSize:u,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,r],s);if(l.push(h),h.shape[1]===a)return h;const p=PL({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),d=az({inputs:{x:p},backend:n,attrs:{reps:[o/u]}});return l.push(p),l.push(d),g(h,t,d,s,a)},y=JR({inputs:{x:g(f,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:p}});let b=y;if(null!=c){l.push(y);const e=Cu(c);b=lO({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},bz=[pO,fO,gO,bO,vO,NO,AO,SO,RO,OO,DO,LO,zO,WO,UO,HO,qO,YO,ZO,JO,tF,oF,lF,uF,cF,mF,bF,vF,DR,NF,RF,PF,jF,qF,KF,XF,YF,JF,eD,nD,lD,uD,cD,pD,mD,bD,xD,vD,ID,ND,SD,CD,TD,_D,OD,DD,BD,WD,GD,HD,XD,ZD,eM,rM,sM,iM,uM,hM,dM,OR,fM,TF,gM,bM,wM,BR,kM,NM,AM,CM,TM,_M,OM,DM,BM,PM,VM,GM,jM,HM,XM,YM,ZM,JM,QM,tL,sL,iL,mL,ZR,yL,xL,vL,IL,pF,AL,EL,TL,OL,DL,WR,ML,LL,BL,zL,WL,fF,uL,UL,jL,qL,QR,YL,JL,tB,rB,iB,lB,cB,pB,mB,yB,xB,vB,IB,AB,CB,TB,iF,fL,_B,RB,OB,FB,DB,MB,LB,BB,WB,VB,jB,HB,qB,XB,YB,ZB,JB,pL,oO,ez,nz,rz,iz,hz,dz,uO,fz,mz,yz,CL];for(const e of bz)Qr(e);function xz(e){return xz="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},xz(e)}function wz(){wz=function(){return t};var e,t={},n=Object.prototype,r=n.hasOwnProperty,s=Object.defineProperty||function(e,t,n){e[t]=n.value},a="function"==typeof Symbol?Symbol:{},i=a.iterator||"@@iterator",o=a.asyncIterator||"@@asyncIterator",l=a.toStringTag||"@@toStringTag";function u(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,n){return e[t]=n}}function c(e,t,n,r){var a=t&&t.prototype instanceof y?t:y,i=Object.create(a.prototype),o=new $(r||[]);return s(i,"_invoke",{value:S(e,n,o)}),i}function h(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=c;var p="suspendedStart",d="suspendedYield",f="executing",m="completed",g={};function y(){}function b(){}function x(){}var w={};u(w,i,(function(){return this}));var v=Object.getPrototypeOf,k=v&&v(v(_([])));k&&k!==n&&r.call(k,i)&&(w=k);var I=x.prototype=y.prototype=Object.create(w);function N(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function A(e,t){function n(s,a,i,o){var l=h(e[s],e,a);if("throw"!==l.type){var u=l.arg,c=u.value;return c&&"object"==xz(c)&&r.call(c,"__await")?t.resolve(c.__await).then((function(e){n("next",e,i,o)}),(function(e){n("throw",e,i,o)})):t.resolve(c).then((function(e){u.value=e,i(u)}),(function(e){return n("throw",e,i,o)}))}o(l.arg)}var a;s(this,"_invoke",{value:function(e,r){function s(){return new t((function(t,s){n(e,r,t,s)}))}return a=a?a.then(s,s):s()}})}function S(t,n,r){var s=p;return function(a,i){if(s===f)throw Error("Generator is already running");if(s===m){if("throw"===a)throw i;return{value:e,done:!0}}for(r.method=a,r.arg=i;;){var o=r.delegate;if(o){var l=C(o,r);if(l){if(l===g)continue;return l}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(s===p)throw s=m,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);s=f;var u=h(t,n,r);if("normal"===u.type){if(s=r.done?m:d,u.arg===g)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(s=m,r.method="throw",r.arg=u.arg)}}}function C(t,n){var r=n.method,s=t.iterator[r];if(s===e)return n.delegate=null,"throw"===r&&t.iterator.return&&(n.method="return",n.arg=e,C(t,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),g;var a=h(s,t.iterator,n.arg);if("throw"===a.type)return n.method="throw",n.arg=a.arg,n.delegate=null,g;var i=a.arg;return i?i.done?(n[t.resultName]=i.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,g):i:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,g)}function E(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function T(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function $(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(E,this),this.reset(!0)}function _(t){if(t||""===t){var n=t[i];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var s=-1,a=function n(){for(;++s<t.length;)if(r.call(t,s))return n.value=t[s],n.done=!1,n;return n.value=e,n.done=!0,n};return a.next=a}}throw new TypeError(xz(t)+" is not iterable")}return b.prototype=x,s(I,"constructor",{value:x,configurable:!0}),s(x,"constructor",{value:b,configurable:!0}),b.displayName=u(x,l,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===b||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,x):(e.__proto__=x,u(e,l,"GeneratorFunction")),e.prototype=Object.create(I),e},t.awrap=function(e){return{__await:e}},N(A.prototype),u(A.prototype,o,(function(){return this})),t.AsyncIterator=A,t.async=function(e,n,r,s,a){void 0===a&&(a=Promise);var i=new A(c(e,n,r,s),a);return t.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},N(I),u(I,l,"Generator"),u(I,i,(function(){return this})),u(I,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),n=[];for(var r in t)n.push(r);return n.reverse(),function e(){for(;n.length;){var r=n.pop();if(r in t)return e.value=r,e.done=!1,e}return e.done=!0,e}},t.values=_,$.prototype={constructor:$,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(T),!t)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function s(r,s){return o.type="throw",o.arg=t,n.next=r,s&&(n.method="next",n.arg=e),!!s}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],o=i.completion;if("root"===i.tryLoc)return s("end");if(i.tryLoc<=this.prev){var l=r.call(i,"catchLoc"),u=r.call(i,"finallyLoc");if(l&&u){if(this.prev<i.catchLoc)return s(i.catchLoc,!0);if(this.prev<i.finallyLoc)return s(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return s(i.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return s(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var s=this.tryEntries[n];if(s.tryLoc<=this.prev&&r.call(s,"finallyLoc")&&this.prev<s.finallyLoc){var a=s;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,g):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),T(n),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var s=r.arg;T(n)}return s}}throw Error("illegal catch attempt")},delegateYield:function(t,n,r){return this.delegate={iterator:_(t),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=e),g}},t}function vz(e,t,n,r,s,a,i){try{var o=e[a](i),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(r,s)}function kz(e){return function(){var t=this,n=arguments;return new Promise((function(r,s){var a=e.apply(t,n);function i(e){vz(a,r,s,i,o,"next",e)}function o(e){vz(a,r,s,i,o,"throw",e)}i(void 0)}))}}function Iz(e){return Iz="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Iz(e)}function Nz(){Nz=function(){return t};var e,t={},n=Object.prototype,r=n.hasOwnProperty,s=Object.defineProperty||function(e,t,n){e[t]=n.value},a="function"==typeof Symbol?Symbol:{},i=a.iterator||"@@iterator",o=a.asyncIterator||"@@asyncIterator",l=a.toStringTag||"@@toStringTag";function u(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,n){return e[t]=n}}function c(e,t,n,r){var a=t&&t.prototype instanceof y?t:y,i=Object.create(a.prototype),o=new $(r||[]);return s(i,"_invoke",{value:S(e,n,o)}),i}function h(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=c;var p="suspendedStart",d="suspendedYield",f="executing",m="completed",g={};function y(){}function b(){}function x(){}var w={};u(w,i,(function(){return this}));var v=Object.getPrototypeOf,k=v&&v(v(_([])));k&&k!==n&&r.call(k,i)&&(w=k);var I=x.prototype=y.prototype=Object.create(w);function N(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function A(e,t){function n(s,a,i,o){var l=h(e[s],e,a);if("throw"!==l.type){var u=l.arg,c=u.value;return c&&"object"==Iz(c)&&r.call(c,"__await")?t.resolve(c.__await).then((function(e){n("next",e,i,o)}),(function(e){n("throw",e,i,o)})):t.resolve(c).then((function(e){u.value=e,i(u)}),(function(e){return n("throw",e,i,o)}))}o(l.arg)}var a;s(this,"_invoke",{value:function(e,r){function s(){return new t((function(t,s){n(e,r,t,s)}))}return a=a?a.then(s,s):s()}})}function S(t,n,r){var s=p;return function(a,i){if(s===f)throw Error("Generator is already running");if(s===m){if("throw"===a)throw i;return{value:e,done:!0}}for(r.method=a,r.arg=i;;){var o=r.delegate;if(o){var l=C(o,r);if(l){if(l===g)continue;return l}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(s===p)throw s=m,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);s=f;var u=h(t,n,r);if("normal"===u.type){if(s=r.done?m:d,u.arg===g)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(s=m,r.method="throw",r.arg=u.arg)}}}function C(t,n){var r=n.method,s=t.iterator[r];if(s===e)return n.delegate=null,"throw"===r&&t.iterator.return&&(n.method="return",n.arg=e,C(t,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),g;var a=h(s,t.iterator,n.arg);if("throw"===a.type)return n.method="throw",n.arg=a.arg,n.delegate=null,g;var i=a.arg;return i?i.done?(n[t.resultName]=i.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,g):i:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,g)}function E(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function T(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function $(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(E,this),this.reset(!0)}function _(t){if(t||""===t){var n=t[i];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var s=-1,a=function n(){for(;++s<t.length;)if(r.call(t,s))return n.value=t[s],n.done=!1,n;return n.value=e,n.done=!0,n};return a.next=a}}throw new TypeError(Iz(t)+" is not iterable")}return b.prototype=x,s(I,"constructor",{value:x,configurable:!0}),s(x,"constructor",{value:b,configurable:!0}),b.displayName=u(x,l,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===b||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,x):(e.__proto__=x,u(e,l,"GeneratorFunction")),e.prototype=Object.create(I),e},t.awrap=function(e){return{__await:e}},N(A.prototype),u(A.prototype,o,(function(){return this})),t.AsyncIterator=A,t.async=function(e,n,r,s,a){void 0===a&&(a=Promise);var i=new A(c(e,n,r,s),a);return t.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},N(I),u(I,l,"Generator"),u(I,i,(function(){return this})),u(I,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),n=[];for(var r in t)n.push(r);return n.reverse(),function e(){for(;n.length;){var r=n.pop();if(r in t)return e.value=r,e.done=!1,e}return e.done=!0,e}},t.values=_,$.prototype={constructor:$,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(T),!t)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function s(r,s){return o.type="throw",o.arg=t,n.next=r,s&&(n.method="next",n.arg=e),!!s}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],o=i.completion;if("root"===i.tryLoc)return s("end");if(i.tryLoc<=this.prev){var l=r.call(i,"catchLoc"),u=r.call(i,"finallyLoc");if(l&&u){if(this.prev<i.catchLoc)return s(i.catchLoc,!0);if(this.prev<i.finallyLoc)return s(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return s(i.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return s(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var s=this.tryEntries[n];if(s.tryLoc<=this.prev&&r.call(s,"finallyLoc")&&this.prev<s.finallyLoc){var a=s;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,g):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),T(n),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var s=r.arg;T(n)}return s}}throw Error("illegal catch attempt")},delegateYield:function(t,n,r){return this.delegate={iterator:_(t),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=e),g}},t}function Az(e,t,n,r,s,a,i){try{var o=e[a](i),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(r,s)}function Sz(e){return function(){var t=this,n=arguments;return new Promise((function(r,s){var a=e.apply(t,n);function i(e){Az(a,r,s,i,o,"next",e)}function o(e){Az(a,r,s,i,o,"throw",e)}i(void 0)}))}}var Cz={render:function(){return Sz(Nz().mark((function e(){return Nz().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",'\n    <div id="containerHome">\n        <div class="intro">\n        <img src="./public/images/R_Kuning.png" id="kuning">\n        <img src="./public/images/R_Biru.png" id="biru">\n        <h1>KLASIFIKASI SAMPAH</h1>\n        <p>Website ini menggunakan teknologi machine learning untuk membantu Anda mengklasifikasikan sampah yang ingin dibuang menjadi tiga kategori: organik, anorganik, dan sampah berbahaya. Dengan ini, kami berharap dapat mempermudah Anda dalam memilah sampah dengan benar dan mendukung upaya menjaga lingkungan</p>\n        <button id="btnMulai"><a href="#/klasifikasi">MULAI</a></button>\n        </div>\n        <div class="bckGroundHome">\n        <img src="./public/images/bg-1.png" alt="Garbage Separation Background">\n        </div>\n    </div>\n    ');case 1:case"end":return e.stop()}}),e)})))()},afterRender:function(){return Sz(Nz().mark((function e(){return Nz().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:case"end":return e.stop()}}),e)})))()}};const Ez={"/":Cz,"/home":Cz,"/klasifikasi":{render:function(){return kz(wz().mark((function e(){return wz().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",'\n    <div id="deskripsi">\n    <h2>Klasifikasikan</h2>\n  </div>\n  <div id="container">\n    <div id="containerFile">\n      <div id="file">\n        <div id="imagePreview"></div>\n        <label for="" id="logoFile"\n          ><img src="./public/images/logoFile.png" alt=""\n        /></label>\n        <input type="file" id="imageUpload" accept="image/*" />\n        <label for="" id="labelFile">Unggah Gambar</label>\n      </div>\n      <button id="buttonKlasifikasi">Pilih Gambar</button>\n    </div>\n\n    <div id="containerHasil"></div>\n  </div>\n        ');case 1:case"end":return e.stop()}}),e)})))()},afterRender:function(){return kz(wz().mark((function e(){var t,r,s,a,i,o,l,u,c,h,p,d,f;return wz().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:f=function(e){window.innerWidth<=600?(e.text.style.left="95px",e.text.style.fontSize="14px",e.text.style.top="7.5px"):e.text.style.left="150px"},d=function(){return(d=kz(wz().mark((function e(t,n){var s,a,o,u,h,p,d,m,g,y,b,x,w;return wz().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,l();case 2:return s=e.sent,a=c(),o=Fo(t).resizeNearestNeighbor([224,224]).toFloat().expandDims(),e.next=7,s.predict(o).data();case 7:u=e.sent,h=Array.from(u).map((function(e,t){return{probability:e,className:a[t]}})).sort((function(e,t){return t.probability-e.probability})).slice(0,3),console.log(h),p="",d="",m="",g="","Biologis"===n(h).className?(p="Organik",d="Sampah yang kategori organik biasanya terdiri dari sisa makanan dan daun-daunan yang dapat terurai secara alami.",m="#3E9900",g="<ul>\n    <li>Pemisahan di Sumber: Pastikan untuk memisahkan sampah organik dari anorganik ketika membuang sampah. Gunakan tempat sampah terpisah atau wadah yang berbeda untuk masing-masing jenis sampah ini.</li>\n    <li>Pengomposan: Sampah organik dapat diolah melalui pengomposan. Anda dapat menggunakan komposter untuk mengurai sisa-sisa makanan, daun, dan bahan organik lainnya menjadi kompos yang berguna untuk tanaman.</li>\n    <li>Penggunaan sebagai Pupuk Kompos: Sampah organik dapat diolah menjadi pupuk kompos yang berguna untuk tanaman. Hal ini dapat dilakukan dengan memasukkan tanah secukupnya ke wadah yang telah diisi sampah organik, lalu disiram dengan air dan diisi dengan arang.</li>\n    </ul>"):"Baterai"===n(h).className||"Sampah"===n(h).className||"Kaca Coklat"===n(h).className||"Kaca Hijau"===n(h).className||"Kaca Putih"===n(h).className?(p="Sampah Berbahaya",d="Sampah yang kategori sampah berbahaya mencakup bahan-bahan yang dapat membahayakan lingkungan atau kesehatan manusia, seperti baterai, limbah biologis, dan beberapa jenis kaca yang mengandung zat berbahaya.",m="#CD000E",g="<ul>\n        <li>Pemisahan di Sumber: Sampah berbahaya seperti kaca, kemasan detergen, atau pembasmi serangga harus dipisahkan secara khusus dalam satu wadah untuk meminimalisasi dampak yang mungkin ditimbulkan</li>\n        <li>Pengelolaan yang Tepat: Sampah berbahaya harus dikelola dengan tepat untuk mengurangi dampak negatifnya pada lingkungan. Contohnya, kaca dapat didaur ulang menjadi produk lain, sedangkan kemasan detergen dapat didaur ulang menjadi produk lain yang lebih ramah lingkungan</li>\n        </ul>"):(p="Anorganik",d="Sampah yang kategori anorganik meliputi bahan-bahan seperti logam, plastik, kaca, dan kertas yang tidak dapat terurai secara alami dan membutuhkan pengolahan khusus.",m="#ECB500",g="<ul>\n    <li>Pemisahan di Sumber: Memisahkan sampah anorganik dari organik ketika membuang sampah juga sangat penting. Gunakan tempat sampah terpisah atau wadah yang berbeda untuk masing-masing jenis sampah ini.</li>\n    <li>Daur Ulang: Sampah anorganik dapat diolah melalui proses daur ulang yang sesuai dengan jenisnya. Contohnya, kertas dapat didaur ulang menjadi kertas yang baru, sedangkan plastik dapat didaur ulang menjadi produk lain.</li>\n    <li>Penggunaan sebagai Kerajinan Daur Ulang: Sampah anorganik dapat diolah menjadi kerajinan daur ulang yang berguna, seperti produk kerajinan dari kertas, kaleng, atau plastik</li>\n    </ul>"),i.innerHTML='\n  <div id="headHasil">\n          <div class="hasilKlasifikasi">\n            <button id="hasilKlasifikasi">Hasil</button>\n          </div>\n          <div class="penagulangan">\n            <button id="penagulangan">Penagulangan</button>\n          </div>\n        </div>\n        <div id="hasil">\n            <div class="hasil" style="background-color : '.concat(m,'; border-radius:25px 25px 0 0; color:white">\n            <h2>Hasil Klasifikasi</h2>\n            </div>\n        <hr />\n        <table>\n        <tr>\n          <th>Kategori</th>\n          <th>: ').concat(p,"</th>\n        </tr>\n        <tr>\n          <th>Jenis</th>\n          <th>: ").concat(n(h).className,'</th>\n        </tr>\n        <tr>\n          <th>Kecocokan</th>\n          <th id="progresBar">: </th>\n        </tr>\n        </table>\n        <hr/>\n        <p>\n        ').concat(d,"\n        </p>\n        </div>\n  "),y=document.getElementById("progresBar"),b=new r.Line(y,{strokeWidth:4,easing:"easeInOut",duration:1400,color:"".concat(m),trailColor:"#afabab",trailWidth:1,svgStyle:{width:"90%",height:"13px"},text:{style:{color:"white",backgroundColor:"transparent",position:"absolute",left:"150px",top:"15px",fontSize:"17px",padding:0,margin:0,transform:null},autoStyleContainer:!1},from:{color:"#FFEA82"},to:{color:"#ED6A5A"},step:function(e,t){t.setText(Math.round(100*t.value())+" %")}}),x=document.getElementById("penagulangan"),w=document.getElementById("hasil"),x.addEventListener("click",(function(){w.innerHTML='\n    <div class="hasil" style="background-color : '.concat(m,'; border-radius:25px 25px 0 0; color:white">\n            <h2>Cara Penagulangan</h2>\n            </div>\n        <hr />\n        ').concat(g,"\n        \n    ")})),document.getElementById("hasilKlasifikasi").addEventListener("click",(function(){w.innerHTML='\n    <div class="hasil" style="background-color : '.concat(m,'; border-radius:25px 25px 0 0; color:white">\n            <h2>Hasil Klasifikasi</h2>\n            </div>\n        <hr />\n        <table>\n        <tr>\n          <th>Kategori</th>\n          <th>: ').concat(p,"</th>\n        </tr>\n        <tr>\n          <th>Jenis</th>\n          <th>: ").concat(n(h).className,'</th>\n        </tr>\n        <tr>\n          <th>Kecocokan</th>\n          <th id="progresBar2">: </th>\n        </tr>\n        </table>\n        <hr/>\n        <p>\n        ').concat(d,"\n        </p>\n    ");var e=document.getElementById("progresBar2"),t=new r.Line(e,{strokeWidth:4,easing:"easeInOut",duration:1400,color:"".concat(m),trailColor:"#afabab",trailWidth:1,svgStyle:{width:"90%",height:"13px"},text:{style:{color:"white",backgroundColor:"transparent",position:"absolute",left:"150px",top:"15px",fontSize:"17px",padding:0,margin:0,transform:null},autoStyleContainer:!1},from:{color:"#FFEA82"},to:{color:"#ED6A5A"},step:function(e,t){t.setText(Math.round(100*t.value())+" %")}});window.addEventListener("resize",(function(){return f(t)})),f(t),t.animate(n(h).probability/100)})),window.addEventListener("resize",(function(){return f(b)})),f(b),b.animate(n(h).probability/100);case 26:case"end":return e.stop()}}),e)})))).apply(this,arguments)},p=function(e,t){return d.apply(this,arguments)},h=function(e){for(var t,n=0,r=0;r<e.length;r++)console.log(e),n<e[r].probability&&(n=e[r].probability,t=e[r].className);return{className:t,probability:parseInt(100*n)}},c=function(){return{0:"Baterai",1:"Biologis",2:"Kaca Coklat",3:"Kardus",4:"Pakaian",5:"Kaca Hijau",6:"Logam",7:"Kertas",8:"Plastik",9:"Sepatu",10:"Sampah",11:"Kaca Putih"}},u=function(){return(u=kz(wz().mark((function e(){var t;return wz().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=Fk("/public/model/model.json"),e.prev=1,e.next=4,t;case 4:e.next=9;break;case 6:throw e.prev=6,e.t0=e.catch(1),new Error("Model tidak ditemukan");case 9:return e.abrupt("return",t);case 10:case"end":return e.stop()}}),e,null,[[1,6]])})))).apply(this,arguments)},l=function(){return u.apply(this,arguments)},t=null,r=n(941),console.log(r),s=document.getElementById("imageUpload"),a=document.getElementById("buttonKlasifikasi"),i=document.getElementById("containerHasil"),o=document.getElementById("file"),a.addEventListener("click",(function(){t?(a.classList.add("button-loading"),a.textContent="Loading ...",setTimeout(kz(wz().mark((function e(){return wz().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,p(t,h);case 2:console.log(i.hasChildNodes()),a.textContent="Klasifikasi",a.classList.remove("button-loading");case 5:case"end":return e.stop()}}),e)}))),1e3)):console.error("No image uploaded."),i.hasChildNodes()&&i.removeChild(i.lastChild)})),o.addEventListener("click",(function(){s.click()})),a.addEventListener("click",(function(){"Pilih Gambar"===a.textContent&&s.click()})),s.addEventListener("change",(function(e){var n=e.target.files[0];if(n){var r=new FileReader;r.onload=function(e){var n=document.getElementById("imagePreview"),r=document.createElement("img"),l=document.createElement("button"),u=document.getElementById("logoFile"),c=document.getElementById("labelFile");c.style.display="none",u.style.display="none",a.textContent="Klasifikasikan",a.style.backgroundColor="#FFC849",r.src=e.target.result,l.innerHTML='<i class="fa-solid fa-xmark"></i>',l.setAttribute("id","buttonExit"),r.setAttribute("width",o.clientWidth),r.setAttribute("height",o.clientHeight),r.style.borderRadius="25px",n.innerHTML="",n.appendChild(r),n.appendChild(l),(t=new Image).src=e.target.result,t.onload=function(){l.addEventListener("click",(function(e){e.stopPropagation(),n.innerHTML="<span></span>",a.style.backgroundColor="#ad9866",s.value="",c.style.display="block",u.style.display="block",a.textContent="Pilih Gambar",t=null,console.log(i.lastChild),i.innerHTML=""}))}},r.readAsDataURL(n)}}));case 18:case"end":return e.stop()}}),e)})))()}}},Tz={parseActiveUrlWithCombiner:function(){var e=window.location.hash.slice(1).toLowerCase(),t=this._urlSplitter(e);return this._urlCombiner(t)},parseActiveUrlWithoutCombiner:function(){var e=window.location.hash.slice(1).toLowerCase();return this._urlSplitter(e)},_urlSplitter:function(e){var t=e.split("/");return{resource:t[1]||null,id:t[2]||null,verb:t[3]||null}},_urlCombiner:function(e){return(e.resource?"/".concat(e.resource):"/")+(e.id?"/:id":"")+(e.verb?"/".concat(e.verb):"")}},$z=function(e){var t=e.button,n=e.drawer,r=e.content;t.addEventListener("click",(function(e){n.style.display="block"===n.style.display?"none":"block",t.querySelector("i").classList.contains("fa-bars")?t.querySelector("i").classList.replace("fa-bars","fa-xmark"):t.querySelector("i").classList.replace("fa-xmark","fa-bars"),e.stopPropagation()})),r.addEventListener("click",(function(e){"block"===n.style.display&&(n.style.display="none",t.querySelector("i").classList.contains("fa-xmark")&&t.querySelector("i").classList.replace("fa-xmark","fa-bars"))}))};function _z(e){return _z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_z(e)}function Rz(){Rz=function(){return t};var e,t={},n=Object.prototype,r=n.hasOwnProperty,s=Object.defineProperty||function(e,t,n){e[t]=n.value},a="function"==typeof Symbol?Symbol:{},i=a.iterator||"@@iterator",o=a.asyncIterator||"@@asyncIterator",l=a.toStringTag||"@@toStringTag";function u(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,n){return e[t]=n}}function c(e,t,n,r){var a=t&&t.prototype instanceof y?t:y,i=Object.create(a.prototype),o=new $(r||[]);return s(i,"_invoke",{value:S(e,n,o)}),i}function h(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=c;var p="suspendedStart",d="suspendedYield",f="executing",m="completed",g={};function y(){}function b(){}function x(){}var w={};u(w,i,(function(){return this}));var v=Object.getPrototypeOf,k=v&&v(v(_([])));k&&k!==n&&r.call(k,i)&&(w=k);var I=x.prototype=y.prototype=Object.create(w);function N(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function A(e,t){function n(s,a,i,o){var l=h(e[s],e,a);if("throw"!==l.type){var u=l.arg,c=u.value;return c&&"object"==_z(c)&&r.call(c,"__await")?t.resolve(c.__await).then((function(e){n("next",e,i,o)}),(function(e){n("throw",e,i,o)})):t.resolve(c).then((function(e){u.value=e,i(u)}),(function(e){return n("throw",e,i,o)}))}o(l.arg)}var a;s(this,"_invoke",{value:function(e,r){function s(){return new t((function(t,s){n(e,r,t,s)}))}return a=a?a.then(s,s):s()}})}function S(t,n,r){var s=p;return function(a,i){if(s===f)throw Error("Generator is already running");if(s===m){if("throw"===a)throw i;return{value:e,done:!0}}for(r.method=a,r.arg=i;;){var o=r.delegate;if(o){var l=C(o,r);if(l){if(l===g)continue;return l}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(s===p)throw s=m,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);s=f;var u=h(t,n,r);if("normal"===u.type){if(s=r.done?m:d,u.arg===g)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(s=m,r.method="throw",r.arg=u.arg)}}}function C(t,n){var r=n.method,s=t.iterator[r];if(s===e)return n.delegate=null,"throw"===r&&t.iterator.return&&(n.method="return",n.arg=e,C(t,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),g;var a=h(s,t.iterator,n.arg);if("throw"===a.type)return n.method="throw",n.arg=a.arg,n.delegate=null,g;var i=a.arg;return i?i.done?(n[t.resultName]=i.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,g):i:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,g)}function E(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function T(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function $(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(E,this),this.reset(!0)}function _(t){if(t||""===t){var n=t[i];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var s=-1,a=function n(){for(;++s<t.length;)if(r.call(t,s))return n.value=t[s],n.done=!1,n;return n.value=e,n.done=!0,n};return a.next=a}}throw new TypeError(_z(t)+" is not iterable")}return b.prototype=x,s(I,"constructor",{value:x,configurable:!0}),s(x,"constructor",{value:b,configurable:!0}),b.displayName=u(x,l,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===b||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,x):(e.__proto__=x,u(e,l,"GeneratorFunction")),e.prototype=Object.create(I),e},t.awrap=function(e){return{__await:e}},N(A.prototype),u(A.prototype,o,(function(){return this})),t.AsyncIterator=A,t.async=function(e,n,r,s,a){void 0===a&&(a=Promise);var i=new A(c(e,n,r,s),a);return t.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},N(I),u(I,l,"Generator"),u(I,i,(function(){return this})),u(I,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),n=[];for(var r in t)n.push(r);return n.reverse(),function e(){for(;n.length;){var r=n.pop();if(r in t)return e.value=r,e.done=!1,e}return e.done=!0,e}},t.values=_,$.prototype={constructor:$,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(T),!t)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function s(r,s){return o.type="throw",o.arg=t,n.next=r,s&&(n.method="next",n.arg=e),!!s}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],o=i.completion;if("root"===i.tryLoc)return s("end");if(i.tryLoc<=this.prev){var l=r.call(i,"catchLoc"),u=r.call(i,"finallyLoc");if(l&&u){if(this.prev<i.catchLoc)return s(i.catchLoc,!0);if(this.prev<i.finallyLoc)return s(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return s(i.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return s(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var s=this.tryEntries[n];if(s.tryLoc<=this.prev&&r.call(s,"finallyLoc")&&this.prev<s.finallyLoc){var a=s;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,g):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),T(n),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var s=r.arg;T(n)}return s}}throw Error("illegal catch attempt")},delegateYield:function(t,n,r){return this.delegate={iterator:_(t),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=e),g}},t}function Oz(e,t,n,r,s,a,i){try{var o=e[a](i),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(r,s)}function Fz(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Dz(r.key),r)}}function Dz(e){var t=function(e,t){if("object"!=_z(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!=_z(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==_z(t)?t:t+""}var Mz=new(function(){return t=function e(t){var n=t.button,r=t.drawer,s=t.content;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._content=s,this._button=n,this._drawer=r,this._initialAppShell()},n=[{key:"_initialAppShell",value:function(){$z({button:this._button,drawer:this._drawer,content:this._content})}},{key:"renderPage",value:(e=Rz().mark((function e(){var t,n;return Rz().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=Tz.parseActiveUrlWithCombiner(),n=Ez[t],e.next=4,n.render();case 4:return this._content.innerHTML=e.sent,e.next=7,n.afterRender();case 7:case"end":return e.stop()}}),e,this)})),r=function(){var t=this,n=arguments;return new Promise((function(r,s){var a=e.apply(t,n);function i(e){Oz(a,r,s,i,o,"next",e)}function o(e){Oz(a,r,s,i,o,"throw",e)}i(void 0)}))},function(){return r.apply(this,arguments)})}],n&&Fz(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),t;var e,t,n,r}())({button:document.getElementById("btnHamburger"),drawer:document.getElementById("link2"),content:document.getElementById("main")});window.addEventListener("hashchange",(function(){Mz.renderPage()})),window.addEventListener("load",(function(){Mz.renderPage()}))})()})();
//# sourceMappingURL=app.bundle.js.map